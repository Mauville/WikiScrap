<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.6/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.6/ http://www.mediawiki.org/xml/export-0.6.xsd" version="0.6" xml:lang="en">
  <siteinfo>
    <sitename>Wikia API Wiki</sitename>
    <base>http://api.wikia.com/wiki/Wikia_API_Wiki</base>
    <generator>MediaWiki 1.19.10</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikia API Wiki</namespace>
      <namespace key="5" case="first-letter">Wikia API Wiki talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="110" case="first-letter">Forum</namespace>
      <namespace key="111" case="first-letter">Forum talk</namespace>
      <namespace key="500" case="first-letter">User blog</namespace>
      <namespace key="501" case="first-letter">User blog comment</namespace>
      <namespace key="502" case="first-letter">Blog</namespace>
      <namespace key="503" case="first-letter">Blog talk</namespace>
      <namespace key="700" case="first-letter">Top 10 list</namespace>
      <namespace key="701" case="first-letter">Top 10 list talk</namespace>
      <namespace key="1200" case="first-letter">Message Wall</namespace>
      <namespace key="1201" case="first-letter">Thread</namespace>
      <namespace key="1202" case="first-letter">Message Wall Greeting</namespace>
      <namespace key="2000" case="first-letter">Board</namespace>
      <namespace key="2001" case="first-letter">Board Thread</namespace>
      <namespace key="2002" case="first-letter">Topic</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Main Page</title>
    <ns>0</ns>
    <id>2042</id>
    <redirect title="Wikia API Wiki" />
      <sha1>rwp2ftcxd2vv5whdoaq09q3f9gh3nj6</sha1>
    <revision>
      <id>3902</id>
      <timestamp>2011-08-16T19:58:28Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <comment>moved [[Main Page]] to [[Wikia API Wiki]]: SEO</comment>
      <text xml:space="preserve" bytes="28">#REDIRECT [[Wikia API Wiki]]</text>
    </revision>
  </page>
  <page>
    <title>Blog:Recent posts</title>
    <ns>502</ns>
    <id>1988</id>
      <sha1>loh1m27hln5mi35oc3rjjp2emdxoxu7</sha1>
    <revision>
      <id>3727</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="130">&lt;bloglist summary=&quot;true&quot; timestamp=&quot;true&quot; count=50&gt;
&lt;title&gt;Recent posts&lt;/title&gt;
&lt;type&gt;plain&lt;/type&gt;
&lt;order&gt;date&lt;/order&gt;
&lt;/bloglist&gt;</text>
    </revision>
  </page>
  <page>
    <title>Board:General Discussion</title>
    <ns>2000</ns>
    <id>2692</id>
      <sha1>p6xv9m24qimt6ar53ahuwqgiqnh7xkh</sha1>
    <revision>
      <id>5211</id>
      <timestamp>2013-10-18T03:20:33Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Created page with &quot;This board is for general conversations about the wiki.&quot;</comment>
      <text xml:space="preserve" bytes="55">This board is for general conversations about the wiki.</text>
    </revision>
    <revision>
      <id>5225</id>
      <timestamp>2013-11-07T20:42:42Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="56">This board is for general conversations about Wikia API.</text>
    </revision>
  </page>
  <page>
    <title>Board:News and Announcements</title>
    <ns>2000</ns>
    <id>2693</id>
      <sha1>dqnelwngmfidh9runwqf48x4qd1fwp6</sha1>
    <revision>
      <id>5212</id>
      <timestamp>2013-10-18T03:20:33Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Created page with &quot;Breaking news and information!&quot;</comment>
      <text xml:space="preserve" bytes="30">Breaking news and information!</text>
    </revision>
  </page>
  <page>
    <title>Board:Questions and Answers</title>
    <ns>2000</ns>
    <id>2695</id>
      <sha1>sjocqzfk6m01izqz15vxcluwjgry3sp</sha1>
    <revision>
      <id>5214</id>
      <timestamp>2013-10-18T03:20:33Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Created page with &quot;Got a question about the wiki, or the topic? Ask your questions here!&quot;</comment>
      <text xml:space="preserve" bytes="69">Got a question about the wiki, or the topic? Ask your questions here!</text>
    </revision>
  </page>
  <page>
    <title>Category talk:Candidates for deletion</title>
    <ns>15</ns>
    <id>1508</id>
      <sha1>8si60equsv7gbyedp2cqjrzrgnnmec3</sha1>
    <revision>
      <id>3079</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="85">'''''Please use this page to discuss pages that have been labelled for deletion.'''''</text>
    </revision>
  </page>
  <page>
    <title>Category talk:Candidates for speedy deletion</title>
    <ns>15</ns>
    <id>1889</id>
      <sha1>irwv76z20x3f4ioaq6amqgnrvy0yi45</sha1>
    <revision>
      <id>3078</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="92">'''''Please use this page to discuss pages that have been labelled for speedy deletion.'''''</text>
    </revision>
  </page>
  <page>
    <title>Category:App Gallery</title>
    <ns>14</ns>
    <id>2137</id>
      <sha1>4hefch6u98maxk1de9go5ioqj6f1bfc</sha1>
    <revision>
      <id>4297</id>
      <timestamp>2011-11-10T18:44:29Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;Check out this growing list of apps that use Wikia's APIs. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy ...&quot;</comment>
      <text xml:space="preserve" bytes="268">Check out this growing list of apps that use Wikia's APIs. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).</text>
    </revision>
    <revision>
      <id>4316</id>
      <timestamp>2011-11-10T19:35:00Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="394">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

Check out this growing list of apps that use Wikia's APIs. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).

&lt;mainpage-endcolumn /&gt;</text>
    </revision>
    <revision>
      <id>4317</id>
      <timestamp>2011-11-10T19:36:14Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="587">&lt;mainpage-leftcolumn-start /&gt;

Check out this growing list of apps that use Wikia's APIs. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4324</id>
      <timestamp>2011-11-10T22:44:58Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Category:App Gallery]]&quot; ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="587">&lt;mainpage-leftcolumn-start /&gt;

Check out this growing list of apps that use Wikia's APIs. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4491</id>
      <timestamp>2011-12-13T00:26:51Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>no menurail2</comment>
      <text xml:space="preserve" bytes="268">Check out this growing list of apps that use Wikia's APIs. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).</text>
    </revision>
    <revision>
      <id>5121</id>
      <timestamp>2013-09-18T19:07:08Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="269">Check out this growing list of apps that use the Wikia API. If your app is using a Wikia API, add a page to this wiki and put it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).</text>
    </revision>
    <revision>
      <id>5132</id>
      <timestamp>2013-09-18T19:23:33Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="271">Check out this growing list of apps that use the Wikia API. If your app is using a Wikia API, add a page to this wiki and place it in the &quot;App Gallery&quot; category (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]--we'll take care of it).</text>
    </revision>
    <revision>
      <id>5152</id>
      <timestamp>2013-09-18T20:01:25Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="390">Check out this growing list of apps that use the Wikia API. If you have developed one, add a page to this wiki and place it in the &quot;App Gallery&quot; category to promote your week (or you can be lazy and email your app's link to [mailto:api@wikia.com api@wikia.com]&lt;span style=&quot;color:rgb(68,68,68);font-family:arial,sans-serif;font-size:small;line-height:16px;&quot;&gt;—&lt;/span&gt;we'll take care of it).</text>
    </revision>
    <revision>
      <id>5153</id>
      <timestamp>2013-09-18T20:02:23Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="393">Check out this growing list of apps that use the Wikia API. If you have developed one, add a page to this wiki and place it in the &quot;App Gallery&quot; category to promote your week (or you can be lazy and email your app's link to [mailto:api@wikia.com api[at]wikia.com]&lt;span style=&quot;color:rgb(68,68,68);font-family:arial,sans-serif;font-size:small;line-height:16px;&quot;&gt;—&lt;/span&gt;we'll take care of it).</text>
    </revision>
  </page>
  <page>
    <title>Category:Article management templates</title>
    <ns>14</ns>
    <id>1816</id>
      <sha1>2a7yyqodz4ai1955ugmxryep0vrbw8b</sha1>
    <revision>
      <id>2803</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="91">Templates to aid in '''article management'''.

{{Templatecategory}}

[[Category:Templates]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Article stubs</title>
    <ns>14</ns>
    <id>1776</id>
      <sha1>sphy4jkg6qay8g4gs0lbp9b84uovsv5</sha1>
    <revision>
      <id>2892</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="283">This category lists '''stub articles''' on this wiki.

A stub is a short article that can be expanded with more information on a subject by any user. To mark an article as a &quot;stub&quot; add the code {{t|stub}} to the end of any article.

[[Category:Site maintenance]]
[[Category:Content]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Blog posts</title>
    <ns>14</ns>
    <id>2018</id>
      <sha1>lpx2x2zcnr9htig27pqbyrkhw5p1dg3</sha1>
    <revision>
      <id>3829</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="22">[[Category:Community]]</text>
    </revision>
  </page>
  <page>
    <title>Category:BlogListingPage</title>
    <ns>14</ns>
    <id>2028</id>
      <sha1>cift7hxbdlx1a66g2u5z2mhm9q8pw2v</sha1>
    <revision>
      <id>3866</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="121">This is an automatically created category to keep all blog listing pages up to date.  Please do not delete.
__HIDDENCAT__</text>
    </revision>
  </page>
  <page>
    <title>Category:Browse</title>
    <ns>14</ns>
    <id>1460</id>
      <sha1>mionibs20om4gen6jorb90t8lcij5xw</sha1>
    <revision>
      <id>3862</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="227">To add a new category to a page you can click the Category button at the bottom of the page and type in the name you'd like your category to be called.

A full list of existing categories can be found at [[Special:Categories]].</text>
    </revision>
    <revision>
      <id>4932</id>
      <timestamp>2012-11-05T22:45:47Z</timestamp>
      <contributor>
        <ip>74.105.118.14</ip>
      </contributor>
      <text xml:space="preserve" bytes="500">To add a new category to a page you can click the Category button at the bottom of the page and type in the name you'd like your category to be called.

A full list of existing categories can be found at [[Special:Categories]].[[ ]][[SpongeBob SquarePants: Scaredy Pants/I Was a Teenage Gary (1999) Credits  |SpongeBob SquarePants: Scaredy Pants/I Was a Teenage Gary (1999) Credits ]][[ Just for You (1985 Mercer Mayer) Credits  | Just for You (1985 Mercer Mayer) Credits ]][[ SpongeBob SquarePants]]</text>
    </revision>
    <revision>
      <id>4937</id>
      <timestamp>2012-11-06T02:17:53Z</timestamp>
      <contributor>
        <ip>74.105.118.14</ip>
      </contributor>
      <text xml:space="preserve" bytes="709">To add a new category to a page you can click the Category button at the bottom of the page and type in the name you'd like your category to be called.

A full list of existing categories can be found at [[Special:Categories]].[[ ]][[SpongeBob SquarePants: Scaredy Pants/I Was a Teenage Gary (1999) Credits  | ]]

[[ SpongeBob SquarePants: Sandy's Rocket/Squeaky Boots (1999) Credits ]]

[[  SpongeBob SquarePants: Extreme Spots/Squirrel Record (2012)  Opening Credits | SpongeBob SquarePants: Extreme Spots/Squirrel Record (2012) Opening Credits ]]

[[  SpongeBob SquarePants: No Weenies Allowed/Squilliam Returns (2002) Credits | SpongeBob SquarePants: No Weenies Allowed/Squilliam Returns (2002) Credits ]]</text>
    </revision>
    <revision>
      <id>4949</id>
      <timestamp>2012-11-28T04:48:24Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/74.105.118.14|74.105.118.14]] ([[User talk:74.105.118.14|talk]] | [[Special:Block/74.105.118.14|block]]) to last version by [[User:Default|Default]]</comment>
      <text xml:space="preserve" bytes="227">To add a new category to a page you can click the Category button at the bottom of the page and type in the name you'd like your category to be called.

A full list of existing categories can be found at [[Special:Categories]].</text>
    </revision>
    <revision>
      <id>5226</id>
      <timestamp>2013-11-09T08:51:17Z</timestamp>
      <contributor>
        <ip>113.193.113.98</ip>
      </contributor>
      <text xml:space="preserve" bytes="256">[[gsdfgdsfgsdgdsfg|dfsgsdg]] To add a new category to a page you can click the Category button at the bottom of the page and type in the name you'd like your category to be called.

A full list of existing categories can be found at [[Special:Categories]].</text>
    </revision>
    <revision>
      <id>5227</id>
      <timestamp>2013-11-09T08:51:48Z</timestamp>
      <contributor>
        <ip>113.193.113.98</ip>
      </contributor>
      <text xml:space="preserve" bytes="227">To add a new category to a page you can click the Category button at the bottom of the page and type in the name you'd like your category to be called.

A full list of existing categories can be found at [[Special:Categories]].</text>
    </revision>
  </page>
  <page>
    <title>Category:Candidates for deletion</title>
    <ns>14</ns>
    <id>1509</id>
      <sha1>5z52v44ten2u9hdlfoyfpfhdheuzjql</sha1>
    <revision>
      <id>3731</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="271">Pages in this category have been labelled for deletion.  If you wish to discuss the deletion of these pages, please use the [[Category talk:Candidates for deletion|talk page]].

To add a page to this category, type {{t|delete}} on the page.

[[Category:Site maintenance]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Candidates for speedy deletion</title>
    <ns>14</ns>
    <id>1884</id>
      <sha1>8u9n03p20jjuoeirsppnfm82v3palzu</sha1>
    <revision>
      <id>3076</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="576">There are a few, special cases that {{SITENAME}} speedily deletes articles or files &quot;on sight&quot;. This page lists articles using the {{t|speedydelete}} template. Before speedily deleting an article, ensure that it meets the [[Project:Candidates for speedy deletion|criteria for speedy deletion]]. For any discussion of pages listed for speedy deletion, please use the talk page of the article in question. 

Deleted articles are automatically listed in the [[Special:Log/delete|deletion log]]. 

See also [[:Category:Pages proposed for deletion]].

[[Category:Site maintenance]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Category templates</title>
    <ns>14</ns>
    <id>1802</id>
      <sha1>dhpfdyc6irga9llckq5g26n6d5dc76a</sha1>
    <revision>
      <id>2763</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="79">Templates used on category pages.

{{Templatecategory}}

[[Category:Templates]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Community</title>
    <ns>14</ns>
    <id>1753</id>
      <sha1>l509d8z7dk8rdyd598eg9v5c4avutee</sha1>
    <revision>
      <id>3102</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="158">This category may include pages and subcategories related to the active contributors to the site, as seen on [[Special:ListUsers]].

[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Content</title>
    <ns>14</ns>
    <id>1851</id>
      <sha1>owvnpgvgf35ggf20ay2v5xpkxgm8itm</sha1>
    <revision>
      <id>3655</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="210">This area of the site is for articles regarding the subject of the wiki. Add your own subcategories to this area, and endeavour to categorise all content somewhere under here.

{{category}}

[[Category:Browse]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Copyright</title>
    <ns>14</ns>
    <id>1672</id>
      <sha1>fajg9j7lgqkg8zb3zek5uti2onr0c4j</sha1>
    <revision>
      <id>3104</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="139">Category can include subcategories and articles that have copyright implications. See also [[:Category:Policy]].

[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Disambiguations</title>
    <ns>14</ns>
    <id>1817</id>
      <sha1>f4235q4iagjeq2xtrk28hkia8fhtps6</sha1>
    <revision>
      <id>3089</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="463">This category contains [[Help:Disambiguation|disambiguation]] pages &amp;mdash; navigational aids which list other pages that might otherwise share the same title. If an internal link referred you to one of these pages, you might want to go back and fix it to point directly to the intended page.

'''Pages may be included in this category by the addition of the template {{t|disambig}} just before the list of similarly-named pages.'''

[[Category:Site maintenance]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Files</title>
    <ns>14</ns>
    <id>2032</id>
      <sha1>2twr2pndm4341co7bh87aw29kbpmatf</sha1>
    <revision>
      <id>3876</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="48">'''Files''' on {{SITENAME}}.
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4520</id>
      <timestamp>2011-12-26T18:16:06Z</timestamp>
      <contributor>
        <ip>83.109.187.123</ip>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="77">'''Files''' on {{SITENAME}}.
[[Category:Browse]]
[[Category:selma is smart.]]</text>
    </revision>
    <revision>
      <id>4521</id>
      <timestamp>2011-12-26T18:16:48Z</timestamp>
      <contributor>
        <ip>83.109.187.123</ip>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="173">'''Files''' on {{SITENAME}}.
[[Category:Browse]]
[[Category:selma is smart.]]
[[Category:sjener at du faller ingen @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ i love romain]]</text>
    </revision>
    <revision>
      <id>4523</id>
      <timestamp>2011-12-26T19:22:41Z</timestamp>
      <contributor>
        <ip>174.254.164.211</ip>
      </contributor>
      <comment>revert</comment>
      <text xml:space="preserve" bytes="47">'''Files''' on {{SITENAME}}
[[Category:Browse]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Forums</title>
    <ns>14</ns>
    <id>1470</id>
      <sha1>fajulr1lqu9ft7xq8ui2365a6wpiqlw</sha1>
    <revision>
      <id>3105</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="91">The category is for pages relating to the [[Forum:Index|Forum]].

[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:General wiki templates</title>
    <ns>14</ns>
    <id>1804</id>
      <sha1>eqn3lswbnowwgcnuhj848959oxrhx73</sha1>
    <revision>
      <id>2904</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="215">General wiki templates. Templates in this category will likely have a description on the [[Project:Templates|templates project page]]. If not, they probably deserve one.

{{Templatecategory}}

[[Category:Templates]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Help</title>
    <ns>14</ns>
    <id>1463</id>
      <sha1>ttx4xkivqomw46ewxszrlsb1lom57e0</sha1>
    <revision>
      <id>3106</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1270">'''For a full list of help pages, see [[Help:Contents]],''' which includes non-local help pages, automatically transcluded from [[w:c:help|Wikia Help]].


===About this category===
This category is intended to contain all the '''local''' &quot;help&quot; pages for this Wikia: pages that can help contributors and/or readers. If you find helpful pages that you think should be here, you may include them here just by typing &lt;nowiki&gt;[[Category:Help]]&lt;/nowiki&gt; on them.

Most, but not all, have &quot;Help:&quot; at the beginning of their page names and are therefore in the &quot;Help&quot; namespace; an automatically-generated list of those can be found at [[Special:AllPages]] by running down the &quot;Namespace&quot; menu.


===Getting more help===
You can also:
* Ask questions at the local [[Forum:Index|forum]].
* Talk to one of the [[Special:ListUsers/sysop|site administrators]] or any currently active contributor (the people whose names appear on [[Special:RecentChanges|the &quot;Recent changes&quot; page]]); use their user talk pages.
* If you can't find what you need on this wiki, you can seek help at the [[w:|Central Wikia]], especially at the [[w:Forum:Index|Central forum]].  

If you still need help, you may want to contact the [[w:Community Team|Wikia Community Team]].


[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Help desk</title>
    <ns>14</ns>
    <id>1483</id>
      <sha1>ko5f3fgcp4svp6hupup5xrd94e0hw3y</sha1>
    <revision>
      <id>3086</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="150">This is a list of topics from [[Forum:Help desk]].  

For other sources of help, please see [[:Category:Help]].

[[Category:Forums]] [[category:help]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Hidden categories</title>
    <ns>14</ns>
    <id>2034</id>
      <sha1>2pioshdbjf9p3px5a4xzuykmp2mthpg</sha1>
    <revision>
      <id>3878</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="319">This category contains hidden categories. Unlike normal categories, these are not displayed at the bottom of pages that are included in them, and are therefore hidden from readers.

To hide a category, add the &lt;code&gt;&lt;nowiki&gt;__HIDDENCAT__&lt;/nowiki&gt;&lt;/code&gt; magic word to the bottom of a category.
[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Image wiki templates</title>
    <ns>14</ns>
    <id>1815</id>
      <sha1>m91unzgcepgj30zbmx8pckhdeew7e44</sha1>
    <revision>
      <id>2784</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="93">Wiki templates used for image-related purposes.

{{Templatecategory}}

[[Category:Templates]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Images</title>
    <ns>14</ns>
    <id>1814</id>
      <sha1>mhpd277lbuo2h9leh2zzj55737e84v4</sha1>
    <revision>
      <id>3874</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="48">'''Images''' on {{SITENAME}}.
[[Category:Files]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Infobox templates</title>
    <ns>14</ns>
    <id>1976</id>
      <sha1>4memc35z8ky1b185wdjm7rnso5cvwol</sha1>
    <revision>
      <id>3656</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="82">A listing of wiki infobox templates.

{{Templatecategory}}

[[Category:Templates]]</text>
    </revision>
  </page>
  <page>
    <title>Category:New pages</title>
    <ns>14</ns>
    <id>2008</id>
      <sha1>m2v1jtvfis70d0n4xalmeq2kbkts9b0</sha1>
    <revision>
      <id>3893</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="52">New pages on the wiki.
[[Category:Site maintenance]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Organisation</title>
    <ns>14</ns>
    <id>1892</id>
    <redirect title="Category:Organization" />
      <sha1>5eiki64e6q04mfgnbsxq3882h6bks20</sha1>
    <revision>
      <id>3111</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="36">#REDIRECT [[:Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Organization</title>
    <ns>14</ns>
    <id>1891</id>
      <sha1>4ky9wu9nwwy5hdusxh4zu87dgi226bq</sha1>
    <revision>
      <id>3110</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="140">The area of the site for subcategories and other pages about the wiki's organization, administration, and maintenance. 

[[Category:Browse]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Pages proposed for deletion</title>
    <ns>14</ns>
    <id>1885</id>
      <sha1>idtjwv35c1ns14hk29k9nvqulm4oppe</sha1>
    <revision>
      <id>3015</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="238">__NOGALLERY__
These pages have been proposed for deletion. Reasons for the deletion are shown on the pages below, or discussed on their talk pages. 

See also [[:Category:Candidates for speedy deletion]].

[[Category:Site administration]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Pages with broken file links</title>
    <ns>14</ns>
    <id>2538</id>
      <sha1>2twjmejn56ditxo46hqinfh52nh6flb</sha1>
    <revision>
      <id>4917</id>
      <timestamp>2012-09-30T22:53:17Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <comment>Hide 'Pages with broken file links' category, see [http://www.mediawiki.org/wiki/Help:Tracking_categories]</comment>
      <text xml:space="preserve" bytes="13">__HIDDENCAT__</text>
    </revision>
  </page>
  <page>
    <title>Category:Policy</title>
    <ns>14</ns>
    <id>1517</id>
      <sha1>7h1qgnj3hc75dpv1492tls067urkeau</sha1>
    <revision>
      <id>3108</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="179">This is a list of policy pages for this Wikia.  Please also see [[:Category:Help]], and the policy pages on the [[Wikia:Category:Policy|Central Wikia]].

[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Resources</title>
    <ns>14</ns>
    <id>2145</id>
      <sha1>swzgx148wbs4cwh8dx6bytxdp1630mj</sha1>
    <revision>
      <id>4318</id>
      <timestamp>2011-11-10T19:44:37Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>Created page with &quot;&lt;mainpage-leftcolumn-start /&gt;  This page contains resources to help you development awesome apps with the Wikia API. If you still have questions, please do not hesitate to email ...&quot;</comment>
      <text xml:space="preserve" bytes="466">&lt;mainpage-leftcolumn-start /&gt;

This page contains resources to help you development awesome apps with the Wikia API. If you still have questions, please do not hesitate to email the Wikia API team at [mailto:api.wikia.com api.wikia.com]. Happy coding!

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4319</id>
      <timestamp>2011-11-10T19:45:07Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="478">&lt;mainpage-leftcolumn-start /&gt;

This page contains resources to help you development awesome apps with the Wikia API. If you still have questions, please do not hesitate to email the Wikia API team at [mailto:api.wikia.com api.wikia.com]. Happy coding!

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

__NORAIL__</text>
    </revision>
    <revision>
      <id>4320</id>
      <timestamp>2011-11-10T19:45:32Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="475">&lt;mainpage-leftcolumn-start /&gt;

This page contains resources to help you develop awesome apps using the Wikia API. If you still have questions, please do not hesitate to email the Wikia API team at [mailto:api.wikia.com api.wikia.com]. Happy coding!

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

__NORAIL__</text>
    </revision>
    <revision>
      <id>4323</id>
      <timestamp>2011-11-10T22:44:45Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Category:Resources]]&quot; ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="475">&lt;mainpage-leftcolumn-start /&gt;

This page contains resources to help you develop awesome apps using the Wikia API. If you still have questions, please do not hesitate to email the Wikia API team at [mailto:api.wikia.com api.wikia.com]. Happy coding!

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

__NORAIL__</text>
    </revision>
    <revision>
      <id>4489</id>
      <timestamp>2011-12-13T00:25:31Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>no menurail2</comment>
      <text xml:space="preserve" bytes="302">This page contains resources to help you develop awesome apps using the Wikia API. If you still have questions, please do not hesitate to email the Wikia API team at [mailto:api.wikia.com api.wikia.com]. Happy coding!

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4490</id>
      <timestamp>2011-12-13T00:26:01Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="217">This page contains resources to help you develop awesome apps using the Wikia API. If you still have questions, please do not hesitate to email the Wikia API team at [mailto:api.wikia.com api.wikia.com]. Happy coding!</text>
    </revision>
  </page>
  <page>
    <title>Category:Site administration</title>
    <ns>14</ns>
    <id>1849</id>
      <sha1>ayto9kxi7h7jc11oldek67i6dulcdet</sha1>
    <revision>
      <id>3101</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="92">Content regarding the administration of this site.

[[Category:Organization|Administration]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Site maintenance</title>
    <ns>14</ns>
    <id>1850</id>
      <sha1>q7onua7c24kjh6x49u6i4clr85z1gwu</sha1>
    <revision>
      <id>3107</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="701">This category includes matters that should be examined from time to time by contributors concerned with maintaining and enhancing the quality of this wiki. There may be errors or omissions that need fixing, or pages that clearly need improvement.

Whenever there is nothing more to attend to in subcategories or articles below, such contributors are urged to look at:

*'''[[Forum:Help desk]]'''
*[[Project:Community Portal|The community portal]]
*[[Special:Log/protect]]
*[[Special:BrokenRedirects]]
*[[Special:DoubleRedirects]]
*[[Special:Uncategorizedcategories]]
*[[Special:Uncategorizedimages]]
*[[Special:Uncategorizedpages]]
*[[Special:Wantedcategories]]


[[Category:Organization|Maintenance]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Template documentation</title>
    <ns>14</ns>
    <id>1901</id>
      <sha1>hhrr5ltyz96ebw3x0pwu6064duhdnkp</sha1>
    <revision>
      <id>3648</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="156">This category should contain all '''template documentation pages'''. See [[Template:Documentation]] for more details.

[[Category:Templates| Documentation]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Templates</title>
    <ns>14</ns>
    <id>1766</id>
      <sha1>oc02jujzgftsa1reugmu3bj4jo51jpg</sha1>
    <revision>
      <id>3109</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="196">This is the base category for '''templates'''. Templates should be placed in appropriate subcategories.

See [[Project:Templates]] for collated information on templates.

[[Category:Organization]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Videos</title>
    <ns>14</ns>
    <id>2033</id>
      <sha1>a9qu166y0vubcremg1lle5a8ltlfv7p</sha1>
    <revision>
      <id>3877</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="48">'''Videos''' on {{SITENAME}}.
[[Category:Files]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Watercooler</title>
    <ns>14</ns>
    <id>1484</id>
      <sha1>ax3t13h4bb6rd3rwohejfj8mvropk6c</sha1>
    <revision>
      <id>2579</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="112">This is a list of topics from the [[Forum:Watercooler|Watercooler]].

[[Category:Forums]]
[[Category:community]]</text>
    </revision>
  </page>
  <page>
    <title>Client libraries</title>
    <ns>0</ns>
    <id>2148</id>
      <sha1>38u8k9wzmhi1hf7gv32q8gxxmoa45h0</sha1>
    <revision>
      <id>4351</id>
      <timestamp>2011-11-22T22:17:21Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>skeleton</comment>
      <text xml:space="preserve" bytes="312">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

== MediaWiki API ==

== LyricWiki API ==

== Wikia Custom API (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4352</id>
      <timestamp>2011-11-22T22:40:32Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Building the table for MW.  Might need to tweak support matrix.</comment>
      <text xml:space="preserve" bytes="834">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

== MediaWiki API ==
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Perl || PerlMediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| JavaScript || JS MediaWiki API (Wikia) || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|}
{{no}}

== LyricWiki API ==

== Wikia Custom API (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4363</id>
      <timestamp>2011-11-22T23:30:48Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API */</comment>
      <text xml:space="preserve" bytes="835">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

== MediaWiki API ==
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| JavaScript || JS MediaWiki API (Wikia) || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|}
{{no}}

== LyricWiki API ==

== Wikia Custom API (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4370</id>
      <timestamp>2011-11-22T23:55:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Added some placeholders for the MediaWiki API.  Templates seem to be working &amp; look good enough for now to get the purpose across quickly (possibly use images in those templates in the future?)</comment>
      <text xml:space="preserve" bytes="1152">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

== MediaWiki API ==
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}

== LyricWiki API ==

== Wikia Custom API (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4371</id>
      <timestamp>2011-11-23T00:24:56Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Link to the Client code on MW.org</comment>
      <text xml:space="preserve" bytes="1628">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: http://www.mediawiki.org/wiki/API:Client_code but with no support-matrix.  Try to find the best ones and put them on this chart.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4372</id>
      <timestamp>2011-11-23T00:37:09Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API */ link to bot frameworks</comment>
      <text xml:space="preserve" bytes="1756">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: http://www.mediawiki.org/wiki/API:Client_code but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [http://en.wikipedia.org/wiki/Wikipedia:Creating_a_bot#Programming_languages_and_libraries Bot frameworks on Wikipedia].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4383</id>
      <timestamp>2011-11-28T04:31:22Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <comment>/* MediaWiki API */ update Pywikipedia support</comment>
      <text xml:space="preserve" bytes="1708">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: [[mw:API:Client code|Client code]] but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4384</id>
      <timestamp>2011-11-28T04:33:00Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>/* MediaWiki API */ alphabetise</comment>
      <text xml:space="preserve" bytes="1708">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: [[mw:API:Client code|Client code]] but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4385</id>
      <timestamp>2011-11-28T04:36:16Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>/* MediaWiki API */ +PHP</comment>
      <text xml:space="preserve" bytes="1797">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: [[mw:API:Client code|Client code]] but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4396</id>
      <timestamp>2011-12-06T09:51:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API */ pulled in the support matrix of which calls are even implemented... need to rework it to show how it maps to client libraries</comment>
      <text xml:space="preserve" bytes="3980">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: [[mw:API:Client code|Client code]] but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong()
! scope=&quot;col&quot; | 
! scope=&quot;col&quot; | 
! scope=&quot;col&quot; | 
! scope=&quot;col&quot; | 
! scope=&quot;col&quot; | 
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|}


&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4399</id>
      <timestamp>2011-12-06T10:19:36Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API */</comment>
      <text xml:space="preserve" bytes="2759">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found here: [[mw:API:Client code|Client code]] but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS LyricWiki API || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}

Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4402</id>
      <timestamp>2011-12-06T10:28:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API */</comment>
      <text xml:space="preserve" bytes="2777">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==

{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS LyricWiki API || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}

Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4404</id>
      <timestamp>2011-12-06T10:30:42Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API */ moved table to subpage</comment>
      <text xml:space="preserve" bytes="1487">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
{{:Client libraries/MediaWiki API}}

== [[LyricWiki API]] ==

{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS LyricWiki API || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}

Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4406</id>
      <timestamp>2011-12-06T10:31:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API */ moved table to subpage</comment>
      <text xml:space="preserve" bytes="561">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
{{:Client libraries/MediaWiki API}}

== [[LyricWiki API]] ==
{{:Client libraries/LyricWiki API}}

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4408</id>
      <timestamp>2011-12-06T10:37:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API */</comment>
      <text xml:space="preserve" bytes="978">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
{{:Client libraries/LyricWiki API}}

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4410</id>
      <timestamp>2011-12-06T10:42:51Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API */ pulled text in from subpage.</comment>
      <text xml:space="preserve" bytes="1308">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

== [[Wikia Custom API]] (Nirvana) ==</text>
    </revision>
    <revision>
      <id>4411</id>
      <timestamp>2011-12-06T10:49:53Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Wikia Custom API (Nirvana) */ link to subpage for table</comment>
      <text xml:space="preserve" bytes="1347">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

== [[Wikia Custom API]] (Nirvana) ==
{{:Custom libraries/Wikia Custom API}}</text>
    </revision>
    <revision>
      <id>4426</id>
      <timestamp>2011-12-06T16:38:30Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API */ + Link to various languages from SOAP</comment>
      <text xml:space="preserve" bytes="1579">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

Since SOAP APIs are made to be used without client libraries, the SOAP functionality should work for many languages without anything other than a SOAP library. For more information, see: [[LyricWiki_API/SOAP#Portability_Testing]].

== [[Wikia Custom API]] (Nirvana) ==
{{:Custom libraries/Wikia Custom API}}</text>
    </revision>
    <revision>
      <id>4429</id>
      <timestamp>2011-12-07T09:52:08Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API */</comment>
      <text xml:space="preserve" bytes="1765">There are many client libraries available for the various APIs that can be used to access Wikia data.  Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
With REST and SOAP, it's so easy that most people appear to just roll-their-own code for accessing the system. However, as packages become available, they should be added to this table:
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

Since SOAP APIs are made to be used without client libraries, the SOAP functionality should work for many languages without anything other than a SOAP library. For more information, see: [[LyricWiki_API/SOAP#Portability_Testing]].

== [[Wikia Custom API]] (Nirvana) ==
{{:Custom libraries/Wikia Custom API}}</text>
    </revision>
    <revision>
      <id>4483</id>
      <timestamp>2011-12-13T00:14:50Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>menurail2</comment>
      <text xml:space="preserve" bytes="1888">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

There are many client libraries available for the various APIs that can be used to access Wikia data. Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix. Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
With REST and SOAP, it's so easy that most people appear to just roll-their-own code for accessing the system. However, as packages become available, they should be added to this table:
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]]. If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

Since SOAP APIs are made to be used without client libraries, the SOAP functionality should work for many languages without anything other than a SOAP library. For more information, see: [[LyricWiki_API/SOAP#Portability_Testing]].

== [[Wikia Custom API]] (Nirvana) ==
{{:Custom libraries/Wikia Custom API}}

&lt;mainpage-endcolumn /&gt;</text>
    </revision>
    <revision>
      <id>4484</id>
      <timestamp>2011-12-13T00:15:41Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>norail</comment>
      <text xml:space="preserve" bytes="1900">__NORAIL__

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

There are many client libraries available for the various APIs that can be used to access Wikia data. Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix. Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
With REST and SOAP, it's so easy that most people appear to just roll-their-own code for accessing the system. However, as packages become available, they should be added to this table:
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]]. If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

Since SOAP APIs are made to be used without client libraries, the SOAP functionality should work for many languages without anything other than a SOAP library. For more information, see: [[LyricWiki_API/SOAP#Portability_Testing]].

== [[Wikia Custom API]] (Nirvana) ==
{{:Custom libraries/Wikia Custom API}}

&lt;mainpage-endcolumn /&gt;</text>
    </revision>
    <revision>
      <id>4486</id>
      <timestamp>2011-12-13T00:20:51Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>no menurail2</comment>
      <text xml:space="preserve" bytes="1774">__NORAIL__

There are many client libraries available for the various APIs that can be used to access Wikia data. Using them can give you a huge head-start on your app. Why write your own library when you can focus on writing your app instead!? :)

''TODO: Maybe extract the tables into templates or subpages which can then be transcluded both on this page and on the page for the specific API's documentation''.

== [[MediaWiki API]] ==
A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix. Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{{:Client libraries/MediaWiki API}}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;

== [[LyricWiki API]] ==
With REST and SOAP, it's so easy that most people appear to just roll-their-own code for accessing the system. However, as packages become available, they should be added to this table:
{{:Client libraries/LyricWiki API}}
Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]]. If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.

Since SOAP APIs are made to be used without client libraries, the SOAP functionality should work for many languages without anything other than a SOAP library. For more information, see: [[LyricWiki_API/SOAP#Portability_Testing]].

== [[Wikia Custom API]] (Nirvana) ==
{{:Custom libraries/Wikia Custom API}}</text>
    </revision>
  </page>
  <page>
    <title>Client libraries/LyricWiki API</title>
    <ns>0</ns>
    <id>2162</id>
      <sha1>sz14jtzkhnuqwzlut2zzkxhn07oi6p2</sha1>
    <revision>
      <id>4405</id>
      <timestamp>2011-12-06T10:31:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot; {| class=&quot;wikitable sortable&quot; border=&quot;1&quot; |- ! scope=&quot;col&quot; | Language ! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library ! scope=&quot;col&quot; | getSong ! scope=&quot;col&quot; | getArtist &lt;!-- ! scope=&quot;c...&quot;</comment>
      <text xml:space="preserve" bytes="961">
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS LyricWiki API || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}

Note that not all functions are implemented on both REST and SOAP. Please refer to the table of what is implemented where on [[LyricWiki API/Support Matrix]].  If you need any of the functions on there, but they don't exist through the method you need yet, please [[Contact|let us know]] and we'll try to implement it right away.</text>
    </revision>
    <revision>
      <id>4409</id>
      <timestamp>2011-12-06T10:42:36Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved text out to [[Client libraries]] page so that</comment>
      <text xml:space="preserve" bytes="629">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS LyricWiki API || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4424</id>
      <timestamp>2011-12-06T16:29:53Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added more languages</comment>
      <text xml:space="preserve" bytes="829">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4425</id>
      <timestamp>2011-12-06T16:36:12Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>more languages which have subpages &amp; one module</comment>
      <text xml:space="preserve" bytes="1096">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| [[LyricWiki_API/SOAP/Java_%26_Axis|Java]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm Lyrics-Fetcher] module || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Ruby|Ruby]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4428</id>
      <timestamp>2011-12-06T16:58:28Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>filled in what's supported in the simple Perl module.</comment>
      <text xml:space="preserve" bytes="1072">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| [[LyricWiki_API/SOAP/Java_%26_Axis|Java]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm Lyrics-Fetcher] module || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Ruby|Ruby]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4530</id>
      <timestamp>2012-01-09T19:28:25Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>the Perl MediaWiki API now supports LyricWiki</comment>
      <text xml:space="preserve" bytes="1184">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| [[LyricWiki_API/SOAP/Java_%26_Axis|Java]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [[w:c:perlmediawikiapi|Perl MediaWiki API]] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Perl || [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm Lyrics-Fetcher] module || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Ruby|Ruby]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4531</id>
      <timestamp>2012-01-09T19:33:30Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added getTopSongs to the matrix.</comment>
      <text xml:space="preserve" bytes="1307">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
! scope=&quot;col&quot; | getTopSongs
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| [[LyricWiki_API/SOAP/Java_%26_Axis|Java]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [[w:c:perlmediawikiapi|Perl MediaWiki API]] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Perl || [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm Lyrics-Fetcher] module || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Ruby|Ruby]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4535</id>
      <timestamp>2012-01-11T00:20:32Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Added column for whether or not the library has support for Wikia API Keys</comment>
      <text xml:space="preserve" bytes="1436">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | set apiKey
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
! scope=&quot;col&quot; | getTopSongs
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| [[LyricWiki_API/SOAP/Java_%26_Axis|Java]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [[w:c:perlmediawikiapi|Perl MediaWiki API]] || {{partially}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Perl || [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm Lyrics-Fetcher] module || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Ruby|Ruby]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4536</id>
      <timestamp>2012-01-11T18:22:02Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added support for getTopSongs() to [[w:c:perlmediawikiapi|Perl MediaWiki API]]</comment>
      <text xml:space="preserve" bytes="1437">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | set apiKey
! scope=&quot;col&quot; | getSong
! scope=&quot;col&quot; | getArtist
&lt;!-- ! scope=&quot;col&quot; | getAlbum --&gt;
! scope=&quot;col&quot; | getHometown
! scope=&quot;col&quot; | getSOTD
! scope=&quot;col&quot; | getTopSongs
&lt;!-- ! scope=&quot;col&quot; | postArtist
! scope=&quot;col&quot; | postAlbum --&gt;
! scope=&quot;col&quot; | postSong
|-
| [[LyricWiki_API/SOAP/Java_%26_Axis|Java]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [[w:c:perlmediawikiapi|Perl MediaWiki API]] || {{partially}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Perl || [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm Lyrics-Fetcher] module || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Python|Python]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| [[LyricWiki_API/SOAP/Ruby|Ruby]] || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
  </page>
  <page>
    <title>Client libraries/MediaWiki API</title>
    <ns>0</ns>
    <id>2161</id>
      <sha1>3so9cfpgubrpr9ds6s1971bs9h1qcl3</sha1>
    <revision>
      <id>4403</id>
      <timestamp>2011-12-06T10:30:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>extracted to subpage for easier transclusion</comment>
      <text xml:space="preserve" bytes="1325">A ton of libraries can be found on MediaWiki.org's [[mw:API:Client code|Client code]] page but with no support-matrix.  Try to find the best ones and put them on this chart.

Also, [[wikipedia:Wikipedia:Creating a bot#Programming languages and libraries|Bot frameworks on Wikipedia]].
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
&lt;small&gt;Is there a good way to make this support-matrix and the list on mediawiki.org not diverge or require duplicate work?&lt;/small&gt;</text>
    </revision>
    <revision>
      <id>4407</id>
      <timestamp>2011-12-06T10:36:51Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved all surrounding text out and just left the table as the subpagre</comment>
      <text xml:space="preserve" bytes="908">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Perl || Perl MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || PyWikipediaBot || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4415</id>
      <timestamp>2011-12-06T11:15:18Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ two java frameworks and linked the perl one</comment>
      <text xml:space="preserve" bytes="1316">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || JS MediaWiki API || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| .NET || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4416</id>
      <timestamp>2011-12-06T11:26:08Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>link to our JS MW Client</comment>
      <text xml:space="preserve" bytes="1323">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| .NET || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || Botclasses || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}</text>
    </revision>
    <revision>
      <id>4418</id>
      <timestamp>2011-12-06T11:48:18Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added links for all listed libraries &amp; a few more.  There are still a couple more languages that could be added.</comment>
      <text xml:space="preserve" bytes="2291">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
Notes:
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4419</id>
      <timestamp>2011-12-06T11:52:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ other languages (need to fill the libraries in)</comment>
      <text xml:space="preserve" bytes="2909">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Common Lisp || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
Notes:
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4420</id>
      <timestamp>2011-12-06T11:53:15Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2992">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Common Lisp || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4421</id>
      <timestamp>2011-12-06T11:58:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>finished linking libraries for all languages found on Client Code page. Doesn't contain all libraries, just the best one(s) from each language (where &quot;best&quot; just means that they're widely used and/or actively maintained)</comment>
      <text xml:space="preserve" bytes="3419">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4430</id>
      <timestamp>2011-12-07T10:07:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Added &quot;delete&quot; column</comment>
      <text xml:space="preserve" bytes="3637">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4434</id>
      <timestamp>2011-12-07T10:26:15Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>PMWAPI does deletes</comment>
      <text xml:space="preserve" bytes="3633">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Python || [http://sourceforge.net/projects/pywikipediabot/ PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4435</id>
      <timestamp>2011-12-07T10:32:21Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>pywikipediabot</comment>
      <text xml:space="preserve" bytes="3621">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4436</id>
      <timestamp>2011-12-07T10:40:16Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>botclasses can delete</comment>
      <text xml:space="preserve" bytes="3617">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4437</id>
      <timestamp>2011-12-07T10:53:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>best guess at Ruby lib based on looking at the code</comment>
      <text xml:space="preserve" bytes="3607">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4438</id>
      <timestamp>2011-12-07T10:55:16Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Notes */ note on &quot;Partial&quot; implementatoins</comment>
      <text xml:space="preserve" bytes="3813">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4439</id>
      <timestamp>2011-12-07T11:00:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added protect column</comment>
      <text xml:space="preserve" bytes="4028">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4440</id>
      <timestamp>2011-12-07T11:02:08Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>filled in some .NET from looking @ the code</comment>
      <text xml:space="preserve" bytes="4016">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4442</id>
      <timestamp>2011-12-07T11:03:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>botclasses protects</comment>
      <text xml:space="preserve" bytes="4012">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4443</id>
      <timestamp>2011-12-07T11:05:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>pywikipediabot has protection</comment>
      <text xml:space="preserve" bytes="4008">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4444</id>
      <timestamp>2011-12-07T11:06:33Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="4008">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partial}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4445</id>
      <timestamp>2011-12-07T11:07:28Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="4010">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4446</id>
      <timestamp>2011-12-07T11:11:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added some info about a java package based on its docs http://jwbf.sourceforge.net/doc/</comment>
      <text xml:space="preserve" bytes="3990">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4447</id>
      <timestamp>2011-12-07T14:01:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added Wiki.java features from looking @ code: http://wiki-java.googlecode.com/svn/trunk/src/org/wikipedia/Wiki.java</comment>
      <text xml:space="preserve" bytes="3962">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4448</id>
      <timestamp>2011-12-07T14:13:08Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Common Lisp support... I don't really remember lisp, but this lists the features in almost plain English: https://github.com/AccelerationNet/cl-mediawiki/blob/master/src/packages.lisp</comment>
      <text xml:space="preserve" bytes="3926">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4449</id>
      <timestamp>2011-12-07T14:23:26Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Delphi support (strangely, it wasn't too clear from skimming the code whether it could snag wikitext - although it almost certainly does)</comment>
      <text xml:space="preserve" bytes="3897">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4450</id>
      <timestamp>2011-12-07T14:50:58Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+Haskell</comment>
      <text xml:space="preserve" bytes="3869">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4451</id>
      <timestamp>2011-12-07T15:05:38Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ocaml</comment>
      <text xml:space="preserve" bytes="3856">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4452</id>
      <timestamp>2011-12-07T15:11:37Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+tcl</comment>
      <text xml:space="preserve" bytes="3844">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4453</id>
      <timestamp>2011-12-08T15:33:30Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ Upload column</comment>
      <text xml:space="preserve" bytes="4057">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4454</id>
      <timestamp>2011-12-08T16:13:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>botclasses supports upload</comment>
      <text xml:space="preserve" bytes="4053">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4455</id>
      <timestamp>2011-12-09T10:20:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>just committed support for uploading to the Perl MediaWiki API</comment>
      <text xml:space="preserve" bytes="4054">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4456</id>
      <timestamp>2011-12-09T10:21:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>pywikipediabot supports uploading</comment>
      <text xml:space="preserve" bytes="4050">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{unknown}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4471</id>
      <timestamp>2011-12-12T23:04:07Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>the .NET lib doesn't seem to support upload</comment>
      <text xml:space="preserve" bytes="4045">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{unknown}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4472</id>
      <timestamp>2011-12-12T23:05:39Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>ruby lib does have uploading</comment>
      <text xml:space="preserve" bytes="4041">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4473</id>
      <timestamp>2011-12-12T23:07:04Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Wiki.java supports upload</comment>
      <text xml:space="preserve" bytes="4037">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4474</id>
      <timestamp>2011-12-12T23:08:12Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>JWBF has upload too</comment>
      <text xml:space="preserve" bytes="4033">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{unknown}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4475</id>
      <timestamp>2011-12-12T23:08:50Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>JS MW API client doesn't have upload</comment>
      <text xml:space="preserve" bytes="4028">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4476</id>
      <timestamp>2011-12-12T23:10:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>OCaml actually has uploading too, it appears ^_^</comment>
      <text xml:space="preserve" bytes="4024">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4477</id>
      <timestamp>2011-12-12T23:11:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>no upload in Haskell yet</comment>
      <text xml:space="preserve" bytes="4019">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{unknown}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4478</id>
      <timestamp>2011-12-12T23:12:04Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Delphi has uploads</comment>
      <text xml:space="preserve" bytes="4015">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{unknown}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4479</id>
      <timestamp>2011-12-12T23:14:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>doesn't look like there's upload in Common Lisp</comment>
      <text xml:space="preserve" bytes="4010">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4480</id>
      <timestamp>2011-12-12T23:16:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>No upload for TCL.  The list of commands appears to be here: https://svn.toolserver.org/svnroot/gifti/bot/params.tcl</comment>
      <text xml:space="preserve" bytes="4001">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4481</id>
      <timestamp>2011-12-12T23:35:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>As one would hope, ApiEdit appears to support editing ;)</comment>
      <text xml:space="preserve" bytes="3997">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4482</id>
      <timestamp>2011-12-12T23:44:10Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>no Protection in Wikia.java from the looks of it.</comment>
      <text xml:space="preserve" bytes="3992">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4485</id>
      <timestamp>2011-12-13T00:18:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>norail, menurail2</comment>
      <text xml:space="preserve" bytes="4130">__NORAIL__

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.

&lt;mainpage-endcolumn /&gt;</text>
    </revision>
    <revision>
      <id>4487</id>
      <timestamp>2011-12-13T00:21:08Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>This is just used as a subpage transcluded into other pages (and not linked to directly), so removing the MenuRail. :)</comment>
      <text xml:space="preserve" bytes="3992">For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4488</id>
      <timestamp>2011-12-13T00:24:07Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="4004">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4492</id>
      <timestamp>2011-12-13T00:39:12Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>ApiEdit (AutoWikiBrowser) apparently can do all but upload</comment>
      <text xml:space="preserve" bytes="3988">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - Without any stats, I'd guess this is the most widely used bot framework for Wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4500</id>
      <timestamp>2011-12-18T05:34:13Z</timestamp>
      <contributor>
        <username>Kangaroopower</username>
        <id>3562424</id>
      </contributor>
      <comment>/* Notes */  Actually AWB is.. im pretty sure</comment>
      <text xml:space="preserve" bytes="3959">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - One of the most widely used bot frameworks for wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.</text>
    </revision>
    <revision>
      <id>4509</id>
      <timestamp>2011-12-19T21:11:18Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ LyricWiki / Wiki support columns.</comment>
      <text xml:space="preserve" bytes="4509">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
! scope=&quot;col&quot; | [[LyricWiki API|LyricWiki]]
! scope=&quot;col&quot; | Wikia
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{no}} || {{no}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - One of the most widely used bot frameworks for wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.
* Since this is the listing of MediaWiki API libraries, most of them won't have support for the [[LyricWiki API]] and [[Wikia API]]. If you need a separate client library for those, please see the [[Client libraries]] page.</text>
    </revision>
    <revision>
      <id>4529</id>
      <timestamp>2012-01-09T19:12:54Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Perl MediaWiki API now has a module for the LyricWiki API.</comment>
      <text xml:space="preserve" bytes="4510">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
! scope=&quot;col&quot; | [[LyricWiki API|LyricWiki]]
! scope=&quot;col&quot; | Wikia
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{no}} || {{no}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - One of the most widely used bot frameworks for wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.
* Since this is the listing of MediaWiki API libraries, most of them won't have support for the [[LyricWiki API]] and [[Wikia API]]. If you need a separate client library for those, please see the [[Client libraries]] page.</text>
    </revision>
    <revision>
      <id>4532</id>
      <timestamp>2012-01-09T21:37:34Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Ruby MediaWiki::Gateway can make arbitrary API requests (so this includes LW)</comment>
      <text xml:space="preserve" bytes="4517">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
! scope=&quot;col&quot; | [[LyricWiki API|LyricWiki]]
! scope=&quot;col&quot; | Wikia
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{no}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - One of the most widely used bot frameworks for wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.
* Since this is the listing of MediaWiki API libraries, most of them won't have support for the [[LyricWiki API]] and [[Wikia API]]. If you need a separate client library for those, please see the [[Client libraries]] page.</text>
    </revision>
    <revision>
      <id>4615</id>
      <timestamp>2012-02-27T05:22:53Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>botclasses now has a lyricwiki class</comment>
      <text xml:space="preserve" bytes="4518">__NORAIL__

For more background on the libraries, please read the [[#Notes|notes]] below.
{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | Get article wikitext
! scope=&quot;col&quot; | Login
! scope=&quot;col&quot; | Editing
! scope=&quot;col&quot; | Get categories for page
! scope=&quot;col&quot; | Get pages in category
! scope=&quot;col&quot; | History
! scope=&quot;col&quot; | Delete
! scope=&quot;col&quot; | Protect
! scope=&quot;col&quot; | Upload
! scope=&quot;col&quot; | [[LyricWiki API|LyricWiki]]
! scope=&quot;col&quot; | Wikia
|-
| Common Lisp || [https://github.com/AccelerationNet/cl-mediawiki cl-mediawiki] || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{yes}} || {{no}} || {{no}} || {{no}} || {{no}} || {{no}}
|-
| Delphi/Object Pascal || [http://projectjedi.svn.sf.net/viewvc/projectjedi/trunk/helpsync/MediaWikiApi/ MediaWiki API Wrapper] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| Haskell || [http://hackage.haskell.org/package/mediawiki mediawiki package] || {{unknown}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| Java || [http://jwbf.sourceforge.net/pw/ JWBF] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Java || [http://code.google.com/p/wiki-java/ Wiki.java] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{no}} || {{no}}
|-
| JavaScript || [[JS MediaWiki Client]] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|-
| .NET || [http://autowikibrowser.svn.sourceforge.net/viewvc/autowikibrowser/AWB/WikiFunctions/API/ ApiEdit] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}} || {{no}}
|-
| OCaml || [http://sourceforge.net/projects/ocaml-mediawiki ocaml-mediawiki] || {{unknown}} || {{yes}} || {{yes}} || {{unknown}} || {{no}} || {{unknown}} || {{unknown}} || {{unknown}} || {{yes}} || {{no}} || {{no}}
|-
| Perl || [http://perlmediawikiapi.wikia.com/wiki/Perl_MediaWiki_API_Wiki Perl MediaWiki API] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| PHP || [http://toolserver.org/~chris/highlight.php?d=chris/classes/&amp;f=botclasses.php botclasses.php] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}}
|-
| Python || [http://www.mediawiki.org/wiki/Pywikipediabot PyWikipediaBot] || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{yes}} || {{yes}} || {{yes}} || {{no}} || {{no}}
|-
| Ruby || [http://github.com/jpatokal/mediawiki-gateway MediaWiki::Gateway] || {{yes}} || {{yes}} || {{yes}} || {{partially}} || {{partially}} || {{partially}} || {{yes}} || {{partially}} || {{yes}} || {{partially}} || {{no}}
|-
| Tcl || [http://svn.toolserver.org/svnroot/gifti/bot MediaWiki Tcl Bot Framework] || {{yes}} || {{yes}} || {{yes}} || {{unknown}} || {{yes}} || {{unknown}} || {{unknown}} || {{unknown}} || {{no}} || {{no}} || {{no}}
|}
===Notes===
* The libraries which say they &quot;Partially&quot; support certain calls usually have a generic function where you can make whatever API calls you want, the input and output just aren't pre-formatted as functions.
* '''ApiEdit''' is what powers [http://en.wikipedia.org/wiki/WP:AWB AutoWikiBrowser].
* The '''Delphi/Object Pascal''' MediaWiki API wrapper requires the [http://jcl.delphi-jedi.org/ JEDI Code Library] for dependencies.
* '''Perl MediaWiki API''' was developed by Wikipedians and [[User:Sean_Colombo|Sean Colombo]] and is used a decent amount at Wikia, specifically on LyricWiki.
* '''PyWikipediaBot''' - One of the most widely used bot frameworks for wikipedia.
* '''[[JS MediaWiki Client]]''' was developed at Wikia and is used there regularly (but is not Wikia-specific, it should work for any MediaWiki installation).
* There are a ton of '''PHP''' libraries for MediaWiki. So many, that they have their own [http://en.wikipedia.org/wiki/Wikipedia:PHP_bot_framework_table PHP bot framework support matrix] on Wikipedia.
* Since this is the listing of MediaWiki API libraries, most of them won't have support for the [[LyricWiki API]] and [[Wikia API]]. If you need a separate client library for those, please see the [[Client libraries]] page.</text>
    </revision>
  </page>
  <page>
    <title>Client libraries/Wikia Custom API</title>
    <ns>0</ns>
    <id>2163</id>
      <sha1>l8lkg0i1c4782d1swbmjxe8lnsem5eh</sha1>
    <revision>
      <id>4412</id>
      <timestamp>2011-12-06T11:00:18Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>created table with Wikia's entry in it</comment>
      <text xml:space="preserve" bytes="910">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | get a method
! scope=&quot;col&quot; | post to method
! scope=&quot;col&quot; | html return type
! scope=&quot;col&quot; | json return type
! scope=&quot;col&quot; | fully customizable requests&lt;br/&gt;(set Controller, Method, format, etc.)
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || jquery.wikia.js* || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
* * jquery.wikia.js has other functionality also and the Nirvana code hasn't been extracted out yet. It contains most of the extensions to jquery functionality that Wikia uses. The file is included on the live Wikia site and expects other things such as jquery (possibly other variables?) to already be loaded.</text>
    </revision>
    <revision>
      <id>4413</id>
      <timestamp>2011-12-06T11:01:09Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>moved [[Custom libraries/Wikia Custom API]] to [[Client libraries/Wikia Custom API]]: fix typo</comment>
      <text xml:space="preserve" bytes="910">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | get a method
! scope=&quot;col&quot; | post to method
! scope=&quot;col&quot; | html return type
! scope=&quot;col&quot; | json return type
! scope=&quot;col&quot; | fully customizable requests&lt;br/&gt;(set Controller, Method, format, etc.)
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || jquery.wikia.js* || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
* * jquery.wikia.js has other functionality also and the Nirvana code hasn't been extracted out yet. It contains most of the extensions to jquery functionality that Wikia uses. The file is included on the live Wikia site and expects other things such as jquery (possibly other variables?) to already be loaded.</text>
    </revision>
    <revision>
      <id>4422</id>
      <timestamp>2011-12-06T15:56:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>link to code in Wikia's SVN repo (on trac)</comment>
      <text xml:space="preserve" bytes="995">{| class=&quot;wikitable sortable&quot; border=&quot;1&quot;
|-
! scope=&quot;col&quot; | Language
! scope=&quot;col&quot; class=&quot;unsortable&quot; | Library
! scope=&quot;col&quot; | get a method
! scope=&quot;col&quot; | post to method
! scope=&quot;col&quot; | html return type
! scope=&quot;col&quot; | json return type
! scope=&quot;col&quot; | fully customizable requests&lt;br/&gt;(set Controller, Method, format, etc.)
|-
| Java || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|-
| JavaScript || [http://trac.wikia-code.com/browser/wikia/trunk/skins/common/jquery/jquery.wikia.js jquery.wikia.js]* || {{yes}} || {{yes}} || {{yes}} || {{yes}} || {{yes}}
|-
| PHP || ?? || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}} || {{unknown}}
|}
* * jquery.wikia.js has other functionality also and the Nirvana code hasn't been extracted out yet. It contains most of the extensions to jquery functionality that Wikia uses. The file is included on the live Wikia site and expects other things such as jquery (possibly other variables?) to already be loaded.</text>
    </revision>
  </page>
  <page>
    <title>Contact</title>
    <ns>0</ns>
    <id>2160</id>
      <sha1>qi2j7csrd8079l0916faoqag1s5r62s</sha1>
    <revision>
      <id>4400</id>
      <timestamp>2011-12-06T10:23:03Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;To contact Wikia about the API, please email [mailto:api@wikia.com api@wikia.com] and we'll usually respond within 24 hours.&quot;</comment>
      <text xml:space="preserve" bytes="124">To contact Wikia about the API, please email [mailto:api@wikia.com api@wikia.com] and we'll usually respond within 24 hours.</text>
    </revision>
  </page>
  <page>
    <title>Custom libraries/Wikia Custom API</title>
    <ns>0</ns>
    <id>2164</id>
    <redirect title="Client libraries/Wikia Custom API" />
      <sha1>0mzttalw2uu1sy2n9v3yumvuuslwcz0</sha1>
    <revision>
      <id>4414</id>
      <timestamp>2011-12-06T11:01:09Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved [[Custom libraries/Wikia Custom API]] to [[Client libraries/Wikia Custom API]]: fix typo</comment>
      <text xml:space="preserve" bytes="47">#REDIRECT [[Client libraries/Wikia Custom API]]</text>
    </revision>
  </page>
  <page>
    <title>Documentation</title>
    <ns>0</ns>
    <id>2675</id>
    <redirect title="Wikia Content API" />
      <sha1>i0if9wtdpcsg2bvhsb6r8u3b2sanhsn</sha1>
    <revision>
      <id>5163</id>
      <timestamp>2013-09-18T20:25:17Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>Shareif moved page [[Documentation]] to [[Legacy API]]</comment>
      <text xml:space="preserve" bytes="24">#REDIRECT [[Legacy API]]</text>
    </revision>
    <revision>
      <id>5172</id>
      <timestamp>2013-09-18T20:28:33Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>Redirected page to [[Wikia Content API]]</comment>
      <text xml:space="preserve" bytes="31">#REDIRECT [[Wikia Content API]]</text>
    </revision>
  </page>
  <page>
    <title>FAQ</title>
    <ns>0</ns>
    <id>2134</id>
      <sha1>glycrf9vlkh7pmazdx8ba2b75rmhmxd</sha1>
    <revision>
      <id>4283</id>
      <timestamp>2011-11-08T21:48:52Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;=='''Frequently Asked Questions'''== #'''How do I register for an API key?''' #*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any pag...&quot;</comment>
      <text xml:space="preserve" bytes="1421">=='''Frequently Asked Questions'''==
#'''How do I register for an API key?'''
#*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any page on the [[Wikia_API_Wiki|Wikia API Wiki]] or 2) going directly to the [[Special:ApiGate/register]] URL.
#*You will be prompted to log in your Wikia account before being directed to the Key Request Form (if you were already logged in, you will see the Key Request Form immediately). After completing and submitting the form, you will be presented with your new key.
#'''Can I register for multiple keys?'''
#*​Yes! When you are logged in to your Wikia account, you can register for more keys and they will be tracked within the same account. If you would like to register keys under another account, complete the Key Request Form while logged in to the account of choice.
#'''How can I keep track of my keys?'''
#*If you have registered for a key while logged in to a Wikia account, you can access your own '''API Control Panel''', which lists all of the keys associated with the logged in account. Clicking on a key in the list will open a page with two tabs; the first tab allows you to change a key's nickname and your contact information, and the second tab allows you to monitor your key's usage stats.
#'''Who do I contact for technical support?'''
#*Do not hesitate to email the Wikia API team at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>4285</id>
      <timestamp>2011-11-08T21:54:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Frequently Asked Questions */</comment>
      <text xml:space="preserve" bytes="1509">=='''Frequently Asked Questions'''==
''Please note the the Key Management System will launch in late November. Be sure to come back for an update!''
#How do I register for an API key?
#*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any page on the [[Wikia_API_Wiki|Wikia API Wiki]] or 2) going directly to the [[Special:ApiGate/register]] URL.
#*You will be prompted to log in your Wikia account before being directed to the Key Request Form (if you were already logged in, you will see the Key Request Form immediately). After completing and submitting the form, you will be presented with your new key.
#Can I register for multiple keys?
#*​Yes! When you are logged in to your Wikia account, you can register for more keys and they will be tracked within the same account. If you would like to register keys under another account, complete the Key Request Form while logged in to the account of choice.
#How can I keep track of my keys?
#*If you have registered for a key while logged in to a Wikia account, you can access your own '''API Control Panel''', which lists all of the keys associated with the logged in account. Clicking on a key in the list will open a page with two tabs; the first tab allows you to change a key's nickname and your contact information, and the second tab allows you to monitor your key's usage stats.
#Who do I contact for technical support?
#*Do not hesitate to email the Wikia API team at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>4287</id>
      <timestamp>2011-11-08T21:58:21Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[FAQ]]&quot; ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="1509">=='''Frequently Asked Questions'''==
''Please note the the Key Management System will launch in late November. Be sure to come back for an update!''
#How do I register for an API key?
#*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any page on the [[Wikia_API_Wiki|Wikia API Wiki]] or 2) going directly to the [[Special:ApiGate/register]] URL.
#*You will be prompted to log in your Wikia account before being directed to the Key Request Form (if you were already logged in, you will see the Key Request Form immediately). After completing and submitting the form, you will be presented with your new key.
#Can I register for multiple keys?
#*​Yes! When you are logged in to your Wikia account, you can register for more keys and they will be tracked within the same account. If you would like to register keys under another account, complete the Key Request Form while logged in to the account of choice.
#How can I keep track of my keys?
#*If you have registered for a key while logged in to a Wikia account, you can access your own '''API Control Panel''', which lists all of the keys associated with the logged in account. Clicking on a key in the list will open a page with two tabs; the first tab allows you to change a key's nickname and your contact information, and the second tab allows you to monitor your key's usage stats.
#Who do I contact for technical support?
#*Do not hesitate to email the Wikia API team at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>4338</id>
      <timestamp>2011-11-13T00:45:10Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1553">=='''Frequently Asked Questions'''==
''Please note the the Key Management System will launch in late November. Be sure to come back for an update!''
#How do I register for an API key?
#*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any page on the [[Wikia_API_Wiki|Wikia API Wiki]] or 2) going directly to the [[Special:ApiGate/register]] URL.
#*You will be prompted to log in your Wikia account before being directed to the Key Request Form (if you were already logged in, you will see the Key Request Form immediately). After completing and submitting the form, you will be presented with your new key.
#Can I register for multiple keys?
#*​Yes! When you are logged in to your Wikia account, you can register for more keys and they will be tracked within the same account. If you would like to register keys under another account, complete the Key Request Form while logged in to the account of choice.
#How can I keep track of my keys?
#*If you have registered for a key while logged in to a Wikia account, you can access your own '''API Control Panel''', which lists all of the keys associated with the logged in account. Clicking on a key in the list will open a page with two tabs; the first tab allows you to change a key's nickname and your contact information, and the second tab allows you to monitor your key's usage stats.
#Who do I contact for technical support?
#*Do not hesitate to email the Wikia API team at [mailto:api@wikia.com api@wikia.com].
[[Category:Support]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4381</id>
      <timestamp>2011-11-25T04:47:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Removed coming soon message for api control panel</comment>
      <text xml:space="preserve" bytes="1441">=='''Frequently Asked Questions'''==
#How do I register for an API key?
#*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any page on the [[Wikia_API_Wiki|Wikia API Wiki]] or 2) going directly to the [[Special:ApiGate/register]] URL.
#*You will be prompted to log in your Wikia account before being directed to the Key Request Form (if you were already logged in, you will see the Key Request Form immediately). After completing and submitting the form, you will be presented with your new key.
#Can I register for multiple keys?
#*​Yes! When you are logged in to your Wikia account, you can register for more keys and they will be tracked within the same account. If you would like to register keys under another account, complete the Key Request Form while logged in to the account of choice.
#How can I keep track of my keys?
#*If you have registered for a key while logged in to a Wikia account, you can access your own '''API Control Panel''', which lists all of the keys associated with the logged in account. Clicking on a key in the list will open a page with two tabs; the first tab allows you to change a key's nickname and your contact information, and the second tab allows you to monitor your key's usage stats.
#Who do I contact for technical support?
#*Do not hesitate to email the Wikia API team at [mailto:api@wikia.com api@wikia.com].
[[Category:Support]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4382</id>
      <timestamp>2011-11-25T04:49:22Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>menurail</comment>
      <text xml:space="preserve" bytes="1577">&lt;mainpage-leftcolumn-start /&gt;
=='''Frequently Asked Questions'''==
#How do I register for an API key?
#*Register for a key by 1) clicking on the &quot;Get an API Key&quot; link in the right rail module on any page on the [[Wikia_API_Wiki|Wikia API Wiki]] or 2) going directly to the [[Special:ApiGate/register]] URL.
#*You will be prompted to log in your Wikia account before being directed to the Key Request Form (if you were already logged in, you will see the Key Request Form immediately). After completing and submitting the form, you will be presented with your new key.
#Can I register for multiple keys?
#*​Yes! When you are logged in to your Wikia account, you can register for more keys and they will be tracked within the same account. If you would like to register keys under another account, complete the Key Request Form while logged in to the account of choice.
#How can I keep track of my keys?
#*If you have registered for a key while logged in to a Wikia account, you can access your own '''API Control Panel''', which lists all of the keys associated with the logged in account. Clicking on a key in the list will open a page with two tabs; the first tab allows you to change a key's nickname and your contact information, and the second tab allows you to monitor your key's usage stats.
#Who do I contact for technical support?
#*Do not hesitate to email the Wikia API team at [mailto:api@wikia.com api@wikia.com].
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; 
{{MenuRail2}} 
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Support]]
[[Category:Resources]]</text>
    </revision>
  </page>
  <page>
    <title>File:1.JPG</title>
    <ns>6</ns>
    <id>2177</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4493</id>
      <timestamp>2011-12-13T11:03:39Z</timestamp>
      <contributor>
        <username>Katai.phraoorchids</username>
        <id>4678429</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:11.JPG</title>
    <ns>6</ns>
    <id>2182</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4498</id>
      <timestamp>2011-12-13T11:05:22Z</timestamp>
      <contributor>
        <username>Katai.phraoorchids</username>
        <id>4678429</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:4.JPG</title>
    <ns>6</ns>
    <id>2179</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4495</id>
      <timestamp>2011-12-13T11:04:23Z</timestamp>
      <contributor>
        <username>Katai.phraoorchids</username>
        <id>4678429</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:6131356874 1e123fc437 z.jpg</title>
    <ns>6</ns>
    <id>2172</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4464</id>
      <timestamp>2011-12-10T15:41:47Z</timestamp>
      <contributor>
        <username>Dvdrtrgn</username>
        <id>1294429</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:8.JPG</title>
    <ns>6</ns>
    <id>2180</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4496</id>
      <timestamp>2011-12-13T11:04:52Z</timestamp>
      <contributor>
        <username>Katai.phraoorchids</username>
        <id>4678429</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Ajax-loader1.gif</title>
    <ns>6</ns>
    <id>2623</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5037</id>
      <timestamp>2013-05-29T14:40:09Z</timestamp>
      <contributor>
        <username>Pvagare</username>
        <id>8027778</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Api arrow.png</title>
    <ns>6</ns>
    <id>2061</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>3961</id>
      <timestamp>2011-09-28T18:29:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Article.png</title>
    <ns>6</ns>
    <id>2662</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5099</id>
      <timestamp>2013-09-17T20:37:17Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Asin.jpg</title>
    <ns>6</ns>
    <id>2086</id>
      <sha1>e35l04yynrn3dtvlmmvc1e6bmy4zw83</sha1>
    <revision>
      <id>4051</id>
      <timestamp>2011-09-29T20:45:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="66">== Summary ==
Imported from LyricWiki
== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Beaker.png</title>
    <ns>6</ns>
    <id>2142</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4306</id>
      <timestamp>2011-11-10T19:04:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Bookmarks.png</title>
    <ns>6</ns>
    <id>2663</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5100</id>
      <timestamp>2013-09-17T20:37:40Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Cgoerge.jpg</title>
    <ns>6</ns>
    <id>2664</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5101</id>
      <timestamp>2013-09-18T14:33:52Z</timestamp>
      <contributor>
        <username>Samma89</username>
        <id>20949830</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Chevrolet-Camaro-Full-HD-Wallpaper.jpg</title>
    <ns>6</ns>
    <id>2626</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5040</id>
      <timestamp>2013-06-10T12:49:58Z</timestamp>
      <contributor>
        <username>Cebotari.roman</username>
        <id>10684786</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Completed.png</title>
    <ns>6</ns>
    <id>2070</id>
      <sha1>hz7xo05704vqd93fk087okq2ks717l2</sha1>
    <revision>
      <id>4012</id>
      <timestamp>2011-09-28T23:57:22Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="28">== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Docs.png</title>
    <ns>6</ns>
    <id>2057</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>3948</id>
      <timestamp>2011-09-28T02:48:50Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Example.jpg</title>
    <ns>6</ns>
    <id>2031</id>
      <sha1>avvqjdicgoj3yc55s2yebigpcgvfh5i</sha1>
    <revision>
      <id>2782</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="130">Cropped and resized from [[Commons:Image:LotusBud0048a.jpg]]

*Photographer: [[Commons:User:Fg2|Fg2]]

{{PD}}

[[Category:Images]]</text>
    </revision>
  </page>
  <page>
    <title>File:Failed.png</title>
    <ns>6</ns>
    <id>2071</id>
      <sha1>e35l04yynrn3dtvlmmvc1e6bmy4zw83</sha1>
    <revision>
      <id>4013</id>
      <timestamp>2011-09-28T23:58:20Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="66">== Summary ==
Imported from LyricWiki
== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Favicon.ico</title>
    <ns>6</ns>
    <id>1773</id>
      <sha1>c82so8rwzitlicf8blw7rv9bm9887wi</sha1>
    <revision>
      <id>3873</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="136">The [[Help:Favicon|favicon]] of the wiki. For more information, please visit the [[Help:Favicon|favicon help page]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>3905</id>
      <timestamp>2011-08-16T19:58:37Z</timestamp>
      <contributor>
        <username>CreateWiki script</username>
        <id>929702</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[File:Favicon.ico]]&quot;: Part of the official interface ([edit=sysop] (indefinite) [move=sysop] (indefinite) [create=sysop] (expires 19:58, August 16, 2011 (UTC)))</comment>
      <text xml:space="preserve" bytes="136">The [[Help:Favicon|favicon]] of the wiki. For more information, please visit the [[Help:Favicon|favicon help page]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5175</id>
      <timestamp>2013-09-20T13:36:48Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Favicon.ico]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="136">The [[Help:Favicon|favicon]] of the wiki. For more information, please visit the [[Help:Favicon|favicon help page]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5178</id>
      <timestamp>2013-09-20T13:42:45Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Favicon.ico]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="136">The [[Help:Favicon|favicon]] of the wiki. For more information, please visit the [[Help:Favicon|favicon help page]].
[[Category:Images]]</text>
    </revision>
  </page>
  <page>
    <title>File:Finish.PNG</title>
    <ns>6</ns>
    <id>2141</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4305</id>
      <timestamp>2011-11-10T19:03:04Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Forum new.gif</title>
    <ns>6</ns>
    <id>1482</id>
      <sha1>1nznwr399evy1nfkgaumzxw61yxkfdt</sha1>
    <revision>
      <id>3712</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="162">*'''Description:''' Image from the Mini icon theme by Mark James
*'''Source:''' http://www.famfamfam.com/lab/icons/mini/
&lt;br /&gt;
{{Permission}}
[[Category:Images]]</text>
    </revision>
  </page>
  <page>
    <title>File:Fozzie.png</title>
    <ns>6</ns>
    <id>2143</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4307</id>
      <timestamp>2011-11-10T19:05:00Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG 1.PNG</title>
    <ns>6</ns>
    <id>2101</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4118</id>
      <timestamp>2011-10-11T22:08:49Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG 2.PNG</title>
    <ns>6</ns>
    <id>2102</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4119</id>
      <timestamp>2011-10-11T22:08:56Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG 3.PNG</title>
    <ns>6</ns>
    <id>2103</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4120</id>
      <timestamp>2011-10-11T22:09:24Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG 4.PNG</title>
    <ns>6</ns>
    <id>2104</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4121</id>
      <timestamp>2011-10-11T22:09:32Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG iOS Article.jpeg</title>
    <ns>6</ns>
    <id>2671</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5109</id>
      <timestamp>2013-09-18T18:29:21Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG iOS Category.jpeg</title>
    <ns>6</ns>
    <id>2670</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5108</id>
      <timestamp>2013-09-18T18:29:09Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG iOS Home.jpeg</title>
    <ns>6</ns>
    <id>2668</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5106</id>
      <timestamp>2013-09-18T18:27:14Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:GG iOS Search.jpeg</title>
    <ns>6</ns>
    <id>2669</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5107</id>
      <timestamp>2013-09-18T18:27:35Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Game guides slider.jpg</title>
    <ns>6</ns>
    <id>2063</id>
      <sha1>hz7xo05704vqd93fk087okq2ks717l2</sha1>
    <revision>
      <id>3980</id>
      <timestamp>2011-09-28T22:27:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="28">== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Home.PNG</title>
    <ns>6</ns>
    <id>2138</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4302</id>
      <timestamp>2011-11-10T19:02:06Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Incomplete.png</title>
    <ns>6</ns>
    <id>2072</id>
      <sha1>e35l04yynrn3dtvlmmvc1e6bmy4zw83</sha1>
    <revision>
      <id>4014</id>
      <timestamp>2011-09-28T23:58:36Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="66">== Summary ==
Imported from LyricWiki
== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Jacob Black.PNG</title>
    <ns>6</ns>
    <id>2139</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4303</id>
      <timestamp>2011-11-10T19:02:26Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Key.png</title>
    <ns>6</ns>
    <id>2056</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>3947</id>
      <timestamp>2011-09-28T02:48:26Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:LW 1.jpg</title>
    <ns>6</ns>
    <id>2096</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4113</id>
      <timestamp>2011-10-11T21:29:57Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:LW 2.jpg</title>
    <ns>6</ns>
    <id>2097</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4114</id>
      <timestamp>2011-10-11T21:30:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:LW 3.jpg</title>
    <ns>6</ns>
    <id>2098</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4115</id>
      <timestamp>2011-10-11T21:30:25Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:LW 4.jpg</title>
    <ns>6</ns>
    <id>2099</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4116</id>
      <timestamp>2011-10-11T21:30:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Lyricwiki mobile slider.jpg</title>
    <ns>6</ns>
    <id>2062</id>
      <sha1>hz7xo05704vqd93fk087okq2ks717l2</sha1>
    <revision>
      <id>3979</id>
      <timestamp>2011-09-28T22:25:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="28">== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Me (Sunglasses).png</title>
    <ns>6</ns>
    <id>2409</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4772</id>
      <timestamp>2012-06-03T06:53:14Z</timestamp>
      <contributor>
        <username>LPMissy</username>
        <id>5159650</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Miss Piggy.PNG</title>
    <ns>6</ns>
    <id>2140</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4304</id>
      <timestamp>2011-11-10T19:02:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Padlock.png</title>
    <ns>6</ns>
    <id>2087</id>
      <sha1>n9fe4zzyao5aw3jke1cal9fwo4x2vah</sha1>
    <revision>
      <id>4052</id>
      <timestamp>2011-09-29T20:46:54Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from LyricWiki.

Original Source: Open Clip Art Library, http://openclipart.org/media/files/AJ/9276)</comment>
      <text xml:space="preserve" bytes="109">Imported from LyricWiki.

Original Source: Open Clip Art Library, http://openclipart.org/media/files/AJ/9276)</text>
    </revision>
  </page>
  <page>
    <title>File:Pinkie1.jpg</title>
    <ns>6</ns>
    <id>2203</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4543</id>
      <timestamp>2012-01-16T13:31:51Z</timestamp>
      <contributor>
        <username>PinkiePiefan</username>
        <id>4763456</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:S4.jpg</title>
    <ns>6</ns>
    <id>2561</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4954</id>
      <timestamp>2012-12-14T09:32:34Z</timestamp>
      <contributor>
        <username>Steriousman</username>
        <id>5868545</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Stats.png</title>
    <ns>6</ns>
    <id>2661</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5098</id>
      <timestamp>2013-09-17T20:36:53Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Timer.png</title>
    <ns>6</ns>
    <id>2054</id>
      <sha1>p3j0c6z5g5jk8lw8vfxnk0w982tef8l</sha1>
    <revision>
      <id>3939</id>
      <timestamp>2011-09-28T00:02:50Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Wikia bought this image from a stock-art place or something.</comment>
      <text xml:space="preserve" bytes="105">== Summary ==
Wikia bought this image from a stock-art place or something.
== Licensing ==
{{Permission}}</text>
    </revision>
    <revision>
      <id>3940</id>
      <timestamp>2011-09-28T00:03:45Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="155">== Summary ==
Wikia bought this image from a stock-art place called &quot;[http://www.aha-soft.com/support.htm icon automation]&quot;.
== Licensing ==
{{Permission}}</text>
    </revision>
  </page>
  <page>
    <title>File:Wiki home.png</title>
    <ns>6</ns>
    <id>2660</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5097</id>
      <timestamp>2013-09-17T20:36:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Wiki-background</title>
    <ns>6</ns>
    <id>2038</id>
      <sha1>kg8xh36wrpprku0f68gvlrht0sdqgdm</sha1>
    <revision>
      <id>3895</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="149">The [[Help:Theme designer|background]] of the wiki. To add a background, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5177</id>
      <timestamp>2013-09-20T13:36:48Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded &amp;quot;[[File:Wiki-background]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="149">The [[Help:Theme designer|background]] of the wiki. To add a background, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5189</id>
      <timestamp>2013-09-20T16:14:43Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Wiki-background]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="149">The [[Help:Theme designer|background]] of the wiki. To add a background, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5191</id>
      <timestamp>2013-09-20T16:20:18Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Wiki-background]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="149">The [[Help:Theme designer|background]] of the wiki. To add a background, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
  </page>
  <page>
    <title>File:Wiki-wordmark.png</title>
    <ns>6</ns>
    <id>2037</id>
      <sha1>n2nfprhfxfwqdv4x8czh3oqh4yann47</sha1>
    <revision>
      <id>3894</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="142">The [[Help:Wordmark|wordmark]] of the wiki. To upload a wordmark, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>3931</id>
      <timestamp>2011-09-26T23:45:31Z</timestamp>
      <contributor>
        <username>Lilstig</username>
        <id>2131613</id>
      </contributor>
      <comment>uploaded &amp;quot;[[File:Wiki-wordmark.png]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="142">The [[Help:Wordmark|wordmark]] of the wiki. To upload a wordmark, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5176</id>
      <timestamp>2013-09-20T13:36:48Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Wiki-wordmark.png]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="142">The [[Help:Wordmark|wordmark]] of the wiki. To upload a wordmark, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5179</id>
      <timestamp>2013-09-20T13:47:25Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Wiki-wordmark.png]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="142">The [[Help:Wordmark|wordmark]] of the wiki. To upload a wordmark, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
    <revision>
      <id>5180</id>
      <timestamp>2013-09-20T13:52:49Z</timestamp>
      <contributor>
        <username>Lukasz Belcarski</username>
        <id>15943350</id>
      </contributor>
      <comment>Lukasz Belcarski uploaded a new version of &amp;quot;[[File:Wiki-wordmark.png]]&amp;quot;</comment>
      <text xml:space="preserve" bytes="142">The [[Help:Wordmark|wordmark]] of the wiki. To upload a wordmark, please use the [[Special:ThemeDesigner|theme designer]].
[[Category:Images]]</text>
    </revision>
  </page>
  <page>
    <title>File:Wikia API slider.jpg</title>
    <ns>6</ns>
    <id>2064</id>
      <sha1>hz7xo05704vqd93fk087okq2ks717l2</sha1>
    <revision>
      <id>3982</id>
      <timestamp>2011-09-28T22:29:25Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="28">== Licensing ==
{{CC-BY-SA}}</text>
    </revision>
  </page>
  <page>
    <title>File:Wikia-Visualization-Main.png</title>
    <ns>6</ns>
    <id>2642</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5054</id>
      <timestamp>2013-08-08T00:33:38Z</timestamp>
      <contributor>
        <username>Pseudobread</username>
        <id>5836391</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Wikiaapi-2 01.png</title>
    <ns>6</ns>
    <id>2676</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5182</id>
      <timestamp>2013-09-20T16:01:09Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Wikiaapi-2 03.png</title>
    <ns>6</ns>
    <id>2677</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>5183</id>
      <timestamp>2013-09-20T16:01:22Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>File:Y88dotinplaynow (2).jpg</title>
    <ns>6</ns>
    <id>2581</id>
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    <revision>
      <id>4980</id>
      <timestamp>2013-02-11T19:24:12Z</timestamp>
      <contributor>
        <username>Wayndsouza</username>
        <id>6430811</id>
      </contributor>
      <text xml:space="preserve" bytes="0" />
    </revision>
  </page>
  <page>
    <title>Forum:Help desk</title>
    <ns>110</ns>
    <id>1480</id>
      <sha1>b5pvc222mk2bzu1oo0nxtfczldyeowf</sha1>
    <revision>
      <id>3855</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1148">&lt;div class=&quot;forumheader&quot;&gt;'''Forums:''' [[Forum:Index|Index]] &gt; {{PAGENAME}}&lt;/div&gt;&lt;br /&gt;
Welcome to the help desk.  This is a place to ask for help from other members of this wiki's community.  To add a new topic, type the title in the box below then click &quot;Add new topic&quot;.

For other sources of help, please see the [[:Category:Help|help category]].

[[Special:Recentchangeslinked/Category:{{PAGENAME}}|View recent changes for this forum]] | [[:Category:{{PAGENAME}}|View alphabetic list of topics]]

----
&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;!-- You could create (or transclude) a forum header here --&gt;&lt;/td&gt;&lt;td width=&quot;50%&quot;&gt;&lt;createbox&gt;
break=no
prefix=Forum:
preload=Template:Forumheader/{{PAGENAME}}
buttonlabel=Add new topic
&lt;/createbox&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;table class=&quot;forumlist&quot; width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;th class=&quot;forum_title&quot; align=&quot;left&quot;&gt;Topic&lt;/th&gt;&lt;th class=&quot;forum_edited&quot; align=&quot;left&quot;&gt;Last Edit&lt;/th&gt;&lt;th class=&quot;forum_editor&quot; align=&quot;left&quot;&gt;Last Author&lt;/th&gt;&lt;/tr&gt;
&lt;forum&gt;
namespace=Forum
category={{PAGENAME}}
shownamespace=false
addlasteditor=true
historylink=true
cache=false
&lt;/forum&gt;&lt;/table&gt;

[[Category:Forums| Help desk]] [[category:help| Forum:Help desk]]</text>
    </revision>
  </page>
  <page>
    <title>Forum:Index</title>
    <ns>110</ns>
    <id>1462</id>
      <sha1>s624znlphps3m0btb2kpy4gvfj3dbh8</sha1>
    <revision>
      <id>3825</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="936">Welcome to the {{SITENAME}} forum! This forum can be used by members of this community to discuss topics related to their wiki. Some communities prefer to use the [[Project talk:Community Portal|Community Portal]] instead for wiki discussions; it's up to you.

:''Notes: You may have to [{{fullurl:{{FULLPAGENAME}}|action=purge}} purge] this page to see changes; for more explanation and how to set up new forums, see [[Help:Wiki-style forums]].''

&lt;table class=&quot;forumlist&quot; width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;th class=&quot;forum_title&quot; align=&quot;left&quot;&gt;Forum&lt;/th&gt;&lt;th class=&quot;forum_edited&quot; align=&quot;left&quot;&gt;Last Edit&lt;/th&gt;&lt;th class=&quot;forum_editor&quot; align=&quot;left&quot;&gt;Last Author&lt;/th&gt;&lt;/tr&gt;
&lt;forum&gt;
namespace=Forum
category=Help desk
title=Forum:Help desk
shownamespace=false
addlasteditor=true
&lt;/forum&gt;
&lt;forum&gt;
namespace=Forum
category=Watercooler
title=Forum:Watercooler
shownamespace=false
addlasteditor=true
&lt;/forum&gt;
&lt;/table&gt;

[[Category:Forums|*]]
[[Category:Help|Forums]]</text>
    </revision>
  </page>
  <page>
    <title>Forum:Watercooler</title>
    <ns>110</ns>
    <id>1481</id>
      <sha1>mndut6or78zs28xm4u2zfjl10uo90m7</sha1>
    <revision>
      <id>3854</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1010">&lt;div class=&quot;forumheader&quot;&gt;'''Forums:''' [[Forum:Index|Index]] &gt; {{PAGENAME}}&lt;/div&gt;&lt;br /&gt;

Welcome to the Watercooler!  This is a place for community discussion about this wiki.  To add a new topic, type the title in the box below and click &quot;Add new topic&quot;.

[[Special:Recentchangeslinked/Category:{{PAGENAME}}|View recent changes for this forum]] | [[:Category:{{PAGENAME}}|View alphabetic list of topics]]

----
&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;!-- You could create (or transclude) a forum header here --&gt;&lt;/td&gt;&lt;td width=&quot;50%&quot;&gt;&lt;createbox&gt;
break=no
prefix=Forum:
preload=Template:Forumheader/{{PAGENAME}}
buttonlabel=Add new topic
&lt;/createbox&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;table class=&quot;forumlist&quot; width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;th class=&quot;forum_title&quot; align=&quot;left&quot;&gt;Topic&lt;/th&gt;&lt;th class=&quot;forum_edited&quot; align=&quot;left&quot;&gt;Last Edit&lt;/th&gt;&lt;th class=&quot;forum_editor&quot; align=&quot;left&quot;&gt;Last Author&lt;/th&gt;&lt;/tr&gt;
&lt;forum&gt;
namespace=Forum
category={{PAGENAME}}
shownamespace=false
addlasteditor=true
historylink=true
cache=false
&lt;/forum&gt;&lt;/table&gt;

[[Category:Forums| ]]</text>
    </revision>
  </page>
  <page>
    <title>Forum:Welcome to the help desk</title>
    <ns>110</ns>
    <id>1491</id>
      <sha1>pjbfvfr6kx441k0c966iycrftixrdkc</sha1>
    <revision>
      <id>3087</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="492">{{Forumheader|Help desk}}

&lt;!-- Please put your content under this line.  Be sure to sign your edits with four tildes: ~~~~ --&gt;
Welcome to the {{SITENAME}} help desk.  This is the place to ask for help with anything related to the wiki. There are more help pages in [[:Category:Help]] or you can also ask questions on the talk pages of any of the [[Special:ListUsers/sysop|site admins]].

See [[Help:Forums]] for more on how forums work and how to add new forums to the [[Forum:Index|index]].</text>
    </revision>
  </page>
  <page>
    <title>Forum:Welcome to the watercooler</title>
    <ns>110</ns>
    <id>1490</id>
      <sha1>ri9qsnsx31bt3namsbtq5hxhl40pw3q</sha1>
    <revision>
      <id>3088</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="464">{{Forumheader|Watercooler}}

&lt;!-- Please put your content under this line.  Be sure to sign your edits with four tildes ~~~~ --&gt;
Welcome to the {{SITENAME}} watercooler. This is a place to discuss anything about this wiki - how you use it is up to this community! You can discuss the subject of the wiki, or just the wiki itself, or even add an off-topic area. See [[Help:Forums]] for more on how forums work and how to add new forums to the [[Forum:Index|index]].</text>
    </revision>
  </page>
  <page>
    <title>Help:Forums</title>
    <ns>12</ns>
    <id>2721</id>
      <sha1>ss3u8ni4utq39hnkq7cwxxblmn1reoh</sha1>
    <revision>
      <id>5252</id>
      <timestamp>2013-12-13T03:28:42Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <comment>create blank page not to have notice above help page</comment>
      <text xml:space="preserve" bytes="7">''' '''</text>
    </revision>
  </page>
  <page>
    <title>JS MediaWiki Client</title>
    <ns>0</ns>
    <id>2165</id>
      <sha1>4gvza88yrg2sk612akghh9evkfil5rb</sha1>
    <revision>
      <id>4417</id>
      <timestamp>2011-12-06T11:30:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>quick summary of our JS API.</comment>
      <text xml:space="preserve" bytes="611">For simple MediaWiki operations, Wikia uses a general purpose MediaWiki API client that it developed in-house.

Currently, the documentation is in comments in the file itself.

== Download ==
The code can be found in Wikia's public SVN repository:
In trac (highlighted &amp; with history, etc.):&lt;br/&gt;
http://trac.wikia-code.com/browser/wikia/trunk/extensions/wikia/JavascriptAPI/Mediawiki.js

View raw code:&lt;br/&gt;
https://svn.wikia-code.com/wikia/trunk/extensions/wikia/JavascriptAPI/Mediawiki.js

Download js file:&lt;br/&gt;
http://trac.wikia-code.com/export/45819/wikia/trunk/extensions/wikia/JavascriptAPI/Mediawiki.js</text>
    </revision>
    <revision>
      <id>4463</id>
      <timestamp>2011-12-09T15:33:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+notes</comment>
      <text xml:space="preserve" bytes="758">For simple MediaWiki operations, Wikia uses a general purpose MediaWiki API client that it developed in-house.

Currently, the documentation is in comments in the file itself.

== Download ==
The code can be found in Wikia's public SVN repository:
In trac (highlighted &amp; with history, etc.):&lt;br/&gt;
http://trac.wikia-code.com/browser/wikia/trunk/extensions/wikia/JavascriptAPI/Mediawiki.js

View raw code:&lt;br/&gt;
https://svn.wikia-code.com/wikia/trunk/extensions/wikia/JavascriptAPI/Mediawiki.js

Download js file:&lt;br/&gt;
http://trac.wikia-code.com/export/45819/wikia/trunk/extensions/wikia/JavascriptAPI/Mediawiki.js

== Notes ==
* See [[Client libraries]] for other options in many languages.
* Currently maintained at Wikia by [[User:Sean Colombo|Sean Colombo]]</text>
    </revision>
    <revision>
      <id>5204</id>
      <timestamp>2013-09-28T16:03:23Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>/* Download */</comment>
      <text xml:space="preserve" bytes="617">For simple MediaWiki operations, Wikia uses a general purpose MediaWiki API client that it developed in-house.

Currently, the documentation is in comments in the file itself.

== Download ==
The code can be found in Wikia's public GitHub repository:
In trac (highlighted &amp; with history, etc.):&lt;br/&gt;
https://github.com/Wikia/app/tree/dev/extensions/wikia/JavascriptAPI

View raw code:&lt;br/&gt;
https://raw.github.com/Wikia/app/dev/extensions/wikia/JavascriptAPI/Mediawiki.js

== Notes ==
* See [[Client libraries]] for other options in many languages.
* Currently maintained at Wikia by [[User:Sean Colombo|Sean Colombo]]</text>
    </revision>
  </page>
  <page>
    <title>Legacy API</title>
    <ns>0</ns>
    <id>2047</id>
      <sha1>69moxqns2hc3uodtm0uh39maurimaeh</sha1>
    <revision>
      <id>3921</id>
      <timestamp>2011-09-13T22:32:46Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Save structure</comment>
      <text xml:space="preserve" bytes="411">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==

== LyricWiki API Documentation ==

== Wikia Custom API Documentation ==</text>
    </revision>
    <revision>
      <id>3924</id>
      <timestamp>2011-09-13T22:47:25Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API Documentation */</comment>
      <text xml:space="preserve" bytes="525">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* {{TODO|Make the visual browser of the MW docs}}

== LyricWiki API Documentation ==

== Wikia Custom API Documentation ==</text>
    </revision>
    <revision>
      <id>3925</id>
      <timestamp>2011-09-13T22:49:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="769">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* {{TODO|Make the visual browser of the MW docs}}

== LyricWiki API Documentation ==
* '''[[LyricWiki API]]''' 
* {{TODO|Link to the pages for the REST documentation and SOAP documentation}}

== Wikia Custom API Documentation ==
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}</text>
    </revision>
    <revision>
      <id>3926</id>
      <timestamp>2011-09-15T18:28:19Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API Documentation */</comment>
      <text xml:space="preserve" bytes="841">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* {{TODO|Make the visual browser of the MW docs}}

== LyricWiki API Documentation ==
* '''[[LyricWiki API]]''' 
* {{TODO|Link to the pages for the REST documentation and SOAP documentation. Link separately to quick-start guides/examples, client libraries, etc.}}

== Wikia Custom API Documentation ==
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}</text>
    </revision>
    <revision>
      <id>3927</id>
      <timestamp>2011-09-21T23:49:46Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* MediaWiki API Documentation */ linked to raw docs and browsable visual docs</comment>
      <text xml:space="preserve" bytes="1014">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[http://sean.wikia-dev.com/wiki/Special:ApiExplorer Special:ApiExplorer]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
* '''[[LyricWiki API]]''' 
* {{TODO|Link to the pages for the REST documentation and SOAP documentation. Link separately to quick-start guides/examples, client libraries, etc.}}

== Wikia Custom API Documentation ==
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}</text>
    </revision>
    <revision>
      <id>3951</id>
      <timestamp>2011-09-28T04:08:26Z</timestamp>
      <contributor>
        <ip>71.198.136.170</ip>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1037">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[http://sean.wikia-dev.com/wiki/Special:ApiExplorer Special:ApiExplorer]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
* '''[[LyricWiki API]]''' 
* {{TODO|Link to the pages for the REST documentation and SOAP documentation. Link separately to quick-start guides/examples, client libraries, etc.}}

== Wikia Custom API Documentation ==
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3994</id>
      <timestamp>2011-09-28T23:17:01Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>update link to [[Special:ApiExplorer]] now that it's live on production.</comment>
      <text xml:space="preserve" bytes="988">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
* '''[[LyricWiki API]]''' 
* {{TODO|Link to the pages for the REST documentation and SOAP documentation. Link separately to quick-start guides/examples, client libraries, etc.}}

== Wikia Custom API Documentation ==
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4059</id>
      <timestamp>2011-09-29T21:01:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki API Documentation */</comment>
      <text xml:space="preserve" bytes="1024">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
* '''[[LyricWiki API]]''' 
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== Wikia Custom API Documentation ==
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4071</id>
      <timestamp>2011-09-29T21:57:18Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1826">Since Wikia is built on top of MediaWiki, the '''MediaWiki API''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia).  It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]].  It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.).  ''For legal reasons, the API is not allowed to provide full-lyrics at the moment.  It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]''' 
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API.
* {{TODO|Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4072</id>
      <timestamp>2011-09-29T21:57:37Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Wikia Custom API Documentation */</comment>
      <text xml:space="preserve" bytes="1862">Since Wikia is built on top of MediaWiki, the '''MediaWiki API''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia).  It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]].  It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.).  ''For legal reasons, the API is not allowed to provide full-lyrics at the moment.  It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]''' 
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API.
* {{TODO|Nirvana isn't well documented yet.  Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4073</id>
      <timestamp>2011-09-29T21:57:55Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1866">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia).  It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]].  It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.).  ''For legal reasons, the API is not allowed to provide full-lyrics at the moment.  It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]''' 
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API.
* {{TODO|Nirvana isn't well documented yet.  Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4079</id>
      <timestamp>2011-09-30T21:39:37Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Wikia Custom API Documentation */</comment>
      <text xml:space="preserve" bytes="2093">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia).  It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]].  It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.).  ''For legal reasons, the API is not allowed to provide full-lyrics at the moment.  It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]''' 
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API.
* {{TODO|Nirvana isn't well documented publicly yet &amp; the API for external requests doesn't appear to be documented.  Pull in what we can from existing wiki page docs. There might not be that much info on using Nirvana via API vs. through code.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
*** internal/Nirvana
*** internal/Nirvana/JavaScript
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4080</id>
      <timestamp>2011-09-30T23:59:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Wikia Custom API Documentation */ link to Nirvana documentation (now made public).</comment>
      <text xml:space="preserve" bytes="2164">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites.  In addition,  the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== MediaWiki API Documentation ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia).  It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]].  It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.).  ''For legal reasons, the API is not allowed to provide full-lyrics at the moment.  It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]''' 
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API.  For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4085</id>
      <timestamp>2011-10-04T23:18:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Bolding the headers for some visual hierarchy :-).</comment>
      <text xml:space="preserve" bytes="2174">Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4175</id>
      <timestamp>2011-10-12T23:37:08Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="2298">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4176</id>
      <timestamp>2011-10-12T23:37:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="2310">__NORAIL__

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4177</id>
      <timestamp>2011-10-12T23:38:26Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="2308">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
__NORAIL__
&lt;mainpage-leftcolumn-start /&gt;

Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4178</id>
      <timestamp>2011-10-12T23:39:56Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="2308">__NORAIL__

&lt;mainpage-leftcolumn-start /&gt;

Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4179</id>
      <timestamp>2011-10-12T23:41:30Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="2307">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4211</id>
      <timestamp>2011-10-14T00:44:33Z</timestamp>
      <contributor>
        <ip>50.57.136.164</ip>
      </contributor>
      <comment>I will be putnitg this dazzling insight to good use in no time.</comment>
      <text xml:space="preserve" bytes="127">I will be putnitg this dazzling insight to good use in no time.
I will be putnitg this dazzling insight to good use in no time.</text>
    </revision>
    <revision>
      <id>4215</id>
      <timestamp>2011-10-14T06:28:53Z</timestamp>
      <contributor>
        <ip>24.115.157.239</ip>
      </contributor>
      <comment>Undo revision 4211 by [[Special:Contributions/50.57.136.164|50.57.136.164]] ([[User talk:50.57.136.164|talk]])</comment>
      <text xml:space="preserve" bytes="2330">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4244</id>
      <timestamp>2011-10-28T06:19:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>MenuRail2</comment>
      <text xml:space="preserve" bytes="2331">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4349</id>
      <timestamp>2011-11-22T21:57:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+link to [[Client libraries]]</comment>
      <text xml:space="preserve" bytes="2516">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix.
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4378</id>
      <timestamp>2011-11-25T03:41:58Z</timestamp>
      <contributor>
        <ip>71.198.136.170</ip>
      </contributor>
      <comment>mediawiki and wikia custom api link update</comment>
      <text xml:space="preserve" bytes="2603">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://sean.wikia-dev.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix.
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4784</id>
      <timestamp>2012-06-25T09:48:50Z</timestamp>
      <contributor>
        <username>Artur Klajnerok</username>
        <id>5196525</id>
      </contributor>
      <text xml:space="preserve" bytes="2598">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix.
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4903</id>
      <timestamp>2012-09-08T00:51:44Z</timestamp>
      <contributor>
        <ip>178.18.86.38</ip>
      </contributor>
      <comment>You can aawlys tell an expert! Thanks for contributing.</comment>
      <text xml:space="preserve" bytes="111">You can aawlys tell an expert! Thanks for contributing.
You can aawlys tell an expert! Thanks for contributing.</text>
    </revision>
    <revision>
      <id>4905</id>
      <timestamp>2012-09-08T01:02:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/178.18.86.38|178.18.86.38]] ([[User talk:178.18.86.38|talk]] | [[Special:Block/178.18.86.38|block]]) to last version by [[User:Artur Klajnerok|Artur Klajnerok]]</comment>
      <text xml:space="preserve" bytes="2598">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.).
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix.
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4942</id>
      <timestamp>2012-11-06T23:12:18Z</timestamp>
      <contributor>
        <ip>74.105.118.14</ip>
      </contributor>
      <text xml:space="preserve" bytes="2601">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]'''provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation. [[ Movie Credits (2013)]]
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]'''page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4947</id>
      <timestamp>2012-11-23T03:57:28Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>/* Client Libraries */</comment>
      <text xml:space="preserve" bytes="2602">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]'''provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation. [[ Movie Credits (2013)]]
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4948</id>
      <timestamp>2012-11-28T04:47:36Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2576">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]'''provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4957</id>
      <timestamp>2012-12-17T14:18:26Z</timestamp>
      <contributor>
        <ip>36.75.181.25</ip>
      </contributor>
      <comment>/* Client Libraries */</comment>
      <text xml:space="preserve" bytes="2771">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]'''provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]'''page for more information &amp; a support matrix.   
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__


[http://CLOTHINGSTORE86.COM clothingStore]&lt;br /&gt;[http://SHOPAMERICANAPPARELONLINE.COM clothingStore]&lt;br /&gt;[http://STOREONLINE86.COM Store Online]&lt;br /&gt;[http://seputarkita.info berita terkini]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4964</id>
      <timestamp>2012-12-21T18:20:37Z</timestamp>
      <contributor>
        <username>Sbluen</username>
        <id>2039590</id>
      </contributor>
      <comment>Undo revision 4957 by [[Special:Contributions/36.75.181.25|36.75.181.25]] ([[User talk:36.75.181.25|talk]]) rv spam</comment>
      <text xml:space="preserve" bytes="2576">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]'''provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5002</id>
      <timestamp>2013-03-27T04:23:04Z</timestamp>
      <contributor>
        <ip>212.159.86.132</ip>
      </contributor>
      <text xml:space="preserve" bytes="336">&lt;mainpage-leftcolumn-start /&gt;


== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5012</id>
      <timestamp>2013-04-14T11:55:51Z</timestamp>
      <contributor>
        <username>TK-999</username>
        <id>2200849</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/212.159.86.132|212.159.86.132]] ([[User talk:212.159.86.132|talk]] | [[Special:Block/212.159.86.132|block]]) to last version by [[User:Sbluen|Sbluen]]</comment>
      <text xml:space="preserve" bytes="2576">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]'''provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__
== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5047</id>
      <timestamp>2013-06-15T06:51:35Z</timestamp>
      <contributor>
        <ip>94.210.78.146</ip>
      </contributor>
      <comment>Add missing space</comment>
      <text xml:space="preserve" bytes="2578">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5062</id>
      <timestamp>2013-08-24T01:53:24Z</timestamp>
      <contributor>
        <ip>180.252.243.37</ip>
      </contributor>
      <comment>/* Client Libraries */</comment>
      <text xml:space="preserve" bytes="2326">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
hacked
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5064</id>
      <timestamp>2013-08-24T01:54:00Z</timestamp>
      <contributor>
        <ip>180.252.243.37</ip>
      </contributor>
      <comment>/* Wikia Custom API Documentation */</comment>
      <text xml:space="preserve" bytes="1693">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Hacked''' ==

== Client Libraries ==
hacked
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5065</id>
      <timestamp>2013-08-27T23:40:11Z</timestamp>
      <contributor>
        <username>Iggyvolz</username>
        <id>4519283</id>
      </contributor>
      <comment>Vandalism</comment>
      <text xml:space="preserve" bytes="2578">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in many languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5072</id>
      <timestamp>2013-09-07T21:45:44Z</timestamp>
      <contributor>
        <username>Sashankgogula</username>
        <id>17760730</id>
      </contributor>
      <comment>/* LyricWiki API Documentation */</comment>
      <text xml:space="preserve" bytes="2582">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the '''[[Documentation#MediaWiki_API_Documentation|MediaWiki API]]''' can be used to access most of the data on our sites. In addition, the '''[[LyricWiki API]]''' gives access to LyricWiki and the '''[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]''' provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

== '''MediaWiki API Documentation''' ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== '''LyricWiki API Documentation''' ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* '''[[LyricWiki API]]'''
* '''[[LyricWiki API/REST]]''' - REST-like API (could also be considered similar to XML-RPC)
* '''[[LyricWiki API/SOAP]]''' - SOAP API (includes links to example code in multiple languages).

== '''Wikia Custom API Documentation''' ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the '''[[Client libraries]]''' page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5110</id>
      <timestamp>2013-09-18T18:57:49Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="2522">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

== MediaWiki API Documentation ==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5118</id>
      <timestamp>2013-09-18T19:04:46Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="2553">&lt;mainpage-leftcolumn-start /&gt;
Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.). 
__TOC__

&lt;span style=&quot;font-size:18px;&quot;&gt;MediaWiki API Documentation&lt;/span&gt;
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

== Wikia Custom API Documentation ==
For Wikia's custom features that aren't found in default MediaWiki installations, most data can be accessed through the Wikia Custom API (which was code-named &quot;Nirvana&quot; for short).
* The Nirvana framework is used for a LOT more than just exposing data via the API. For documentation on the framework in general, see [[w:c:dev:Nirvana|Nirvana documentation]] on the Dev wiki.
** {{TODO|the API for external requests doesn't appear to be documented.}}
** {{TODO|Create one page on here that is the intro to what Nirvana is and links out to other docs}}
** {{TODO|Beef up dev/Nirvana/JavaScript and link to it}}

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5160</id>
      <timestamp>2013-09-18T20:24:27Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="1928">&lt;mainpage-leftcolumn-start /&gt;
&lt;div style=&quot;float:right&quot;&gt;__TOC__&lt;/div&gt;

== Legacy APIs ==
Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.).

===MediaWiki API Documentation===
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

=== LyricWiki API Documentation ===
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

=== Client Libraries ===
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5161</id>
      <timestamp>2013-09-18T20:25:05Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="1905">&lt;mainpage-leftcolumn-start /&gt;

&lt;div style=&quot;float:right&quot;&gt;__TOC__&lt;/div&gt;

Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.).

==MediaWiki API Documentation==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5162</id>
      <timestamp>2013-09-18T20:25:17Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <minor/>
      <comment>Shareif moved page [[Documentation]] to [[Legacy API]]</comment>
      <text xml:space="preserve" bytes="1905">&lt;mainpage-leftcolumn-start /&gt;

&lt;div style=&quot;float:right&quot;&gt;__TOC__&lt;/div&gt;

Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.).

==MediaWiki API Documentation==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5233</id>
      <timestamp>2013-11-28T20:23:16Z</timestamp>
      <contributor>
        <ip>37.201.121.197</ip>
      </contributor>
      <comment>/* LyricWiki API Documentation */</comment>
      <text xml:space="preserve" bytes="1913">&lt;mainpage-leftcolumn-start /&gt;

&lt;div style=&quot;float:right&quot;&gt;__TOC__&lt;/div&gt;

Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.).

==MediaWiki API Documentation==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''

'':)''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5251</id>
      <timestamp>2013-12-13T03:23:03Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/37.201.121.197|37.201.121.197]] ([[User talk:37.201.121.197|talk]] | [[Special:Block/37.201.121.197|block]]) to last version by [[User:Shareif|Shareif]]</comment>
      <text xml:space="preserve" bytes="1905">&lt;mainpage-leftcolumn-start /&gt;

&lt;div style=&quot;float:right&quot;&gt;__TOC__&lt;/div&gt;

Since Wikia is built on top of MediaWiki, the [[Documentation#MediaWiki_API_Documentation|MediaWiki API]] can be used to access most of the data on our sites. In addition, the [[LyricWiki API]] gives access to LyricWiki and the [[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]] provides access to many of our Wikia-specific features (LatestPhotos, etc.).

==MediaWiki API Documentation==
The MediaWiki API is built into every wiki that runs MediaWiki (whether on Wikia or elsewhere, such as Wikipedia). It gives functionality for interacting with articles in a way that covers many use-cases.
* On MediaWiki.org: http://www.mediawiki.org/wiki/API:Main_page
* On any wiki, visit &quot;[http://api.wikia.com/api.php api.php]&quot; to view raw documentation.
* On any wiki, visit &quot;[[Special:ApiExplorer]]&quot; to view browsable documentation.

== LyricWiki API Documentation ==
The LyricWiki API is specific to accessing [[w:c:lyrics:Lyrics Wiki|LyricWiki]]. It allows you to pass in an artist, song name, or album, and find the page that matches it (it's very forgiving on incorrect spelling and nicknames, etc.). ''For legal reasons, the API is not allowed to provide full-lyrics at the moment. It currently provides a fair-use sample (to verify that the match is correct) and a link to the page where the full lyrics can be viewed.''
* [[LyricWiki API]]
* [[LyricWiki API/REST]] - REST-like API (could also be considered similar to XML-RPC)
* [[LyricWiki API/SOAP]] - SOAP API (includes links to example code in multiple languages).

== Client Libraries ==
There are client libraries in many languages for these APIs. Please refer to the [[Client libraries]] page for more information &amp; a support matrix. 
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:Resources]]</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API</title>
    <ns>0</ns>
    <id>2048</id>
      <sha1>9odsmxorork0n3z7i3jtir6qzdu9rkf</sha1>
    <revision>
      <id>3922</id>
      <timestamp>2011-09-13T22:44:51Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;&lt; '''[[Documentation]]'''  TODO: Port over http://lyrics.wikia.com/LyricWiki:API&quot;</comment>
      <text xml:space="preserve" bytes="81">&lt;&lt; '''[[Documentation]]'''

TODO: Port over http://lyrics.wikia.com/LyricWiki:API</text>
    </revision>
    <revision>
      <id>4005</id>
      <timestamp>2011-09-28T23:44:11Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>attempt Scary-transclusion of docs</comment>
      <text xml:space="preserve" bytes="111">&lt;&lt; '''[[Documentation]]'''

TODO: Port over http://lyrics.wikia.com/LyricWiki:API

{{w:c:lyrics:LyricWiki:API}}</text>
    </revision>
    <revision>
      <id>4006</id>
      <timestamp>2011-09-28T23:44:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>attempt Scary-transclusion of docs</comment>
      <text xml:space="preserve" bytes="112">&lt;&lt; '''[[Documentation]]'''

TODO: Port over http://lyrics.wikia.com/LyricWiki:API

{{:w:c:lyrics:LyricWiki:API}}</text>
    </revision>
    <revision>
      <id>4007</id>
      <timestamp>2011-09-28T23:52:20Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="6588">&lt;&lt; '''[[Documentation]]'''

== Overview ==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;We are considering making some drastic changes to the API relatively soon.  In order to be able to notify API developers of changes, we're starting a mailing list.  It will only send announcements (discussion will still take place on LyricWiki) so the emails should be very infrequent. &lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki.  The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions.  We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== Quick Start Guide ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== Two ways to access the API: SOAP or REST-like ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url).  Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki:SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code.  This saves the trouble of having to parse the results from the API.  Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices.  If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST.  Our [[LyricWiki:SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki:SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki:REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser.  Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;

{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating 
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call.  It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML.  The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== FAQs ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.  Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== Log of Recent Changes ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''</text>
    </revision>
    <revision>
      <id>4022</id>
      <timestamp>2011-09-29T00:22:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="6604">&lt;&lt; '''[[Documentation]]'''

== Overview ==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;We are considering making some drastic changes to the API relatively soon.  In order to be able to notify API developers of changes, we're starting a mailing list.  It will only send announcements (discussion will still take place on LyricWiki) so the emails should be very infrequent. &lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki.  The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions.  We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== Quick Start Guide ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== Two ways to access the API: SOAP or REST-like ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url).  Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code.  This saves the trouble of having to parse the results from the API.  Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices.  If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST.  Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser.  Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;

{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating 
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call.  It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML.  The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== FAQs ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.  Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== Log of Recent Changes ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''</text>
    </revision>
    <revision>
      <id>4026</id>
      <timestamp>2011-09-29T17:43:15Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="6553">&lt;&lt; '''[[Documentation]]'''

== Overview ==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki.  The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions.  We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== Quick Start Guide ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== Two ways to access the API: SOAP or REST-like ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url).  Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code.  This saves the trouble of having to parse the results from the API.  Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices.  If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST.  Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser.  Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;

{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating 
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call.  It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML.  The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== FAQs ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.  Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== Log of Recent Changes ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''</text>
    </revision>
    <revision>
      <id>4041</id>
      <timestamp>2011-09-29T17:58:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ link to apps</comment>
      <text xml:space="preserve" bytes="6734">&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== Overview ==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki.  The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions.  We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== Quick Start Guide ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== Two ways to access the API: SOAP or REST-like ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url).  Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code.  This saves the trouble of having to parse the results from the API.  Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices.  If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST.  Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser.  Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;

{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating 
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call.  It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML.  The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== FAQs ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.  Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== Log of Recent Changes ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''</text>
    </revision>
    <revision>
      <id>4152</id>
      <timestamp>2011-10-12T20:28:43Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Formatting</comment>
      <text xml:space="preserve" bytes="6769">&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===

&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''</text>
    </revision>
    <revision>
      <id>4153</id>
      <timestamp>2011-10-12T20:39:22Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="6768">&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===

&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;

{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''</text>
    </revision>
    <revision>
      <id>4181</id>
      <timestamp>2011-10-13T00:43:32Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="7025">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===

&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4247</id>
      <timestamp>2011-10-28T06:22:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>MenuRail2</comment>
      <text xml:space="preserve" bytes="7024">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===

&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4398</id>
      <timestamp>2011-12-06T10:15:41Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Support Matrix */ moved actual wikitext of support-matrix to a subpage so that it could be used in other spots also</comment>
      <text xml:space="preserve" bytes="5319">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4401</id>
      <timestamp>2011-12-06T10:24:33Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Quick Start Guide */ +link to [[Client libraries]]</comment>
      <text xml:space="preserve" bytes="5381">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocal) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4508</id>
      <timestamp>2011-12-19T19:45:34Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Two ways to access the API: SOAP or REST-like */</comment>
      <text xml:space="preserve" bytes="5381">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4560</id>
      <timestamp>2012-02-07T19:07:31Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* FAQs */ A very frequently asked question</comment>
      <text xml:space="preserve" bytes="6354">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4705</id>
      <timestamp>2012-04-05T11:38:15Z</timestamp>
      <contributor>
        <ip>192.114.170.10</ip>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="6449">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>4711</id>
      <timestamp>2012-04-21T08:51:54Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* FAQs */  +jsonp</comment>
      <text xml:space="preserve" bytes="7000">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
* Yes.  As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests.  Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery.  We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function.  This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>4712</id>
      <timestamp>2012-04-21T08:52:20Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* FAQs */ Typofix</comment>
      <text xml:space="preserve" bytes="7001">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes.  As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests.  Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery.  We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function.  This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>4713</id>
      <timestamp>2012-04-26T11:30:25Z</timestamp>
      <contributor>
        <ip>117.211.120.161</ip>
      </contributor>
      <comment>/* Support Matrix */</comment>
      <text xml:space="preserve" bytes="7085">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
Matrix represents the table data, which describes data in rows and columns

tertert
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes.  As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests.  Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery.  We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function.  This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>4715</id>
      <timestamp>2012-04-26T11:40:22Z</timestamp>
      <contributor>
        <ip>174.252.153.30</ip>
      </contributor>
      <comment>Undo revision 4713 by [[Special:Contributions/117.211.120.161|117.211.120.161]] ([[User talk:117.211.120.161|talk]])</comment>
      <text xml:space="preserve" bytes="7001">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes.  As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests.  Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery.  We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function.  This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>4997</id>
      <timestamp>2013-03-21T05:33:28Z</timestamp>
      <contributor>
        <ip>96.27.11.195</ip>
      </contributor>
      <comment>/* Two ways to access the API: SOAP or REST-like */</comment>
      <text xml:space="preserve" bytes="5148">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
: The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Acces\
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes.  As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests.  Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery.  We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function.  This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>4999</id>
      <timestamp>2013-03-21T05:34:20Z</timestamp>
      <contributor>
        <ip>96.27.11.195</ip>
      </contributor>
      <comment>/* Overview */</comment>
      <text xml:space="preserve" bytes="3632">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''how do i use this''' ==

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API.  Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
: The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Acces\
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not.  LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app.  The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app.  For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes.  As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests.  Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery.  We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function.  This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>5008</id>
      <timestamp>2013-04-09T03:04:21Z</timestamp>
      <contributor>
        <ip>64.222.144.169</ip>
      </contributor>
      <comment>Undo revision 4999 by [[Special:Contributions/96.27.11.195|96.27.11.195]] ([[User talk:96.27.11.195|talk]])</comment>
      <text xml:space="preserve" bytes="5142">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API. Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
: The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Acces\
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1%7CAPI Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not. LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app. The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app. For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes. As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests. Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery. We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function. This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
    <revision>
      <id>5010</id>
      <timestamp>2013-04-09T03:12:00Z</timestamp>
      <contributor>
        <ip>64.222.144.169</ip>
      </contributor>
      <comment>Revert to more complete Apr 26, 2012 version</comment>
      <text xml:space="preserve" bytes="7079">&lt;mainpage-leftcolumn-start /&gt;&lt;&lt; '''[[Documentation]]'''
__TOC__
{{msg|This page is for the documentation about the LyricWiki API. To see a list of some of the apps created using the API, please visit the '''[[LyricWiki Apps]]''' page.}}

== '''Overview''' ==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px; margin: 10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;

The LyricWiki API provides a convenient way for plugins and apps to easily find and display lyrics from LyricWiki. The typical process works like this:
# Your app or plugin passes an artist and song-name to the API &lt;small&gt;(there are also requests to get discographies etc, please see documentation)&lt;/small&gt;.
# The API returns a match (or a message saying there is no match) along with a small chunk of the lyrics and a link to a page where the user can view the full lyrics.
# Your app either sends the user to the lyrics page or opens the lyrics page in a browser-panel with Javascript enabled.

This process is different from the original API which used to return the full lyrics in the API result. This had to be changed due to licensing restrictions. We can't get a license to distribute lyrics for free via an API, however we do have a license to display lyrics on a web-page as long as the web-page has javascript enabled so that we can track which songs are being viewed (for distributing royalties) and have an ad on them so that a percentage of the money can be paid as licensing fees.

== '''Quick Start Guide''' ==
'''TODO: Make a step-by-step list of how to make something using the API. Try to do so using one of the existing [[Client libraries]].'''

== '''Two ways to access the API: SOAP or REST-like''' ==
The API has a number of functions which can currently be accessed by two different methods: as a SOAP (Simple Object Access Protocol) webservice or a more lightweight REST-like interface (the request is just a specially-formatted url). Each method has different advantages and disadvantages.

{{msg|'''If you are overwhelmed by this section and don't know which one to choose, just use REST.  It's easier.'''}}
=== SOAP ===
* '''[[LyricWiki API/SOAP|SOAP documentation]]'''
* The SOAP webservice lets your code use the API as if the functions were a normal part of your code. This saves the trouble of having to parse the results from the API. Most languages (PHP, Java, Ruby, .NET, etc.) have libraries which make it possible to get this ease-of-use from SOAP webservices. If there is not a library for your language, it would be a ton of work to use the SOAP API and you would probably have a much easier time using REST. Our [[LyricWiki API/SOAP|SOAP documentation]] has information on what languages and libraries have been used successfully (or unsuccessfully in rare instances) with the LyricWiki API in the past.
* More challenging to debug since you need to do it from a SOAP client rather than just a webbrowser.
* There are glitches in some libraries which try to implement SOAP. Please check the [[LyricWiki API/SOAP|SOAP documentation]] to make see if the library you want to use will work well enough for you.

=== REST-like ===
* '''[[LyricWiki API/REST|REST documentation]]'''
* Super easy to make a request and to debug the requests in your browser. Here are some example requests:
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&lt;/code&gt;
*: &lt;code&gt;http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml&lt;/code&gt;
* Once you have the results back, you will have to parse them yourself (as opposed to the SOAP which will give you the result as an object).
* There are several result formats that you can choose from (eg: text, xml, html, and sometimes json).
* Is not &quot;actual&quot; REST. If you're used to very strictly RESTful APIs, then just pretend we're not using the word REST ;)

=== Support Matrix ===
Matrix represents the table data, which describes data in rows and columns

tertert
{{:LyricWiki API/Support_Matrix}}

== '''FAQs''' ==
* '''Why does the API only return a few lines of lyrics for each song?'''
*: Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1%7CAPI Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for. Once you have the right match, you can link the user to the corresponding page (there is a URL provided in the result) or open that page inside your app in a browser-panel with javascript enabled.
* '''Can I sub-license lyrics from LyricWiki to use the full lyrics in an app I'm making?'''
*: Unfortunately not. LyricWiki is not licensed to sub-license lyrics to other parties. The best system we can recommend is to use the API to match to the correct page-name, then display the LyricWiki page inside of a browser panel in your app. The only way we are licensed to display lyrics is on the web and with javascript enabled. This allows our javascript tracking-pixels to count how many times each song is viewed (which determines how much each music publisher gets paid) and it allows the ads to run (the royalties we pay are based at least partly off of a percent of that revenue).
*: _
*: In summary: please use a browser panel to display the lyrics, and choose the skin that works best for your app. For example, if your app has a small area for the lyrics, the [http://lyrics.wikia.com/Cake:Dime?useskin=wikiamobile mobile skin] may be the best fit for your app.
* '''Can I make jsonp requests to access the API from another domain?'''
*: Yes. As of the release on Wednesday April 25th, the LyricWiki REST API will support the 'callback' parameter for any ''fmt=realjson'' requests. Simply add the name of the callback as the ''&amp;callback=MyCallbackName'' parameter, or use a popular library such as jQuery. We support the common convention of using &lt;tt&gt;callback=?&lt;/tt&gt; to indicate that the result should just be wrapped in an anonymous function. This allows jQuery to operate on the jsonp result automatically.

== '''Log of Recent Changes''' ==
If we make any adjustments to the way the API works, we intend to list them here so that you can make sure your apps are still up to date (it's very rare that we make changes which aren't backward-compatible though).
* ''None''
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Is it possible to search for a word and get a list of songs containing this word?]]</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API/REST</title>
    <ns>0</ns>
    <id>2075</id>
      <sha1>d9cs315zyubb3yc7xl5ls0u67smpx0f</sha1>
    <revision>
      <id>4017</id>
      <timestamp>2011-09-29T00:04:41Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from [[w:c:lyrics:LyricWiki:REST]]</comment>
      <text xml:space="preserve" bytes="5205">See also: '''[[LyricWiki:API]]''' for general API reference.  This page is just specific to the REST interface to the API.

==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki:SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki:SOAP#Allowed_Requests/Responses|request/response documentation]].
[[Category:Documentation|{{PAGENAME}}]]
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]</text>
    </revision>
    <revision>
      <id>4019</id>
      <timestamp>2011-09-29T00:17:03Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="5082">==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki:SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki:SOAP#Allowed_Requests/Responses|request/response documentation]].

* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4028</id>
      <timestamp>2011-09-29T17:43:38Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="5086">==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki:SOAP#Allowed_Requests/Responses|request/response documentation]].

* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4040</id>
      <timestamp>2011-09-29T17:57:06Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Documentation on each function/method */</comment>
      <text xml:space="preserve" bytes="5090">==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].

* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4043</id>
      <timestamp>2011-09-29T18:00:57Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Documentation on each function/method */ already on Apps page</comment>
      <text xml:space="preserve" bytes="5031">==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4045</id>
      <timestamp>2011-09-29T20:27:40Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Samples that use REST */ fix link to LW userpage</comment>
      <text xml:space="preserve" bytes="5042">==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4046</id>
      <timestamp>2011-09-29T20:31:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Samples that use REST */</comment>
      <text xml:space="preserve" bytes="5053">==LyricWiki:REST==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

==How to use the REST API==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

==Samples that use REST==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

==Documentation on each function/method==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4187</id>
      <timestamp>2011-10-13T00:55:03Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="5332">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4188</id>
      <timestamp>2011-10-13T00:55:42Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="5270">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4189</id>
      <timestamp>2011-10-13T00:56:52Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="5208">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4190</id>
      <timestamp>2011-10-13T00:59:09Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="5208">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail}}
&lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4258</id>
      <timestamp>2011-10-28T06:52:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="5209">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4335</id>
      <timestamp>2011-11-13T00:42:25Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="5236">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyricwiki.org/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyricwiki.org/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4423</id>
      <timestamp>2011-12-06T16:28:23Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Example requests */ updated lyricwiki.org to lyrics.wikia.com (still worked because it redirects, but that was way out of date)</comment>
      <text xml:space="preserve" bytes="5254">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4559</id>
      <timestamp>2012-02-05T16:30:48Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <comment>added documentation on how to include api key in requests</comment>
      <text xml:space="preserve" bytes="5395">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.
# ''apiKey'' - Optional [[Special:ApiGate|api key]]. Include your key if you want lyrics posted via the API to be attributed to your account

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4694</id>
      <timestamp>2012-04-03T00:07:30Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Making a request */ fixed info on using an API key</comment>
      <text xml:space="preserve" bytes="5438">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki:REST'''==
The {{wp|Representational_State_Transfer|REST}} API is an alternative method of accessing the same backend as the [[LyricWiki API/SOAP|SOAP]].  The primary difference being that the SOAP uses a standardized XML format and the REST allows you to make simple requests through the command-line.

NOTE: The results of the REST API are cached for up to 2 hours.  This makes our system run a lot faster, but is something you should be aware of during testing.  If you need to see the up-to-the-second info, since the caching is based on the URL, just add additional parameters (like &quot;&amp;1123124&quot; or another random number after the ampersand).

=='''How to use the REST API'''==
===Making a request===
Requests are made by passing parameters in through the URL for the function and optionally supplying a format for the response.

A request should contain:
# ''func'' - The function name to call (eg: getSong). '''NOTE: WHILE THE REST IS BEING DEVELOPED, TEMPORARILY ONLY A FEW FUNCTIONS ARE AVAILABLE.  IF YOU NEED OTHER FUNCTIONS SOON... [[User_talk:Sean Colombo|RATTLE MY CAGE]].'''  If you would like to simulate the results of a getArtist() request, just pass in an artist and no song.
## getSong() - default if no 'func' is provided.
## getArtist() - defaults to this if no song is provided and func is either blank or 'song' (ie: it's just a fallback for getSong() with no song).
## getHometown()
# ''...'' - All other options should be specified by key-value pairs.  So since getSong() takes 'artist' and 'song' parameters, you need to pass in 'artist' and 'song' through the url.
# ''fmt'' - Optional format of the response.  See '''Response Formats''' below.
# Optional 'X-Wikia-API-Key' header. Include your key if you want lyrics posted via the API to be attributed to your account. See the [[Special:ApiGate|API Gate panel]] for more info.

====Example requests====
* Get the lyrics to Tool's Schism in XML format:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Tool&amp;song=Schism&amp;fmt=xml
* Get the lyrics to Breaking Benjamin's &quot;Until The End&quot; as a block of text:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text
*: (And why is it a &quot;block of text&quot;? Because for all fmt=text requests, the author is returning the wrong HTTP Content-Type: text/html, instead of the correct text/plain!!)&lt;!--What a clodsburger :-!--&gt;

* Get the entire discography (list of songs only, not lyrics too!) for Linkin Park, displayed as HTML:
*: http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Linkin_Park&amp;fmt=html or better:
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=html or best:
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park

* If you want to get an XML version of the discography, it is recommended that you add the 'fixXML' parameter to get valid XML.  The default is still invalid-XML unfortunately (this was needed so that we didn't break existing apps that used the invalid format).
*: http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Linkin_Park&amp;fmt=xml&amp;fixXML

===Response Formats===
The format of the response is specified by the 'fmt' parameter.  This case-insensitive value defaults to 'html'.
# '''HTML''' (default) - Lightly formatted lyrics result. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=html Example HTML lyrics].
# '''TEXT''' - Raw lyrics.  Other fields are not returned.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=text Example of just text lyrics].
# '''XML''' - Light-weight XML version of the same values that the SOAP would return.  [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=xml Example of lyrics in xml].
# '''JS/JSON''' - JS and JSON format currently only support getSong method. See samples below for usage. [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=json Example of lyrics in JSON] [http://lyricwiki.org/api.php?artist=Slipknot&amp;amp;song=Before_I_Forget&amp;amp;fmt=js Example of pure JS version]

=='''Samples that use REST'''==
* Flash Song Search,  A Free and Easy-to-use Flash to get lyrics:
*:It's web based, so you can use it without installing anything except web browser and flash. 
*:The project's link: [http://lyricapi.googlepages.com/main-en.html http://lyricapi.googlepages.com/main-en.html]

* JavaScript/JSON API example:
*:See [[w:c:lyrics:User:Fuzy|my]] blog post for instructions on how to use JavaScript with JSON format to statically or dynamically load lyrics: [http://techblog.molindo.at/2008/07/access-to-lyricwikiorgs-rest-api-with.html techblog.molindo.at]

* JavaScript API example:
*:[http://lyricapi.googlepages.com/give-me-lyrics-en.html Give Me Lyrics] is a lyric searcher of Lyricwiki.  It extends [[w:c:lyrics:User:Fuzy|Fuzy]]'s code above and make search available.

* iPhone WebApp LyrSearch
*:[http://phireware.com/apps/webapps/lyrsearch/ LyrSearch] is a lyric searcher for the iPhone.

=='''Documentation on each function/method'''==
For details about the input and output of each function/method please refer to the SOAP's [[LyricWiki API/SOAP#Allowed_Requests/Responses|request/response documentation]].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API/SOAP</title>
    <ns>0</ns>
    <id>2074</id>
      <sha1>bgm6nhu6zhgrc2j3p0ap0xuwqwtaow6</sha1>
    <revision>
      <id>4016</id>
      <timestamp>2011-09-29T00:04:03Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;See also: '''[[LyricWiki:API]]''' for general API reference.  This page is just specific to the SOAP interface to the API.  == Cropped Lyrics == Please note that currently, the A...&quot;</comment>
      <text xml:space="preserve" bytes="11693">See also: '''[[LyricWiki:API]]''' for general API reference.  This page is just specific to the SOAP interface to the API.

== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;We are considering making some drastic changes to the API relatively soon.  In order to be able to notify API developers of changes, we're starting a mailing list.  It will only send announcements (discussion will still take place on LyricWiki) so the emails should be very infrequent. &lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;htmlet&gt;lyricwiki-api-mailing-list&lt;/htmlet&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki:SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki:SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[LyricWiki_talk:SOAP#About those questionmarks...|talk page]].
* [[Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki:REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki:REST|REST]] (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.
* [[Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[LyricWiki:Plugins|Plugins]] - List of plugins (and other sites/apps) that implement the SOAP.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4018</id>
      <timestamp>2011-09-29T00:17:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="11569">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;We are considering making some drastic changes to the API relatively soon.  In order to be able to notify API developers of changes, we're starting a mailing list.  It will only send announcements (discussion will still take place on LyricWiki) so the emails should be very infrequent. &lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;htmlet&gt;lyricwiki-api-mailing-list&lt;/htmlet&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki:SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki:SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[LyricWiki_talk:SOAP#About those questionmarks...|talk page]].
* [[Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki:REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki:REST|REST]] (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.
* [[Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[LyricWiki:Plugins|Plugins]] - List of plugins (and other sites/apps) that implement the SOAP.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4025</id>
      <timestamp>2011-09-29T17:42:11Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="11573">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;We are considering making some drastic changes to the API relatively soon.  In order to be able to notify API developers of changes, we're starting a mailing list.  It will only send announcements (discussion will still take place on LyricWiki) so the emails should be very infrequent. &lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki:SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki:SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[LyricWiki_talk:SOAP#About those questionmarks...|talk page]].
* [[Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki:REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki:REST|REST]] (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.
* [[Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[LyricWiki:Plugins|Plugins]] - List of plugins (and other sites/apps) that implement the SOAP.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4027</id>
      <timestamp>2011-09-29T17:43:25Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="11522">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki:SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki:SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[LyricWiki_talk:SOAP#About those questionmarks...|talk page]].
* [[Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki:REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki:REST|REST]] (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.
* [[Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[LyricWiki:Plugins|Plugins]] - List of plugins (and other sites/apps) that implement the SOAP.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4047</id>
      <timestamp>2011-09-29T20:39:25Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Related Links */ update links &amp; text</comment>
      <text xml:space="preserve" bytes="11819">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki:SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki:SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[LyricWiki_talk:SOAP#About those questionmarks...|talk page]].
* [[Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki:REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.  The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4053</id>
      <timestamp>2011-09-29T20:53:28Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Portability Testing */ updated links for API wikui</comment>
      <text xml:space="preserve" bytes="11858">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[LyricWiki API talk:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[LyricWiki API_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.  The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4056</id>
      <timestamp>2011-09-29T20:57:03Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Portability Testing */</comment>
      <text xml:space="preserve" bytes="11867">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.  The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4057</id>
      <timestamp>2011-09-29T20:57:22Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Portability Testing */</comment>
      <text xml:space="preserve" bytes="11879">== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them).  This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread].  The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==
&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list.  We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br/&gt;&lt;br/&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service.  Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#).  The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine.  The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users.  Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].  
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted.  See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version.  Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function.  ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes.  However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs.  Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x].  When using Make[x], if the item already exists, the update is not applied, and an error is returned.  This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists.  When using Update[x], the item is created/changed regardless of whether it existed previously.  If the page did not exist previously, a warning is returned in the 'Message' tags.
&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;



&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message.  if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically).  Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable.  This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests.  The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests.  It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API.  Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br/&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br/&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br/&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br/&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br/&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br/&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET. &lt;br/&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br/&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4182</id>
      <timestamp>2011-10-13T00:44:29Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="12186">== &lt;mainpage-leftcolumn-start /&gt;Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).&lt;br /&gt;


&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4183</id>
      <timestamp>2011-10-13T00:45:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="12175">== &lt;mainpage-leftcolumn-start /&gt;Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4184</id>
      <timestamp>2011-10-13T00:46:18Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="12176">&lt;mainpage-leftcolumn-start /&gt;
== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:5px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4185</id>
      <timestamp>2011-10-13T00:48:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="12189">&lt;mainpage-leftcolumn-start /&gt;
== Cropped Lyrics ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

==Intro==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

==Portability Testing==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

==Current Progress==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

==Authentication==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

==Allowed Requests/Responses==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

==Future Tasks==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

==Related Links==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

==External Links==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4186</id>
      <timestamp>2011-10-13T00:50:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="12243">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4201</id>
      <timestamp>2011-10-13T01:21:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="12022">== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4249</id>
      <timestamp>2011-10-28T06:28:01Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="12120">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>4334</id>
      <timestamp>2011-11-13T00:41:53Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="12147">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;pre&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/pre&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4341</id>
      <timestamp>2011-11-14T07:27:33Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>use nice syntaxhighlighting</comment>
      <text xml:space="preserve" bytes="12182">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4345</id>
      <timestamp>2011-11-18T15:12:58Z</timestamp>
      <contributor>
        <ip>201.76.186.70</ip>
      </contributor>
      <comment>/* Current Progress */</comment>
      <text xml:space="preserve" bytes="12189">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists(A banda)
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4347</id>
      <timestamp>2011-11-22T00:37:25Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>revert test edit</comment>
      <text xml:space="preserve" bytes="12182">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4459</id>
      <timestamp>2011-12-09T12:27:11Z</timestamp>
      <contributor>
        <ip>182.71.109.14</ip>
      </contributor>
      <comment>/* Cropped Lyrics */</comment>
      <text xml:space="preserve" bytes="12171">&lt;mainpage-leftcolumn-start /&gt;
== '''RAJ''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4461</id>
      <timestamp>2011-12-09T13:00:15Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/182.71.109.14|182.71.109.14]] ([[User talk:182.71.109.14|talk]] | [[Special:Block/182.71.109.14|block]]) to last version by [[User:Grunny|Grunny]]</comment>
      <text xml:space="preserve" bytes="12182">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artistsong
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4552</id>
      <timestamp>2012-02-04T16:55:24Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <comment>fixed a typo in parameter of postSong.</comment>
      <text xml:space="preserve" bytes="12178">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* C#.NET (VS &amp; Mono) - Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artist
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4988</id>
      <timestamp>2013-02-28T16:21:43Z</timestamp>
      <contributor>
        <ip>98.100.219.130</ip>
      </contributor>
      <comment>/* Portability Testing */</comment>
      <text xml:space="preserve" bytes="12301">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
** '''​'''Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artist
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using C#.NET.&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;
__NORAIL__
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4989</id>
      <timestamp>2013-02-28T16:22:29Z</timestamp>
      <contributor>
        <ip>98.100.219.130</ip>
      </contributor>
      <comment>/* External Links */</comment>
      <text xml:space="preserve" bytes="12254">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
** '''​'''Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url


*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item


*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item


* getHometown
**artist
* getHometownResponse
**country
**state
**hometown


* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message


*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artist
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using .NET (C# and others).&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;mainpage-endcolumn /&gt; &lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>5018</id>
      <timestamp>2013-05-06T13:23:17Z</timestamp>
      <contributor>
        <ip>46.53.144.128</ip>
      </contributor>
      <comment>/* Allowed Requests/Responses */</comment>
      <text xml:space="preserve" bytes="12287">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
** '''​'''Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url



*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item



*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item



* getHometown
**artist
* getHometownResponse
**country
**state
**hometown



* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message



*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message



*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artist
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
Why we can edit this page?

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using .NET (C# and others).&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;mainpage-endcolumn /&gt; &lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
    <revision>
      <id>5019</id>
      <timestamp>2013-05-06T13:24:14Z</timestamp>
      <contributor>
        <ip>46.53.144.128</ip>
      </contributor>
      <comment>/* Allowed Requests/Responses */</comment>
      <text xml:space="preserve" bytes="12266">&lt;mainpage-leftcolumn-start /&gt;
== '''Cropped Lyrics''' ==
Please note that currently, the API only returns a small portion of the lyrics (about 1/7th of them). This is because of the licensing restrictions mentioned in the [http://groups.google.com/group/lyricwiki-api/browse_thread/thread/733ccd919d654040?pli=1|API Google Group thread]. The small snippet (which is considered Fair Use) is just to help in identifying that the API matched the correct song you're looking for.

=='''Intro'''==

&lt;div style='width:325px;float:right;border: 2px #000 solid;background-color:#acf;padding:15px;margin:10px'&gt;If we make backwards-incompatible changes or updates to the API, we will inform developers via the Google Group mailing list. We do NOT spam the list (you can see from the link that the volume is very low... about one email per year).&lt;br /&gt;&lt;br /&gt;
&lt;center&gt;&lt;verbatim&gt;lyricwiki-api-mailing-list&lt;/verbatim&gt;&lt;/center&gt;
&lt;/div&gt;
The LyricWiki SOAP web service API uses a server written with nuSOAP for PHP, but follows the WSDL standard so that any system that uses WSDL files can easily access the web service. Some languages/environments that are known to easily integrate using WSDL files are PHP (using the nusoap package), Java, and .NET (C#). The functionality is not done for the server yet, but it exists and will return default values that may help in testing during your development of extensions (the server should be done in a matter of days).

Once the server is finished, a PHP file will be made available that wraps the web service into a few simple functions so that you can use the web service by simple calling functions as if they were on your local machine. The early predecessor of this file is the [[LyricWiki:SOAP/client|SOAP client]] test-script (''it is a good example of PHP code which uses the SOAP API'').

The WSDL file can be found [http://lyrics.wikia.com/server.php?wsdl here].

Basic documentation for the web-service (not the PHP file that will wrap it) can be found [http://lyrics.wikia.com/server.php here].

'''UPDATE April 2, 2007: We added a return value for the url to getSong() and getSongResult(), since the page name may differ from what would be expected by the request (due to redirects, etc.), this should be used instead of URLs you generate yourself since it reflects our naming conventions and the current state of the database.'''

=='''Portability Testing'''==
Tested on
* PHP (PHP5 SOAP Library) - '''Works ''' PHP5's built in SOAP Library works.
* PHP (nuSOAP) - '''Works''' (see external links)
* PHP (WSF/PHP) - '''Works''' Small PHP library written using WSF/PHP [http://engwar.com/post/58]
* .NET framework 2.0 and 3.0 - '''Works (Except for a few Functions)'''
** '''​'''Testing by adding a web reference and running CheckSongExists() &amp; getSong(). Both work great!. getArtist() don´t works.
* Perl- '''Works''' Perl module for fetching lyrics by Dave P available on [http://search.cpan.org/~bigpresh/Lyrics-Fetcher-LyricWiki/lib/Lyrics/Fetcher/LyricWiki.pm CPAN]
* Flash - '''Partially tested''' : The crossdomain.xml file has been added to the root directory so that the security warning is not displayed to users. Since 'return' is a reserved word in flash, getSongResult() should be used instead of getSong().
* [[LyricWiki API/SOAP/Python|Python]] - '''Partially tested''' : Using [http://pywebsvcs.sourceforge.net ZSI].
* SOAPpy - '''Bugs''' : has a problem with the content-type header. Spews an error (but recieves the lyrics if you put debug output on this can be seen).
* SUDS - '''Works''': Using lightweight [https://fedorahosted.org/suds/ library]. &quot;from suds.client import Client; c = Client('http://lyrics.wikia.com/server.php?wsdl'); print c.service.getSong(name, song)&quot;
* [[LyricWiki API/SOAP/Ruby|Ruby]] - '''Bugs''' : Any character outside of ASCII is returned malformatted. See [[w:c:lyrics:LyricWiki:SOAP#About those questionmarks...|talk page]].
* [[LyricWiki API/SOAP/Java &amp; Axis|Java &amp;amp; Axis]] - '''Unknown''' : The WSDL file does not work as provided, but a fix (setting namespace for array types in two places) can be performed to make it work. See [[w:c:lyrics:LyricWiki_talk:SOAP|talk page]].
* Javascript - Uses the alternative [[LyricWiki API/REST|REST]] version. Please note that this is the exact same backend code with a different frontend.
* AppleScript: works fine with the &quot;call soap&quot; api, for getSong(). Some problems may occur with accentuation (french, spanish...)
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]

=='''Current Progress'''==
Currently the WSDL file works and the following methods are working:
(note: SOTD is short for Song of the Day)
* checkSongExists()
* getSong()
* getSongResult() - an alias for getSong() which returns the value as 'songResult' instead of 'return' since 'return' is a reserved word in flash.
* getSOTD()
* getArtist() - also works with api.php (use func=getArtist at the end of the url to use this function. ex: [http://lyrics.wikia.com/api.php?artist=Tool&amp;func=getArtist]).
* getHometown()
* postAlbum()
* postSong()

=='''Authentication'''==
Since anonymous users are allowed to edit LyricWiki, they are also allowed to use the SOAP webservice to make changes. However, if you would like to associate any SOAP webservice changes that you make with your user-account, this can easily be achieved by setting the SOAP headers 'username' and 'password'. If you are using nuSOAP (PHP), here is an example of how to do this:
&lt;syntaxhighlight lang=&quot;php&quot;&gt;
$LW_USERNAME = &quot;your_username_here&quot;;
$LW_PASSWORD = &quot;your_password_here&quot;;
require_once('nusoap.php');
$client = new soapclient('http://lyrics.wikia.com/server.php?wsdl', true);
$err = $client-&gt;getError();
if ($err) {
	echo '&lt;h2&gt;Constructor error&lt;/h2&gt;&lt;p&gt;' . $err . '&lt;/p&gt;';
} else {
	$proxy = $client-&gt;getProxy();
	if(($LW_USERNAME != &quot;&quot;) &amp;&amp; ($LW_PASSWORD != &quot;&quot;)){
		$headers = &quot;&lt;username&gt;$LW_USERNAME&lt;/username&gt;&lt;password&gt;$LW_PASSWORD&lt;/password&gt;\n&quot;;
		$proxy-&gt;setHeaders($headers);
	}
}
&lt;/syntaxhighlight&gt;

=='''Allowed Requests/Responses'''==
I will be adding amazon links (throw them out if you don't want them) and some other Request/Response pairs. Stay tuned.

There are two types of ways to push updates to LyricWiki. Make[x] and Update[x]. When using Make[x], if the item already exists, the update is not applied, and an error is returned. This is considered safer and should be used any time you are adding completely new items, even if you have already used the API to check if the item exists. When using Update[x], the item is created/changed regardless of whether it existed previously. If the page did not exist previously, a warning is returned in the 'Message' tags.

&lt;table width='100%'&gt;&lt;tr&gt;&lt;td valign='top' style='width: 300px'&gt;
===Fetching===
*getSong
**artist
**song
*getSongResponse
**return [type: LyricsResult]
****artist
****song
****lyrics
****url




*getArtist
**artist
*getArtistResponse
**artist
**albums [type: AlbumDataArray]
***item [type: AlbumData] (0 or more)
****album
****year
****amazonLink
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item




*getAlbum
**artist
**album
**year (optional)
*getAlbumResponse
**artist
**album
**year
**amazonLink
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item




* getHometown
**artist
* getHometownResponse
**country
**state
**hometown




* getSOTD
* getSOTDResponse
**artist
**song
**nominatedBy
**reason
**lyrics
&lt;/td&gt;

&lt;td valign='top'&gt;

===Updating Pages===
*postArtist
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**albums [type: AlbumArray]
***item [type: Album] (0 or more)
****album
****year
****amazonLink (please just provide the ASIN in this case)
****songs [type: ArrayOfstring]
*****item (0 or more)
*****..item
*****..item
***..item
***..item
*postArtistResponse
**artist
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message




*postAlbum
**overwriteIfExists {true,false} (defaults to false, please use false in most cases)
**artist
**album
**year
**asin
**songs [type: ArrayOfstring]
***item (0 or more)
***..item
***..item
*postAlbumResponse
**artist
**album
**year
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message




*postSong
**overwriteIfExists {true,false} (defaults to false, make sure to set to true if updating already existing lyrics)
**artist
**song
**lyrics
**onAlbums [type: AlbumResultArray]
***item (0 or more)
****artist (if left blank, defaults to the artist of the current song)
****album
****year
***..item
***..item
*postSongResponse
**artist
**song
**dataUsed {true,false} ''if this is false, check the contents of message. if overwriteIfExists is false, and the artist already existed, this will return false''
**message
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

=='''Future Tasks'''==
* Allow the webservice to post/retrieve album art given the Song or the Album (don't require the album, figure that out automatically). Refer to [http://www.w3.org/TR/wsdl#_http-e this article].
* Normalise CaPiTaLiSaTiOn - again, people are naming pages inconsistently and this should be handled in the search (either by searching all lower case or UPPER CASE). i.e. a case-insensitive search (again to be implemented server side to speed this up).
* Allow lookups of pages other than songs/artists etc. For example, it would be useful to be able to view the pages listing songs in a particular language or in need of language identification. However, since these pages are automatically indexed, modifying them directly is not desirable. This can be done using the default MediaWiki APIs, but those need to be fixed to work on the same domain as our API.
* Make the REST code actually RESTful (with meaningful error messages).
* Make the XML more well-structured.
* Have the name of the client-program passed in so that we can work with developers to figure out problems when things are going strangely.

=='''Related Links'''==
* [[LyricWiki API/REST|REST]]-like API (REpresentational State Transfer) - alternate method of accessing the API using these same functions but making requests via HTTP &quot;GET&quot; requests. The actual implementation is somewhere between REST and XML-RPC (Remote Procedure Calls).
* [[w:c:lyrics:Special:Soapfailures|Failed SOAP requests]] - This lists contains the 50 most commonly failed requests. It helps find highly-desired missing songs/artists/redirects and shows us ways that we could improve the searching ability of the SOAP.
* [[w:c:lyrics:Special:MobileSearches|Failed SOAP requests]] - List containing the most commonly failed requests which come from the [[w:c:www:mobile/LyricWiki|LyricWiki mobile app]].
* [[LyricWiki Apps]] - List of plugins, sites, apps, etc. that implement use the LyricWiki API. Please add your own application once it is complete.

=='''External Links'''==
{{wp|Article=SOAP|Title=SOAP}} on Wikipedia.&lt;br /&gt;
[http://www.scottnichol.com/nusoapprogwsdl.htm nuSOAP tutorial] whose code was used to build the server and test-client.&lt;br /&gt;
[http://www.soapclient.com/soapclient.com/soaptest.html Generic SOAP Client] for testing.&lt;br /&gt;
[http://www.developer.com/services/article.php/10928_1602051_1 WSDL Essentials] chapter from {{asin|0596002246|Web Services Essentials}}.&lt;br /&gt;
[http://www.xml.com/pub/a/ws/2004/03/24/phpws.html Tutorial] - ''Creating and Consuming Web Services with PHP''&lt;br /&gt;
[http://www.nonplus.net/geek/000752.php Tutorial] that uses complex types in writing the web service (more for server work than client-side).&lt;br /&gt;
[http://samuelhaddad.com/2009/03/22/c-net-and-lyricwiki-to-lookup-lyrics/ Tutorial] write your first lyrics lookup using .NET (C# and others).&lt;br /&gt;
[https://zend.net/zend/tut/tutorial-campbell.php?article=tutorial-campbell&amp;kind=t&amp;id=7574&amp;open=1&amp;anc=0&amp;view=1 Tutorial] (also server-side).
&lt;mainpage-endcolumn /&gt; &lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:LyricWiki API]]
[[Category:Documentation|{{PAGENAME}}]]</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API/SOAP/Java &amp; Axis</title>
    <ns>0</ns>
    <id>2090</id>
      <sha1>gj8yrfbw5bpiqg4myvu4aphxuq02o5p</sha1>
    <revision>
      <id>4058</id>
      <timestamp>2011-09-29T20:57:56Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.  ==Using Axis to build the stubs== # Download WSDL fro...&quot;</comment>
      <text xml:space="preserve" bytes="1903">Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here].  For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz).  This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;


* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;pre&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/pre&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)</text>
    </revision>
    <revision>
      <id>4192</id>
      <timestamp>2011-10-13T01:05:09Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="2220">&lt;mainpage-leftcolumn-start /&gt;
Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;


* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;pre&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/pre&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4203</id>
      <timestamp>2011-10-13T01:24:36Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1901">Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;


* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;pre&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/pre&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)</text>
    </revision>
    <revision>
      <id>4204</id>
      <timestamp>2011-10-13T01:25:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1912">Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;

* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;pre&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/pre&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)

__NORAIL__</text>
    </revision>
    <revision>
      <id>4261</id>
      <timestamp>2011-10-28T06:56:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2092">&lt;mainpage-leftcolumn-start /&gt;
Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;

* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;pre&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/pre&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__</text>
    </revision>
    <revision>
      <id>4336</id>
      <timestamp>2011-11-13T00:43:26Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="2119">&lt;mainpage-leftcolumn-start /&gt;
Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;

* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;pre&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/pre&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4344</id>
      <timestamp>2011-11-14T07:36:26Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>pre-&gt;syntaxhighlight</comment>
      <text xml:space="preserve" bytes="2155">&lt;mainpage-leftcolumn-start /&gt;
Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;

* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;syntaxhighlight lang=&quot;java&quot;&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/syntaxhighlight&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4427</id>
      <timestamp>2011-12-06T16:45:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>fixed userpage links</comment>
      <text xml:space="preserve" bytes="2177">&lt;mainpage-leftcolumn-start /&gt;
Here's a quick how-to I put together to help those who want to access this beautiful work at lyricwiki.org via Java &amp; Axis.

==Using Axis to build the stubs==
# Download WSDL from [http://lyricwiki.org/server.php?wsdl here]. For the purpose of this document I named this file lyricwiki.wsdl.
# Edit lyricwiki.wsdl according to JAVA &amp;&amp; AXIS on [http://lyricwiki.org/LyricWiki_talk:SOAP#Java_.26.26_AXIS this] page.
# Download Axis from [http://ws.apache.org/axis here] (to write this document I downloaded axis-bin-1_4.tar.gz).
# Uncompress axis-bin_4.tar.gz (tar -zxvf axis-bin-1_4.tar.gz). This creates a directory named axis-1_4.
# Copy lyricwiki.wsdl to axis-1_4 directory and cd to that directory.
# You may now use a command like the following (all in one line) to build the stubs, skeletons, and data types from lyricwiki.wsdl.
&lt;pre&gt;
java -cp lib:lib/axis-ant.jar:lib/axis.jar:lib/commons-discovery-0.2.jar:lib/commons-logging-1.0.4.jar:
         lib/log4j.properties:lib/saaj.jar:lib/wsdl4j-1.5.1.jar:lib/jaxrpc.jar org.apache.axis.wsdl.WSDL2Java lyricwiki.wsdl
&lt;/pre&gt;

* There should now be a directory named ''LyricWiki_pkg'' where the stubs are generated.

==Example Code==
*You may now use the generated code with the following code snippet to pull in song lyrics.

&lt;syntaxhighlight lang=&quot;java&quot;&gt;
LyricWikiLocator service = new LyricWikiLocator();
LyricWikiPortType port = service.getLyricWikiPort();
LyricsResult lyrics = port.getSong(&quot;artist&quot;, &quot;song title&quot;);

System.out.println(&quot;Lyrics:\n\n&quot;+lyrics.getLyrics());
&lt;/syntaxhighlight&gt;

*Please note that obfuscating Java code which has been generated by Apache Axis 1.4 (It does not matter how) results in various exceptions during the runtime.


I hope you find the above instructions helpful.


[[w:c:lyrics:User:Kjavaher|Kjavaher]] 03:56, 10 January 2008 (EST) - Kamran Javaheri

Last edit regarding code obfuscation by --[[w:c:lyrics:User:Schokomuesli|Schokomuesli]] 22:39, March 10, 2010 (UTC)

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:LyricWiki API]]</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API/SOAP/Python</title>
    <ns>0</ns>
    <id>2088</id>
      <sha1>obi5h9x35kvlmn4hkki7ypevbih5823</sha1>
    <revision>
      <id>4054</id>
      <timestamp>2011-09-29T20:54:04Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;==Setup== #Using python 2.4 or better install [http://sourceforge.net/forum/forum.php?forum_id=627489 ZSI].  (download the tar.gz and run &quot;python setup.py install&quot;) ##The above s...&quot;</comment>
      <text xml:space="preserve" bytes="1082">==Setup==
#Using python 2.4 or better install [http://sourceforge.net/forum/forum.php?forum_id=627489 ZSI].  (download the tar.gz and run &quot;python setup.py install&quot;)
##The above should have copied 2 files into your python24/scripts directory. 
#Run the following command as indicated in the [http://pywebsvcs.sourceforge.net/guide.html#SECTION003200000000000000000 ZSI documentation]
##&lt;nowiki&gt;python24/python python24/scripts/wsdl2py --complexType --url=http://lyrics.wikia.com/server.php?wsdl&lt;/nowiki&gt;
##The above should have copied 2 more files into your python24/scripts directory.  These files will need to be put someplace where python can see them.  Either in the working directory or one the python.pth file points to.

==Script==
*An example script to pull lyrics would look something like this:
&lt;pre&gt;
import LyricWiki_services

soap = LyricWiki_services.LyricWikiBindingSOAP(&quot;http://lyrics.wikia.com/server.php&quot;)
song = LyricWiki_services.getSongRequest()
song.Artist = 'Iced Earth'
song.Song = 'Burning Times'
result = soap.getSong(song)

print result.Return.Lyrics
&lt;/pre&gt;</text>
    </revision>
    <revision>
      <id>4202</id>
      <timestamp>2011-10-13T01:22:29Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1089">==Setup==
#Using python 2.4 or better install [http://sourceforge.net/forum/forum.php?forum_id=627489 ZSI]. (download the tar.gz and run &quot;python setup.py install&quot;)
##The above should have copied 2 files into your python24/scripts directory.
#Run the following command as indicated in the [http://pywebsvcs.sourceforge.net/guide.html#SECTION003200000000000000000 ZSI documentation]
##&lt;nowiki&gt;python24/python python24/scripts/wsdl2py --complexType --url=http://lyrics.wikia.com/server.php?wsdl&lt;/nowiki&gt;
##The above should have copied 2 more files into your python24/scripts directory. These files will need to be put someplace where python can see them. Either in the working directory or one the python.pth file points to.

==Script==
*An example script to pull lyrics would look something like this:
&lt;pre&gt;
import LyricWiki_services

soap = LyricWiki_services.LyricWikiBindingSOAP(&quot;http://lyrics.wikia.com/server.php&quot;)
song = LyricWiki_services.getSongRequest()
song.Artist = 'Iced Earth'
song.Song = 'Burning Times'
result = soap.getSong(song)

print result.Return.Lyrics
&lt;/pre&gt;
__NORAIL__</text>
    </revision>
    <revision>
      <id>4262</id>
      <timestamp>2011-10-28T06:57:51Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1211">&lt;mainpage-leftcolumn-start /&gt;
==Setup==
#Using python 2.4 or better install [http://sourceforge.net/forum/forum.php?forum_id=627489 ZSI]. (download the tar.gz and run &quot;python setup.py install&quot;)
##The above should have copied 2 files into your python24/scripts directory.
#Run the following command as indicated in the [http://pywebsvcs.sourceforge.net/guide.html#SECTION003200000000000000000 ZSI documentation]
##&lt;nowiki&gt;python24/python python24/scripts/wsdl2py --complexType --url=http://lyrics.wikia.com/server.php?wsdl&lt;/nowiki&gt;
##The above should have copied 2 more files into your python24/scripts directory. These files will need to be put someplace where python can see them. Either in the working directory or one the python.pth file points to.

==Script==
*An example script to pull lyrics would look something like this:
&lt;pre&gt;
import LyricWiki_services

soap = LyricWiki_services.LyricWikiBindingSOAP(&quot;http://lyrics.wikia.com/server.php&quot;)
song = LyricWiki_services.getSongRequest()
song.Artist = 'Iced Earth'
song.Song = 'Burning Times'
result = soap.getSong(song)

print result.Return.Lyrics
&lt;/pre&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;
__NORAIL__</text>
    </revision>
    <revision>
      <id>4333</id>
      <timestamp>2011-11-13T00:41:05Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1238">&lt;mainpage-leftcolumn-start /&gt;
==Setup==
#Using python 2.4 or better install [http://sourceforge.net/forum/forum.php?forum_id=627489 ZSI]. (download the tar.gz and run &quot;python setup.py install&quot;)
##The above should have copied 2 files into your python24/scripts directory.
#Run the following command as indicated in the [http://pywebsvcs.sourceforge.net/guide.html#SECTION003200000000000000000 ZSI documentation]
##&lt;nowiki&gt;python24/python python24/scripts/wsdl2py --complexType --url=http://lyrics.wikia.com/server.php?wsdl&lt;/nowiki&gt;
##The above should have copied 2 more files into your python24/scripts directory. These files will need to be put someplace where python can see them. Either in the working directory or one the python.pth file points to.

==Script==
*An example script to pull lyrics would look something like this:
&lt;pre&gt;
import LyricWiki_services

soap = LyricWiki_services.LyricWikiBindingSOAP(&quot;http://lyrics.wikia.com/server.php&quot;)
song = LyricWiki_services.getSongRequest()
song.Artist = 'Iced Earth'
song.Song = 'Burning Times'
result = soap.getSong(song)

print result.Return.Lyrics
&lt;/pre&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4342</id>
      <timestamp>2011-11-14T07:28:38Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <minor/>
      <comment>pre-&gt;syntaxhighlight</comment>
      <text xml:space="preserve" bytes="1276">&lt;mainpage-leftcolumn-start /&gt;
==Setup==
#Using python 2.4 or better install [http://sourceforge.net/forum/forum.php?forum_id=627489 ZSI]. (download the tar.gz and run &quot;python setup.py install&quot;)
##The above should have copied 2 files into your python24/scripts directory.
#Run the following command as indicated in the [http://pywebsvcs.sourceforge.net/guide.html#SECTION003200000000000000000 ZSI documentation]
##&lt;nowiki&gt;python24/python python24/scripts/wsdl2py --complexType --url=http://lyrics.wikia.com/server.php?wsdl&lt;/nowiki&gt;
##The above should have copied 2 more files into your python24/scripts directory. These files will need to be put someplace where python can see them. Either in the working directory or one the python.pth file points to.

==Script==
*An example script to pull lyrics would look something like this:
&lt;syntaxhighlight lang=&quot;python&quot;&gt;
import LyricWiki_services

soap = LyricWiki_services.LyricWikiBindingSOAP(&quot;http://lyrics.wikia.com/server.php&quot;)
song = LyricWiki_services.getSongRequest()
song.Artist = 'Iced Earth'
song.Song = 'Burning Times'
result = soap.getSong(song)

print result.Return.Lyrics
&lt;/syntaxhighlight&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;
__NORAIL__
[[Category:LyricWiki API]]</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API/SOAP/Ruby</title>
    <ns>0</ns>
    <id>2089</id>
      <sha1>eezlemhg5n36hmcqclcw3pk3p7qr2dc</sha1>
    <revision>
      <id>4055</id>
      <timestamp>2011-09-29T20:56:04Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;==Ruby SOAP== Example code: &lt;pre&gt; require 'soap/wsdlDriver'  require 'iconv' driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver  lyric...&quot;</comment>
      <text xml:space="preserve" bytes="865">==Ruby SOAP==
Example code:
&lt;pre&gt;
require 'soap/wsdlDriver' 
require 'iconv'
driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver 
lyrics = Iconv.iconv(&quot;Latin1&quot;, &quot;UTF8&quot;, driver.getSong(artist,song).lyrics)
&lt;/pre&gt;

==Issues==
* Incorrect conversions
** The ruby SOAP implementation does strange things to characters outside of ASCII.  Currently the SOAP service returns lyrics encoded in ISO-8859-1 (Latin1).  The lyrics are correctly encoded in Latin1, however ruby tries to do an encoding assuming a different encoding and therefore messes up the character encoding. This seems to be solved using the Iconv class.
* Non-latin characters
** Characters that are not defined in ISO-8859-1 (Latin1) are returned from the server as question marks (?).
** Artist names that use characters not in Latin1 are not retrieved at all.</text>
    </revision>
    <revision>
      <id>4191</id>
      <timestamp>2011-10-13T01:01:40Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="1181">&lt;mainpage-leftcolumn-start /&gt;
==Ruby SOAP==
Example code:
&lt;pre&gt;
require 'soap/wsdlDriver' 
require 'iconv'
driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver 
lyrics = Iconv.iconv(&quot;Latin1&quot;, &quot;UTF8&quot;, driver.getSong(artist,song).lyrics)
&lt;/pre&gt;

==Issues==
* Incorrect conversions
** The ruby SOAP implementation does strange things to characters outside of ASCII. Currently the SOAP service returns lyrics encoded in ISO-8859-1 (Latin1). The lyrics are correctly encoded in Latin1, however ruby tries to do an encoding assuming a different encoding and therefore messes up the character encoding. This seems to be solved using the Iconv class.
* Non-latin characters
** Characters that are not defined in ISO-8859-1 (Latin1) are returned from the server as question marks (?).
** Artist names that use characters not in Latin1 are not retrieved at all.

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4198</id>
      <timestamp>2011-10-13T01:19:06Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="863">==Ruby SOAP==
Example code:
&lt;pre&gt;
require 'soap/wsdlDriver' 
require 'iconv'
driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver 
lyrics = Iconv.iconv(&quot;Latin1&quot;, &quot;UTF8&quot;, driver.getSong(artist,song).lyrics)
&lt;/pre&gt;

==Issues==
* Incorrect conversions
** The ruby SOAP implementation does strange things to characters outside of ASCII. Currently the SOAP service returns lyrics encoded in ISO-8859-1 (Latin1). The lyrics are correctly encoded in Latin1, however ruby tries to do an encoding assuming a different encoding and therefore messes up the character encoding. This seems to be solved using the Iconv class.
* Non-latin characters
** Characters that are not defined in ISO-8859-1 (Latin1) are returned from the server as question marks (?).
** Artist names that use characters not in Latin1 are not retrieved at all.</text>
    </revision>
    <revision>
      <id>4199</id>
      <timestamp>2011-10-13T01:19:27Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Ruby SOAP */</comment>
      <text xml:space="preserve" bytes="875">==Ruby SOAP==
Example code:
&lt;pre&gt;
require 'soap/wsdlDriver' 
require 'iconv'
driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver 
lyrics = Iconv.iconv(&quot;Latin1&quot;, &quot;UTF8&quot;, driver.getSong(artist,song).lyrics)
&lt;/pre&gt;

__NORAIL__

==Issues==
* Incorrect conversions
** The ruby SOAP implementation does strange things to characters outside of ASCII. Currently the SOAP service returns lyrics encoded in ISO-8859-1 (Latin1). The lyrics are correctly encoded in Latin1, however ruby tries to do an encoding assuming a different encoding and therefore messes up the character encoding. This seems to be solved using the Iconv class.
* Non-latin characters
** Characters that are not defined in ISO-8859-1 (Latin1) are returned from the server as question marks (?).
** Artist names that use characters not in Latin1 are not retrieved at all.</text>
    </revision>
    <revision>
      <id>4200</id>
      <timestamp>2011-10-13T01:19:48Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="875">==Ruby SOAP==
Example code:
&lt;pre&gt;
require 'soap/wsdlDriver' 
require 'iconv'
driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver 
lyrics = Iconv.iconv(&quot;Latin1&quot;, &quot;UTF8&quot;, driver.getSong(artist,song).lyrics)
&lt;/pre&gt;

==Issues==
* Incorrect conversions
** The ruby SOAP implementation does strange things to characters outside of ASCII. Currently the SOAP service returns lyrics encoded in ISO-8859-1 (Latin1). The lyrics are correctly encoded in Latin1, however ruby tries to do an encoding assuming a different encoding and therefore messes up the character encoding. This seems to be solved using the Iconv class.
* Non-latin characters
** Characters that are not defined in ISO-8859-1 (Latin1) are returned from the server as question marks (?).
** Artist names that use characters not in Latin1 are not retrieved at all.

__NORAIL__</text>
    </revision>
    <revision>
      <id>4260</id>
      <timestamp>2011-10-28T06:55:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1001">&lt;mainpage-leftcolumn-start /&gt;
==Ruby SOAP==
Example code:
&lt;pre&gt;
require 'soap/wsdlDriver' 
require 'iconv'
driver = SOAP::WSDLDriverFactory.new(&quot;http://lyricwiki.org/server.php?wsdl&quot;).create_rpc_driver 
lyrics = Iconv.iconv(&quot;Latin1&quot;, &quot;UTF8&quot;, driver.getSong(artist,song).lyrics)
&lt;/pre&gt;

==Issues==
* Incorrect conversions
** The ruby SOAP implementation does strange things to characters outside of ASCII. Currently the SOAP service returns lyrics encoded in ISO-8859-1 (Latin1). The lyrics are correctly encoded in Latin1, however ruby tries to do an encoding assuming a different encoding and therefore messes up the character encoding. This seems to be solved using the Iconv class.
* Non-latin characters
** Characters that are not defined in ISO-8859-1 (Latin1) are returned from the server as question marks (?).
** Artist names that use characters not in Latin1 are not retrieved at all.
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; 

{{MenuRail2}} 

&lt;mainpage-endcolumn /&gt;

__NORAIL__</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki API/Support Matrix</title>
    <ns>0</ns>
    <id>2159</id>
      <sha1>dlxzomwauaxm8qcdvxais9uz1li8wyr</sha1>
    <revision>
      <id>4397</id>
      <timestamp>2011-12-06T10:14:43Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved the support matrix from [[LyricWiki API]] so that it can be transcluded on multiple pages</comment>
      <text xml:space="preserve" bytes="1738">
&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4499</id>
      <timestamp>2011-12-14T23:58:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+getTopSongs function</comment>
      <text xml:space="preserve" bytes="1813">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4506</id>
      <timestamp>2011-12-19T19:08:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>getSOTD is in REST API (XML &amp; JSON... XML version had a bug but that will be fixed in the first release in January).</comment>
      <text xml:space="preserve" bytes="1809">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4507</id>
      <timestamp>2011-12-19T19:08:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>getHometown() was added to the REST API. Will be accessible as of the first release in January.</comment>
      <text xml:space="preserve" bytes="1801">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{failed}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{done}}
| {{done}}
| {{done}}
| {{done}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4510</id>
      <timestamp>2011-12-19T22:40:45Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>getArtist is supported for 'realjson' now and 'json' when the first release in January goes out</comment>
      <text xml:space="preserve" bytes="1799">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| n/a
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{done}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{done}}
| {{done}}
| {{done}}
| {{done}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4511</id>
      <timestamp>2011-12-19T22:44:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>getArtist has text format.</comment>
      <text xml:space="preserve" bytes="1804">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{done}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{done}}
| {{done}}
| {{done}}
| {{done}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4512</id>
      <timestamp>2011-12-20T19:55:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>postSong works via REST w/XML or JSON return types (going live in the first January release)</comment>
      <text xml:space="preserve" bytes="1800">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='4'|REST
|-
!
!
! text
! html
! xml
! json
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
|-
| getArtist
| {{done}}
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{done}}
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{done}}
| {{done}}
| {{done}}
| {{done}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|-
!colspan='6'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4542</id>
      <timestamp>2012-01-11T23:00:32Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Added the 'php' result format to all of the LyricWiki calls (will go live 1/18/12)</comment>
      <text xml:space="preserve" bytes="2044">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='5'|REST
|-
!
!
! text
! html
! xml
! json
! php
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=json]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=php]
|-
| getArtist
| {{done}}
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]*
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=php]
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{done}}
| {{done}}
| {{done}}
| {{done}}
| {{done}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
| {{done}}
|-
!colspan='7'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
| {{done}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
    <revision>
      <id>4685</id>
      <timestamp>2012-03-15T22:46:13Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added info about &quot;realjson&quot; for song &amp; added some more example links for REST calls</comment>
      <text xml:space="preserve" bytes="2659">&lt;div style='float:right'&gt;
{|border='1' cellspacing='0' cellpadding='2'
!colspan='2'|Key
|-
| {{done}}
| Fully supported
|-
| {{incomplete}}
| Partially supported (might be buggy)
|-
| {{failed}}
| Not supported
|-
| n/a
| Don't plan to support this
|}
&lt;/div&gt;


{| border='1' cellspacing='0' cellpadding='5'
! Function
! SOAP
!colspan='5'|REST
|-
!
!
! text
! html
! xml
! json
! php
|-
!colspan='6'|Fetching
|-
| getSong
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=text]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=realjson]*
| {{done}} [http://lyrics.wikia.com/api.php?artist=Cake&amp;song=Dime&amp;fmt=php]
|-
| getArtist
| {{done}}
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=xml&amp;fixXML]**
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=realjson]
| {{done}} [http://lyrics.wikia.com/api.php?func=getArtist&amp;artist=Cake&amp;fmt=php]
|-
| getAlbum
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| getHometown
| {{done}}
| {{done}}
| {{done}} [http://lyrics.wikia.com/api.php?func=getHometown&amp;artist=Deadmau5&amp;fmt=html]
| {{done}} [http://lyrics.wikia.com/api.php?func=getHometown&amp;artist=Wiz_Khalifa&amp;fmt=xml]
| {{done}} [http://lyrics.wikia.com/api.php?func=getHometown&amp;artist=Mac_Miller&amp;fmt=json]
| {{done}}
|-
| getSOTD
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
| {{done}}
|-
| getTopSongs
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
| {{done}}
|-
!colspan='7'|Updating
|-
| postArtist
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postAlbum
| ?
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
| {{failed}}
|-
| postSong
| {{done}}
| {{failed}}
| {{failed}}
| {{done}}
| {{done}}
| {{done}}
|}
&lt;nowiki&gt;*&lt;/nowiki&gt; Note the &lt;code&gt;realjson&lt;/code&gt; format on some of the calls. It is recommended that this be used on all calls to get valid JSON as opposed to the original format of the Javascript. The old format was kept as the default to keep from breaking existing apps but is poorly formed JSON.

&lt;nowiki&gt;**&lt;/nowiki&gt; Note the &lt;code&gt;fixXML&lt;/code&gt; parameter on the getArtist XML call. It is recommended that this be used on all getArtist XML calls to get valid XML as opposed to the original format of the XML. The old format was kept as the default to keep from breaking existing apps but is poorly formed XML.</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki Apps</title>
    <ns>0</ns>
    <id>2082</id>
      <sha1>6blcdxnwjge0jcaq7u1i905pgpprnrb</sha1>
    <revision>
      <id>4042</id>
      <timestamp>2011-09-29T17:59:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="17345">
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki:SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki:SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].



=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki:SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki:SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki:SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: {{User|Attendant}}

==WinAmp Plugin ([[LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4044</id>
      <timestamp>2011-09-29T20:10:28Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="17652">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki:SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki:SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].



=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki:SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki:SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki:SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: {{User|Attendant}}

==WinAmp Plugin ([[LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4062</id>
      <timestamp>2011-09-29T21:43:58Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricsFinder11 */ update link</comment>
      <text xml:space="preserve" bytes="17656">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki:SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].



=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki:SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki:SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki:SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: {{User|Attendant}}

==WinAmp Plugin ([[LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4063</id>
      <timestamp>2011-09-29T21:44:12Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* iTunesLyricsLocator */ update link</comment>
      <text xml:space="preserve" bytes="17660">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].



=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki:SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki:SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki:SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: {{User|Attendant}}

==WinAmp Plugin ([[LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4064</id>
      <timestamp>2011-09-29T21:47:58Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>update a bunch of links which were broken by this page being imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="17748">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki:SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: {{User|Attendant}}

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4065</id>
      <timestamp>2011-09-29T21:48:10Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* LyricWiki (talk) */</comment>
      <text xml:space="preserve" bytes="17752">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: {{User|Attendant}}

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4067</id>
      <timestamp>2011-09-29T21:49:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Amarok Wiki-Lyrics (talk) */</comment>
      <text xml:space="preserve" bytes="17763">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4068</id>
      <timestamp>2011-09-29T21:49:54Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Rhythmbox LyricWiki Plugin (talk) */</comment>
      <text xml:space="preserve" bytes="17774">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4069</id>
      <timestamp>2011-09-29T21:50:28Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Google Page Search Gadget */</comment>
      <text xml:space="preserve" bytes="17795">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: {{User|Jfranzone}}&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4070</id>
      <timestamp>2011-09-29T21:50:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* WordPress Plugin */</comment>
      <text xml:space="preserve" bytes="17816">__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist.  The program's accuracy is matched only by its performance,  as it will update each track with the correct lyrics sequentially.  The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode.  Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.  

The program will run and update your songs with the lyrics.   Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync.  View lyrics on iPod nano, classic, Touch and iPhone.  

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software.  Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players.  Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful.  We would like to see plugins for all major media-players (and of course, minor players too!).  If you know how to write a plugin for iTunes, MediaPlayer, etc.  Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]].  Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]].  It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here].  The program supports French and English.  Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista).  This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br/&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br/&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters.  This is a problem with the SOAP service and not a problem in the script.  For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br/&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br/&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br/&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br/&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes. 

LyricWiki related functions include: 

* Importing Lyrics from LyricWiki to selected tracks in iTunes 
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern 

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose.  Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].  

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br/&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br/&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br/&gt;
&lt;br/&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br/&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br/&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br/&gt;
GimmeSomeTune in a nutshell:&lt;br/&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more. 

Website is down until further notice.  Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br/&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br/&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br/&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br/&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br/&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br/&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]</text>
    </revision>
    <revision>
      <id>4193</id>
      <timestamp>2011-10-13T01:07:25Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="18127">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4248</id>
      <timestamp>2011-10-28T06:23:07Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>MenuRail2</comment>
      <text xml:space="preserve" bytes="18128">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need.
http://lyricsdownloader.altervista.org/sito/?q=en
In English and in Italian. Continually updated.

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4502</id>
      <timestamp>2011-12-19T17:34:38Z</timestamp>
      <contributor>
        <ip>79.19.170.139</ip>
      </contributor>
      <comment>/* iTunes (for Mac OS) */</comment>
      <text xml:space="preserve" bytes="18130">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==

===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].

===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!



===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4504</id>
      <timestamp>2011-12-19T17:35:23Z</timestamp>
      <contributor>
        <ip>79.19.170.139</ip>
      </contributor>
      <comment>/* iTunes (for Mac OS) */</comment>
      <text xml:space="preserve" bytes="18133">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==


===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.



===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4505</id>
      <timestamp>2011-12-19T17:35:37Z</timestamp>
      <contributor>
        <ip>79.19.170.139</ip>
      </contributor>
      <comment>/* iTunes (for Mac OS) */</comment>
      <text xml:space="preserve" bytes="18137">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.



===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4580</id>
      <timestamp>2012-02-22T05:08:36Z</timestamp>
      <contributor>
        <ip>209.81.97.138</ip>
      </contributor>
      <comment>Ati cazut in asaleci &quot;pacat&quot; al generalizarii pe care il criticati. Uneori chiar asa e, suporti consecintele propriilor fapte, alteori nu. Cu siguranta ca sunt cazuri in care nici nu ne dam seama cum unele alegeri din trecut ne-au influentat.&quot;Pe scu</comment>
      <text xml:space="preserve" bytes="20535">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.



===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



 Ati cazut in asaleci &quot;pacat&quot; al generalizarii pe care il criticati. Uneori chiar asa e, suporti consecintele propriilor fapte, alteori nu. Cu siguranta ca sunt cazuri in care nici nu ne dam seama cum unele alegeri din trecut ne-au influentat.&quot;Pe scurt, oamenii atribuie mult prea mult comportamentul unei persoane intr-o situatie data caracterului persoanei nu circumstantelor.&quot;Pana la urma ce e caracterul? Caracterul este dat tocmai de modul in care reactionezi in fata circumstantelor nefavorabile. Nu poti sa spui de cineva &quot;are un caracter nobil, dar din cauza circumstantelor s-a purtat ca un dobitoc&quot;. Nobletea, bunatatea (de ex.) se evidentiaza cand  in ciuda circumstantelor nefavorabile, ai un comportament altruist, principial.&quot;- daca mai multe persoane se comporta la fel in aceeasi situatie atunci sunt mai importante circumstantele decat persoanele;&quot;Foarte... profunda... generalizare... De multe ori asta inseamna ca &quot;turma&quot; face ceea ce este mai usor si mai convenabil, adica ceea ce este mai rau. &quot;Normalitatea&quot; nu e data intotdeauna de majoritate.&quot;- autointrebarea &quot;Cum ma comportam eu?&quot;;'E o intrebare necesara, dar daca eu as fi facut la fel nu inseamna ca e bine. Sau rau. Poate insemna doar ca eu nu sunt mai bun.Binele si raul nu trebuie judecat in functie de persoane, ci in functie de principii, si fata de un cod moral, care sa slujeasca drept reper.
Ati cazut in asaleci &quot;pacat&quot; al generalizarii pe care il criticati. Uneori chiar asa e, suporti consecintele propriilor fapte, alteori nu. Cu siguranta ca sunt cazuri in care nici nu ne dam seama cum unele alegeri din trecut ne-au influentat.&quot;Pe scurt, oamenii atribuie mult prea mult comportamentul unei persoane intr-o situatie data caracterului persoanei nu circumstantelor.&quot;Pana la urma ce e caracterul? Caracterul este dat tocmai de modul in care reactionezi in fata circumstantelor nefavorabile. Nu poti sa spui de cineva &quot;are un caracter nobil, dar din cauza circumstantelor s-a purtat ca un dobitoc&quot;. Nobletea, bunatatea (de ex.) se evidentiaza cand  in ciuda circumstantelor nefavorabile, ai un comportament altruist, principial.&quot;- daca mai multe persoane se comporta la fel in aceeasi situatie atunci sunt mai importante circumstantele decat persoanele;&quot;Foarte... profunda... generalizare... De multe ori asta inseamna ca &quot;turma&quot; face ceea ce este mai usor si mai convenabil, adica ceea ce este mai rau. &quot;Normalitatea&quot; nu e data intotdeauna de majoritate.&quot;- autointrebarea &quot;Cum ma comportam eu?&quot;;'E o intrebare necesara, dar daca eu as fi facut la fel nu inseamna ca e bine. Sau rau. Poate insemna doar ca eu nu sunt mai bun.Binele si raul nu trebuie judecat in functie de persoane, ci in functie de principii, si fata de un cod moral, care sa slujeasca drept reper.

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4593</id>
      <timestamp>2012-02-22T16:46:34Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/209.81.97.138|209.81.97.138]] ([[User talk:209.81.97.138|talk]] | [[Special:Block/209.81.97.138|block]]) to last version by [[User:79.19.170.139|79.19.170.139]]</comment>
      <text xml:space="preserve" bytes="18137">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.



===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4860</id>
      <timestamp>2012-07-08T22:56:00Z</timestamp>
      <contributor>
        <ip>184.58.173.168</ip>
      </contributor>
      <comment>/* LyricToy */</comment>
      <text xml:space="preserve" bytes="17774">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

ggggg

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.



===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4862</id>
      <timestamp>2012-07-08T23:00:53Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/184.58.173.168|184.58.173.168]] ([[User talk:184.58.173.168|talk]] | [[Special:Block/184.58.173.168|block]]) to last version by [[User:Sean Colombo|Sean Colombo]]</comment>
      <text xml:space="preserve" bytes="18137">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.



===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4983</id>
      <timestamp>2013-02-16T12:36:05Z</timestamp>
      <contributor>
        <ip>95.236.32.27</ip>
      </contributor>
      <comment>/* Fabio's iTunes Lyrics Downloader */</comment>
      <text xml:space="preserve" bytes="18187">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds all the lyrics you need: it searches your lyrics in a lot of different websites. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
Auto-magically add lyrics to songs in iTunes!

You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4985</id>
      <timestamp>2013-02-16T12:36:31Z</timestamp>
      <contributor>
        <ip>95.236.32.27</ip>
      </contributor>
      <comment>/* Get Lyrical */</comment>
      <text xml:space="preserve" bytes="18140">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds all the lyrics you need: it searches your lyrics in a lot of different websites. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4994</id>
      <timestamp>2013-03-21T02:15:50Z</timestamp>
      <contributor>
        <username>Fassbrause</username>
        <id>6066726</id>
      </contributor>
      <comment>add information for Amarok 2</comment>
      <text xml:space="preserve" bytes="19179">&lt;mainpage-leftcolumn-start /&gt;__TOC__
{{msg|Make this page prettier! We could definitely divide the sections into areas that were a bit more clear instead of a wall of text (eg: areas could be clearly defined, have borders and a logo/icon for the platform... would make it easier for someone to scroll through and find what they want).}}
=Applications=

==LyricToy==
[http://code.google.com/p/lyrictoy/ LyricToy] is a small application that is great for users who continuously type song names into to Google every time they want to view lyrics. It allows you to find the lyrics for the currently playing song in iTunes using either LyricWiki or Google. (This program still works even though the lyricwiki API has changed.)

==LyricsFinder11==
[http://www.lyricsfinder11.com LyricsFinder11] is a freeware system tray application for Microsoft Windows that uses LyricWiki [[LyricWiki API/SOAP|SOAP webservice]].
Displays the lyrics of the song that is currently playing on [http://www.winamp.com Winamp] or [http://www.apple.com/itunes iTunes] or [http://www.last.fm Last.fm] (also works with some internet radio stations). LyricsFinder11 has a unique feature to identify songs via [http://en.wikipedia.org/wiki/MusicDNS MusicDNS], when the song’s ID3 tags are incorrect or empty.

Broken Link after the advert 25/08/10

==iTunesLyricsLocator==
iTunesLyricsLocator is currently the only cross-platform, Java 1.5-based application which automatically updates a user's ''entire'' iTunes Music Library, or a specific &quot;No Lyrics&quot; playlist. The program's accuracy is matched only by its performance, as it will update each track with the correct lyrics sequentially. The application uses LyricWiki's [[LyricWiki API/SOAP|SOAP webservice]].

To process a select group of songs, or perhaps a group of albums, use the application in &quot;No Lyrics&quot; mode. Simply create a playlist in iTunes called &quot;No Lyrics&quot; and add songs to the playlist. When you are finished adding songs, double the click application, and click the Process button.

The program will run and update your songs with the lyrics. Once it is completed, you will see that all your tracks have been updated with the proper song lyrics.

iPods will be notified of the changes on the next sync. View lyrics on iPod nano, classic, Touch and iPhone.

The application will create a log file that will contain all of the console output.

iTunesLyricsLocator runs on Mac OS X 10.4/10.5 and Windows XP/Vista with Java 1.5+ and iTunes 7+

Download free at http://www.ra-cc.com -- No longer available

Aug 3, 2009 Update: We are extremely disappointed with the decision that has taken place here at LyricWiki in regards to the API use, because we have been forced to shutdown operation of our software. Until further notice, iTunesLyricsLocator is no longer available.

==Shtaggle==
[http://synfinity.net/code/Shtaggle/Latest.zip Shtaggle] is a Mac OS X application for tagging music in iTunes. It uses [http://last.fm Last.FM] to get tags, and allows you to use your own custom tags. It will send tags back to Last.FM if you have an account there, and will also send your tagging stats to [http://shtaggle.co.uk shtaggle.co.uk] if you register there! It also uses [http://lyricwiki.org LyricWiki.org] to get lyrics for the currently playing track. Read more at [http://shtaggle.co.uk shtaggle.co.uk]

All links broken as of 9/10/11.

==LyricWiki Toy==
[http://silenceisdefeat.com/~coweater/lwt/lyricwiki_toy.py LyricWiki Toy] is a [http://www.pygtk.org/ PyGTK] application that can grab arbitrary lyrics or fetch the current playing [http://www.gnome.org/projects/rhythmbox/ Rhythmbox] song. More blabbing about it at [http://silenceisdefeat.com/~coweater/lwt/ LyricWiki Toy]

==LyTag==
[http://code.google.com/p/pylywi/ LyTag]
Interactive console based python script for mass-tagging MP3s with ID3v2 tags (USLT) with the lyrics from lyricwiki.org

=Mashups=
Directory of Mashups using the LyricWiki API can be found on [http://www.programmableweb.com/api/lyricwiki/mashups Programmable Web].


=Plugins for Media Players=
LyricWiki.org is open to its content being used by plugins for media-players. Once the [[LyricWiki:Integration#API|API]] is more full-featured, that may be very helpful. We would like to see plugins for all major media-players (and of course, minor players too!). If you know how to write a plugin for iTunes, MediaPlayer, etc. Please feel free to chip in.

If you have written a plugin, please add a section here with a description of the plugin and a link to where the plugin can be downloaded, as well as a way for us to contact you to warn you when changes are made.

Although not fully implemented, an alternative to screen scraping is to use the [[LyricWiki API/SOAP|SOAP Webservice]]. Currently the SOAP webservice is under construction but you can check if a song exists and you can retrieve the lyrics for it.

==LyricWiki ([[w:c:lyrics:LyricWiki talk:Plugins#LyricWiki|talk]])==
XMLyrics (now renamed &quot;LyricWiki&quot;) is the first program to make use of the [[LyricWiki API/SOAP|SOAP webservice]]. It was written by Cyber Sinh and is available for [http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe download here], more information is available [http://www.luminescence-software.org/index.php?option=com_content&amp;task=section&amp;id=5&amp;Itemid=28&amp;lang=en here]. The program supports French and English. Although it is an external application, once you load it up, you can set it to work with any of several media players. It uses WPF, so you need to install the .NET framework 3.0 to run it (included in Vista). This was developed and tested at the same time as the SOAP in conjunction with LyricWiki, so it works very well.&lt;br /&gt;

Supports:
* WinAmp
* foobar2000
* musikCube
* Windows Media Player

Download: http://www.luminescence-software.org/download/lyricwiki/LyricWiki-Setup.exe&lt;br /&gt;

==Amarok==

===Amarok LyricWiki.org Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok LyricWiki.org Lyrics Plugin|talk]])===
A simple script to retrieve lyrics from LyricWiki.org and display them on the Lyric tab of the context browser. Now you can enjoy having lyrics that can be fixed when incorrect!

Note: In version 2.0 and all versions that use the SOAP service instead of screen-scraping do not correctly display special characters. This is a problem with the SOAP service and not a problem in the script. For more details on this, please refer to [[LyricWiki API/SOAP/Ruby]].

Download: http://www.kde-apps.org/content/show.php?content=39724&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Amarok LyricWiki.org Lyrics&lt;br /&gt;

===Amarok Wiki-Lyrics ([[w:c:lyrics:LyricWiki talk:Plugins#Amarok Wiki-Lyrics Plugin|talk]])===
This plugin can download lyrics from many sites (including this one) and can also be used to submit song and album pages and CD covers to LyricWiki.org or Lyriki.com. There's also a command line interface, so you can use it without Amarok and even from other players (more info at [http://lyriki.com/Help:Wiki-Lyrics_Script]).

Supported lyrics sites:
{|style=&quot;width:100%;
|style=&quot;width:55%; vertical-align:top;&quot;|
* Beta Lyrics &lt;small&gt;[http://betalyrics.com betalyrics.com]&lt;/small&gt;
* Lyriki &lt;small&gt;[http://www.lyriki.com www.lyriki.com]&lt;/small&gt;
* LyricWiki &lt;small&gt;[http://www.lyricwiki.org www.lyricwiki.org]&lt;/small&gt;
* AZ Lyrics &lt;small&gt;[http://www.azlyrics.com www.azlyrics.com]&lt;/small&gt;
* Baidu MP3 &lt;small&gt;[http://mp3.baidu.com mp3.baidu.com]&lt;/small&gt;
* Dark Lyrics &lt;small&gt;[http://www.darklyrics.com www.darklyrics.com]&lt;/small&gt;
* Giitaayan &lt;small&gt;[http://www.giitaayan.com www.giitaayan.com]&lt;/small&gt;
* Jamendo &lt;small&gt;[http://www.jamendo.com www.jamendo.com]&lt;/small&gt;
* Lyrc &lt;small&gt;[http://lyrc.com.ar lyrc.com.ar]&lt;/small&gt;
|style=&quot;width:45%; vertical-align:top;&quot;|
* Leos Lyrics &lt;small&gt;[http://www.leoslyrics.com www.leoslyrics.com]&lt;/small&gt;
* Lyrics Download &lt;small&gt;[http://www.lyricsdownload.com www.lyricsdownload.com]&lt;/small&gt;
* Lyrics Mania &lt;small&gt;[http://www.lyricsmania.com www.lyricsmania.com]&lt;/small&gt;
* Not Popular &lt;small&gt;[http://www.notpopular.com www.notpopular.com]&lt;/small&gt;
* Seek Lyrics &lt;small&gt;[http://www.seeklyrics.com www.seeklyrics.com]&lt;/small&gt;
* Sing365 &lt;small&gt;[http://www.sing365.com www.sing365.com]&lt;/small&gt;
* Terra Letras &lt;small&gt;[http://letras.terra.com.br letras.terra.com.br]&lt;/small&gt;
|}
Current Version: 0.13.1&lt;br /&gt;
Download: http://www.kde-apps.org/content/show.php?content=35151&lt;br /&gt;
In Amarok: Tools-&gt;Script Manager-&gt;Get More Scripts-&gt;Wiki-Lyrics&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Attendant]]

==Amarok 2==
===Amarok Lyricwiki===
Amarok 2 comes with an preinstalled script for Lyricwiki.

To enable it: Settings -&gt; Configure Amarok -&gt; Scripts -&gt; Enable Lyricwiki script

===Amarok Ultimate Lyrics===
This script can fetch lyrics from multiple sites, including lyrics.wikia.com, and google.

Supported lyric sites:
*wikia.com, lyricsplugin.com, lyricstime.com, lyricsreg.com, metrolyrics.com, seeklyrics.com, azlyrics.com, jamendo.com, darklyrics.com, mp3lyrics.org, songlyrics.com, elyrics.net, lyricsdownload.com, lyrics.com, lyriki.com, lyricsmode.com, lyricsbay.com, loudson.gs, lyricsfreak.com, sing365.com, allreggaelyrics.com, stixoi.info, teksty.org, tekstowo.pl, vagalume.uol.com.br, google.com
&lt;p class=&quot;contenttext&quot;&gt;Download: [http://kde-apps.org/content/show.php?action=content&amp;content=108967 http://kde-apps.org/content/show.php?action=content&amp;content=108967]&lt;/p&gt;

&lt;p class=&quot;contenttext&quot;&gt;To install it in Amarok: Settings -&gt; Configure Amarok -&gt; Scripts -&gt; Manage Scripts -&gt; Search for Ultimate Lyrics and install it&lt;/p&gt;

==WinAmp Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#WinAmp Plugin|talk]])==
LyricGrabber is an automatic lyric getter for WinAmp users works with lyricwiki.org and seeklyrics.com. Also you can search any lyric by just typing the artist and song name to search bar.
Features:
* Automaticly gets lyrics of the song you are listening on Winamp and displays immediately.
* Finds the exact needed lyric!
* Gives opportunity of saving lyrics to computer so that if the same lyrics are needed once again there's no need to go look for the internet.
* Automaticly checks for updates. If there's a newer version warns user.
* Doesn't require Winamp to search and save for lyrics. Write their name and press get it!
* Looks to LyricWiki first then SeekLyrics, makes more song lyrics available.

Download: [no link]&lt;br /&gt;

==foobar2000 component==
Lyrics Grabber (foo_lyricsgrabber) is a working-in-progress component which allows users to download lyrics from specified lyrics provider.

Builtin providers:
* LyricWiki
* LyricsPlugin

With foo_grabber_python extension:
* DarkLyrics
* AZ Lyrics
* LyrDB

Information &amp; Download Link:
http://www.hydrogenaudio.org/forums/index.php?showtopic=62821

==iTunes (for Windows)==

=== Fabio's lyrics Downloader ===
A application written in python which imports lyrics into your iTunes library's songs. It is the only software that works, at the moment. Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds most of the lyrics you need. Continually updated, in english and in italian.
http://lyricsdownloader.altervista.org/sito/?q=en

===iTunes lyrics importer===
(Not working)
The iTunes lyrics importer is a simple application written in C# to import lyrics for the songs in your iTunes, using the Lyricswiki's web services. http://senthilkumar.googlepages.com/ituneslyricsimporter
===iTunes Store file validator===
iTSfv is a VB.NET/C# open source plugin for iTunes to import lyrics with advanced options. Excludes &quot;ft.&quot; or &quot;feat.&quot; etc. strings in brackets during a search from song names if the initial search fails. Supports UTF-8 so that characters such as ç, ã, é, ó are shown properly in iTunes.

LyricWiki related functions include:

* Importing Lyrics from LyricWiki to selected tracks in iTunes
* Exporting Lyrics from LyricWiki to plain text files into album folder, or an external folder with a user configurable file name pattern

Project Home: http://code.google.com/p/itsfv/

===iGrabber===
iGrabber is a Windows application that automatically downloads album art and lyrics for selected iTunes tracks. http://code.google.com/p/igrabber/


===iTunes Lyric Downloader===
-No longer working-

==iTunes (for Mac OS)==






===Fabio's iTunes Lyrics Downloader===
Fast and rich of options application that automatically imports lyrics into your iTunes library songs. It has got other features and it is very easy to use. It works perfectly and finds all the lyrics you need: it searches your lyrics in a lot of different websites. http://lyricsdownloader.altervista.org/sito/?q=en In English and in Italian. Continually updated.

===Cover Artwork Finder by Last Line Of Code===
The app searches both for artwork and lyrics in a batch mode when entire library is processed at once or with selected tracks you chose. Works fine with recent changes and doesn't attach to iTunes - just does its work and you forget about it.
[http://lastlineofcode.com/ArtworkFinderEng Go to download page].



===MassiveLyrics===
Automatic download of lyrics for any song selection you make in iTunes. Fast parallel download allows you to import lyrics for all your collection in mere minutes.
[http://www.apple.com/downloads/macosx/ipod_itunes/massivelyrics.html check it out at the download page]
You can make a small donation if you like it, otherwise it is free!

===Skeiron===
Developer's description:&lt;br /&gt;
Skeiron makes the application that apple is known for even better: iTunes. It shows the artwork of the currently played track in the dock, shows information about it using Growl notifications and downloads lyrics and artworks automatically from the internet. Furthermore you can control iTunes via Skeiron very easily. In the future the control features will be extended step by step.&lt;br /&gt;
To do all this, Skeiron uses modern technology provided by Apple and requires Mac OS X 10.5 with iTunes 7 or higher.&lt;br /&gt;
&lt;br /&gt;
[http://inventivesoft.eu/ Developer's homepage]&lt;br /&gt;
[http://www.macupdate.com/info.php/id/30069/skeiron Skeiron on macupdate.com]&lt;br /&gt;
[http://osx.iusethis.com/app/skeiron Skeiron on iusethis.com]

===GimmeSomeTune for Mac OS X===
From their website:&lt;br /&gt;
GimmeSomeTune in a nutshell:&lt;br /&gt;
downloads lyrics and album covers, shows you iTunes' currently playing song, lyrics-window, vast number of hotkeys to control iTunes, mini-controller, GimmeSomeTune has functionality to change its appearance, support for iChat, &quot;Recently Played&quot; menu, a daemon, and much, much more.

Website is down until further notice. Sorry.

Website: http://www.eternalstorms.at/index.html&lt;br /&gt;
Download: http://www.apple.com/downloads/macosx/ipod_itunes/gimmesometune.html&lt;br /&gt;

===Get Lyrical===
You can choose either a selection of tracks, or the current track. Or turn on &quot;Active Tagging&quot; to get lyrics for songs as you play them.

You can also browse and edit the lyrics of your iTunes tracks right from Get Lyrical.

Website: http://shullian.com/get_lyrical.php&lt;br /&gt;
Download: http://shullian.com/download.php?file=files/getlyrical.zip

===Harmonic Mac OS X Dashboard Widget===
http://mindquirk.com/apps/harmonic/

Harmonic has gone open source and is currently in need of a developer to fix it to work with the new API.

http://github.com/supapuerco/harmonic

===Tune Lyrics 0.6===
http://www.macupdate.com/info.php/id/29554

==iPhone &amp; iPod Touch==
* [http://www.purplehazeapps.com/ Rhapsolyric iPhone App]
* [http://www.eternalstorms.at/gimmesometune/ GimmeSomeTune]
* [http://mindquirk.com/apps/harmonic/ Harmonic]
* [http://www.staylazy.net/canto/ CantoPod]
* [http://www.simplifymedia.com/iphone20.html Simplify Media]
* [http://lyricsapp.net/ Lyrics iPhone app]
* [http://www.schroederdev.com/ Lyrics+ iPhone app]
* [http://www.compulab.de/iphone/lyricsfinder.html Lyrics Finder]

==Rhythmbox LyricWiki Plugin ([[w:c:lyrics:LyricWiki talk:Plugins#Rhythmbox LyricWiki Plugin|talk]])==
Support has been added in rhythmbox svn trunk, so it will be present in the next 0.11.x release and in the future 0.12.x series.

==Xbox Media Center==
There is a script for the Xbox Media Center called &quot;XBMC Lyrics&quot; that was written to grab lyrics from Lyricwiki, as well as from other sources. The status and availability of this plugin is unknown.

=Integration With Other Sites=
==Google Page Search Gadget==
LyricWiki Search Gadget is a simple search form that embeds on your personalized iGoogle page and allows you to quickly lookup the lyrics to your favorite songs on the LyricWiki.org website. Just type in the pieces of the song that you can remember and hit the Search button!

Download: http://www.franzone.com/products/google-gadgets/lyricwiki-search-gadget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==WordPress Plugin==
LyricWiki Search Widget is a WordPress plugin that places a simple search form on your self-hosted WordPress sited to search for song lyrics on the LyricWiki.org site.

Download: http://www.franzone.com/products/wordpress-plugins/lyricwiki-search-widget/&lt;br /&gt;
Maintainer: [[w:c:lyrics:User:Jfranzone|Jfranzone]]&lt;br /&gt;

==Last.fm==
[http://userscripts.org/scripts/show/25208 Last.fm - Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://www.last.fm Last.fm] track pages.

[http://www.reeloo.net/wordpress/lyrics-for-lastfm-radio Last.fm - radio lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a lyrics pane just next to the [http://www.last.fm Last.fm] radio.&lt;br /&gt;

==Lyrics Muse==
[http://www.lyricsmuse.com Lyrics Muse] is a mashup site which combines the LyricWiki lyrics with a users [http://www.last.fm Last.fm] listening habits.

==YouTube==
* [http://userscripts.org/scripts/show/22569 YouTube Lyrics] is a [http://addons.mozilla.org/en-US/firefox/addon/748 Greasemonkey] script that adds a panel with LyricWiki lyrics to [http://youtube.com YouTube] video pages.
* [http://userscripts.org/scripts/show/35365 LyricWiki.org: embed YouTube video] does the opposite: It embeds the YouTube video on the lyricwiki.org song page.

==zika.mu==
[http://zika.mu zika.mu] is a music sharing portal which uses the LyricWiki lyrics.

==comprendo.info==
[http://comprendo.info compendo.info] is a Polish community site that helps people understanding meanings of lyrics. It allows you to analyze, interpret or just share the feelings about songs. Lyrics are loaded from LyricWiki.

=Web Interface=
==Opera==
Opera Widget [http://widgets.opera.com/widget/7046 here]
==Flash==
Flash goes [http://lyricapi.googlepages.com/main-en.html here]
==Pure Web Page==
A Simple way to search lyrics [http://lyricapi.googlepages.com/give-me-lyrics-en.html here]



&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
  </page>
  <page>
    <title>LyricWiki lyrics</title>
    <ns>0</ns>
    <id>2135</id>
      <sha1>634hu94ee4kdha9ljdzt0ka91vvvzb5</sha1>
    <revision>
      <id>4288</id>
      <timestamp>2011-11-10T18:09:32Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>Giving apps individual pages</comment>
      <text xml:space="preserve" bytes="1167">=='''LyricWiki lyrics'''==
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
===Description===

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,500,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
===Wikia APIs/Frameworks Used===
[[LyricWiki_API|LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4289</id>
      <timestamp>2011-11-10T18:28:29Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="1524">&lt;mainpage-leftcolumn-start /&gt;
[[App Gallery|&lt; Check out other apps]]
=='''LyricWiki lyrics'''==
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
===Description===

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,500,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
===Wikia APIs/Frameworks Used===
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4290</id>
      <timestamp>2011-11-10T18:35:39Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="1485">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki lyrics'''==
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
===Description===

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,500,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
===Wikia APIs/Frameworks Used===
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4299</id>
      <timestamp>2011-11-10T18:46:36Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1510">&lt;mainpage-leftcolumn-start /&gt;
=='''LyricWiki lyrics'''==
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
===Description===

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,500,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
===Wikia APIs/Frameworks Used===
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4313</id>
      <timestamp>2011-11-10T19:19:23Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1491">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,500,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
=='''Wikia APIs/Frameworks Used'''==
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4332</id>
      <timestamp>2011-11-13T00:39:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1518">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,500,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
=='''Wikia APIs/Frameworks Used'''==
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4769</id>
      <timestamp>2012-05-26T03:31:41Z</timestamp>
      <contributor>
        <username>XxTimberlakexx</username>
        <id>1517120</id>
      </contributor>
      <comment>/* Description */</comment>
      <text xml:space="preserve" bytes="1519">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.

=='''Wikia APIs/Frameworks Used'''==
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4945</id>
      <timestamp>2012-11-09T22:03:16Z</timestamp>
      <contributor>
        <ip>184.56.129.165</ip>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve" bytes="1518">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Feature===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.

=='''Wikia APIs/Frameworks Used'''==
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>4950</id>
      <timestamp>2012-11-28T04:49:28Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>It is more than one</comment>
      <text xml:space="preserve" bytes="1519">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.

=='''Wikia APIs/Frameworks Used'''==
[[LyricWiki_API|LyricWiki API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>5130</id>
      <timestamp>2013-09-18T19:14:40Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1280">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:LyricWiki API]]</text>
    </revision>
    <revision>
      <id>5131</id>
      <timestamp>2013-09-18T19:14:59Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1253">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
=='''Description'''==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

The app is available on [http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iOS] (iPhone and iPad) and [https://market.android.com/details?id=com.wikia.lyricwiki&amp;hl=en Android].

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>5145</id>
      <timestamp>2013-09-18T19:51:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Description */</comment>
      <text xml:space="preserve" bytes="1245">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
==Description==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

Download from [https://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iTunes] (iPhone) or [https://play.google.com/store/apps/details?id=com.wikia.lyricwiki&amp;hl=en Google Play] .

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>5229</id>
      <timestamp>2013-11-25T11:33:49Z</timestamp>
      <contributor>
        <username>VampiresAndWerewolfsareAwesomeAsHell23</username>
        <id>4721925</id>
      </contributor>
      <text xml:space="preserve" bytes="1262">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;center&quot; captionalign=&quot;left&quot; hideaddbutton=true&gt;
LW_1.jpg
LW_2.jpg
LW_3.jpg
LW_4.jpg
&lt;/gallery&gt;
==Description==

This is the official app of LyricWiki, the community-powered lyrics site with over 1.5 million songs! This free app lets you quickly access the full lyrics to any song as well as discographies for any artist, sorted by album. Type-ahead searching makes it fast to find what you're looking for and get right to the lyrics.

Download from [https://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8 iTunes] (iPhone) or [https://play.google.com/store/apps/details?id=com.wikia.lyricwiki&amp;hl=en Google Play] .

===Features===
*Auto-complete
*Discographies for artists, grouped by album
*iTunes Top 9 images on main screen
*Over 1,700,000 lyrics with more added every day
*Fully licensed: royalties are paid to publishers
*Powered by a wiki community - constantly updated!
*These lyrics have had 5 years of review and editing from hundreds of thousands of users! This is the single most accurate lyrics collection anywhere.
&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]</text>
    </revision>
  </page>
  <page>
    <title>Main Page</title>
    <ns>0</ns>
    <id>2042</id>
    <redirect title="Wikia API Wiki" />
      <sha1>rwp2ftcxd2vv5whdoaq09q3f9gh3nj6</sha1>
    <revision>
      <id>3902</id>
      <timestamp>2011-08-16T19:58:28Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <comment>moved [[Main Page]] to [[Wikia API Wiki]]: SEO</comment>
      <text xml:space="preserve" bytes="28">#REDIRECT [[Wikia API Wiki]]</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki Javascript Client</title>
    <ns>0</ns>
    <id>2171</id>
    <redirect title="JS MediaWiki Client" />
      <sha1>r2sdktu8tch79474g6m10y7faf7mb31</sha1>
    <revision>
      <id>4462</id>
      <timestamp>2011-12-09T15:31:53Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Redirected page to [[JS MediaWiki Client]]</comment>
      <text xml:space="preserve" bytes="33">#REDIRECT [[JS_MediaWiki_Client]]</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:ApiMenuRail</title>
    <ns>8</ns>
    <id>2121</id>
    <redirect title="Template:MenuRail" />
      <sha1>gl6vx8hai1h7n9zrpg4j76snvjl74g5</sha1>
    <revision>
      <id>4162</id>
      <timestamp>2011-10-12T22:08:52Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved [[MediaWiki:ApiMenuRail]] to [[Template:MenuRail]]: Message didn't make sense... back to being wiki-specific... makes sense to be a template again.</comment>
      <text xml:space="preserve" bytes="31">#REDIRECT [[Template:MenuRail]]</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Common.css</title>
    <ns>8</ns>
    <id>2058</id>
      <sha1>c6zngo416qdtm806kfa7h01owa5v95m</sha1>
    <revision>
      <id>3954</id>
      <timestamp>2011-09-28T18:05:10Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>quickStart css</comment>
      <text xml:space="preserve" bytes="3626">/***** CSS placed here will be applied to all skins on the entire site. *****/

/** Quick Start **/
.quickStart{
  width: 32%;
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  padding:5px;
}
.quickStart h3{
  margin: -5px; /* overrides the padding of the parent */
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h3 span{
  font-weight:bold;
  font-size:1.3em;
}


/* Mark redirects in Special:Allpages and Special:Watchlist */
.allpagesredirect {
   font-style: italic;
}
.allpagesredirect:after {
   color: #808080; content: &quot; (redirect)&quot;
}
.watchlistredir {
   font-style: italic;
}

/* Giving headers and TOC a little extra space */
h2 {
   margin-top: 20px;
}
.toc {
   margin-top: 20px;
}

/* Infobox template style */
.infobox {
   border: 1px solid #aaaaaa;
   background-color: #f9f9f9;
   color: black;
   margin-bottom: 0.5em;
   margin-left: 1em;
   padding: 0.2em;
   float: right;
   clear: right;
}
.infobox td,
.infobox th {
   vertical-align: top;
}
.infobox caption {
   font-size: larger;
   margin-left: inherit;
}
.infobox.bordered {
   border-collapse: collapse;
}
.infobox.bordered td,
.infobox.bordered th {
   border: 1px solid #aaaaaa;
}
.infobox.bordered .borderless td,
.infobox.bordered .borderless th {
   border: 0;
}

/* Forum formatting (by -Algorithm &amp; -Splaka) */
.forumheader {
   border: 1px solid #aaa;
   margin-top: 1em;
   padding: 12px;
}
.forumlist td.forum_edited a {
   color: black;
   text-decoration: none;
}
.forumlist td.forum_title a {
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new {
   font-weight: bold;
   background: url(/images/4/4e/Forum_new.gif) center left no-repeat;
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new:visited {
   font-weight: normal;
   background: none;
   padding-left: 20px;
}
.forumlist th.forum_title {
   padding-left: 20px;
}

/* Recent changes byte indicators */
.mw-plusminus-pos {
   color: #006500;
}
.mw-plusminus-neg {
   color: #8B0000;
}

/* Image frame fix */
div.tright, div.tleft {
   border: 1px solid silver;
}

div.thumbinner {
   background: inherit;
   border: none;
   color: inherit;
}
#article div.thumb {
   color:inherit;
}

/* === Babel === */

div.babelbox {
   float: right;
   margin-left: 1em;
   margin-bottom: 0.5em;
   width: 246px;
   border: 1px solid #99B3FF;
   padding: 2px 0 2px 0;
}
.lang-blockN, .lang-block0, .lang-block1, .lang-block2, .lang-block3 {
   margin: 2px 4px 2px 4px; /* t, l, b, r */
   width:238px;
   border-collapse: collapse;
}
td.lang-codeN, td.lang-code0, td.lang-code1, td.lang-code2, td.lang-code3 {
   text-align:center;
   font-size:14pt;
   width:45px;
   height:45px;
}
td.lang-descriptionN, td.lang-description0, td.lang-description1,
td.lang-description2, td.lang-description3 {
  font-size:8pt;
  padding:4pt;
  line-height:1.25em;
}

.lang-block0 {
   border:1px solid #FFB3B3;
}
td.lang-code0 {
  background-color: #FFB3B3;
  color: black;
}
td.lang-description0 {
  background-color: #FFE0E8;
  color: black;
}

.lang-block1,  .lang-block2, .lang-block3  {
   border:1px solid #99B3FF;
}
td.lang-code1, td.lang-code2, td.lang-code3 {
  background-color: #99B3FF;
  color: black;
}
td.lang-description1,  td.lang-description2, td.lang-description3 {
  background-color: #E0E8FF;
  color: black;
}

.lang-blockN {
   border:1px solid #6EF7A7;
}
td.lang-codeN {
  background-color: #6EF7A7;
  color: black;
}
td.lang-descriptionN {
  background-color: #C5FCDC;
  color: black;
}</text>
    </revision>
    <revision>
      <id>3957</id>
      <timestamp>2011-09-28T18:12:05Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>dunno what this page actually is used for</comment>
      <text xml:space="preserve" bytes="3173">/***** CSS placed here will be applied to all skins on the entire site. *****/

/* Mark redirects in Special:Allpages and Special:Watchlist */
.allpagesredirect {
   font-style: italic;
}
.allpagesredirect:after {
   color: #808080; content: &quot; (redirect)&quot;
}
.watchlistredir {
   font-style: italic;
}

/* Giving headers and TOC a little extra space */
h2 {
   margin-top: 20px;
}
.toc {
   margin-top: 20px;
}

/* Infobox template style */
.infobox {
   border: 1px solid #aaaaaa;
   background-color: #f9f9f9;
   color: black;
   margin-bottom: 0.5em;
   margin-left: 1em;
   padding: 0.2em;
   float: right;
   clear: right;
}
.infobox td,
.infobox th {
   vertical-align: top;
}
.infobox caption {
   font-size: larger;
   margin-left: inherit;
}
.infobox.bordered {
   border-collapse: collapse;
}
.infobox.bordered td,
.infobox.bordered th {
   border: 1px solid #aaaaaa;
}
.infobox.bordered .borderless td,
.infobox.bordered .borderless th {
   border: 0;
}

/* Forum formatting (by -Algorithm &amp; -Splaka) */
.forumheader {
   border: 1px solid #aaa;
   margin-top: 1em;
   padding: 12px;
}
.forumlist td.forum_edited a {
   color: black;
   text-decoration: none;
}
.forumlist td.forum_title a {
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new {
   font-weight: bold;
   background: url(/images/4/4e/Forum_new.gif) center left no-repeat;
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new:visited {
   font-weight: normal;
   background: none;
   padding-left: 20px;
}
.forumlist th.forum_title {
   padding-left: 20px;
}

/* Recent changes byte indicators */
.mw-plusminus-pos {
   color: #006500;
}
.mw-plusminus-neg {
   color: #8B0000;
}

/* Image frame fix */
div.tright, div.tleft {
   border: 1px solid silver;
}

div.thumbinner {
   background: inherit;
   border: none;
   color: inherit;
}
#article div.thumb {
   color:inherit;
}

/* === Babel === */

div.babelbox {
   float: right;
   margin-left: 1em;
   margin-bottom: 0.5em;
   width: 246px;
   border: 1px solid #99B3FF;
   padding: 2px 0 2px 0;
}
.lang-blockN, .lang-block0, .lang-block1, .lang-block2, .lang-block3 {
   margin: 2px 4px 2px 4px; /* t, l, b, r */
   width:238px;
   border-collapse: collapse;
}
td.lang-codeN, td.lang-code0, td.lang-code1, td.lang-code2, td.lang-code3 {
   text-align:center;
   font-size:14pt;
   width:45px;
   height:45px;
}
td.lang-descriptionN, td.lang-description0, td.lang-description1,
td.lang-description2, td.lang-description3 {
  font-size:8pt;
  padding:4pt;
  line-height:1.25em;
}

.lang-block0 {
   border:1px solid #FFB3B3;
}
td.lang-code0 {
  background-color: #FFB3B3;
  color: black;
}
td.lang-description0 {
  background-color: #FFE0E8;
  color: black;
}

.lang-block1,  .lang-block2, .lang-block3  {
   border:1px solid #99B3FF;
}
td.lang-code1, td.lang-code2, td.lang-code3 {
  background-color: #99B3FF;
  color: black;
}
td.lang-description1,  td.lang-description2, td.lang-description3 {
  background-color: #E0E8FF;
  color: black;
}

.lang-blockN {
   border:1px solid #6EF7A7;
}
td.lang-codeN {
  background-color: #6EF7A7;
  color: black;
}
td.lang-descriptionN {
  background-color: #C5FCDC;
  color: black;
}</text>
    </revision>
    <revision>
      <id>4358</id>
      <timestamp>2011-11-22T22:45:37Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="3283">/***** CSS placed here will be applied to all skins on the entire site. *****/

/* Mark redirects in Special:Allpages and Special:Watchlist */
.allpagesredirect {
   font-style: italic;
}
.allpagesredirect:after {
   color: #808080; content: &quot; (redirect)&quot;
}
.watchlistredir {
   font-style: italic;
}

/* Giving headers and TOC a little extra space */
h2 {
   margin-top: 20px;
}
.toc {
   margin-top: 20px;
}

/* Infobox template style */
.infobox {
   border: 1px solid #aaaaaa;
   background-color: #f9f9f9;
   color: black;
   margin-bottom: 0.5em;
   margin-left: 1em;
   padding: 0.2em;
   float: right;
   clear: right;
}
.infobox td,
.infobox th {
   vertical-align: top;
}
.infobox caption {
   font-size: larger;
   margin-left: inherit;
}
.infobox.bordered {
   border-collapse: collapse;
}
.infobox.bordered td,
.infobox.bordered th {
   border: 1px solid #aaaaaa;
}
.infobox.bordered .borderless td,
.infobox.bordered .borderless th {
   border: 0;
}

/* Forum formatting (by -Algorithm &amp; -Splaka) */
.forumheader {
   border: 1px solid #aaa;
   margin-top: 1em;
   padding: 12px;
}
.forumlist td.forum_edited a {
   color: black;
   text-decoration: none;
}
.forumlist td.forum_title a {
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new {
   font-weight: bold;
   background: url(/images/4/4e/Forum_new.gif) center left no-repeat;
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new:visited {
   font-weight: normal;
   background: none;
   padding-left: 20px;
}
.forumlist th.forum_title {
   padding-left: 20px;
}

/* Recent changes byte indicators */
.mw-plusminus-pos {
   color: #006500;
}
.mw-plusminus-neg {
   color: #8B0000;
}

/* Image frame fix */
div.tright, div.tleft {
   border: 1px solid silver;
}

div.thumbinner {
   background: inherit;
   border: none;
   color: inherit;
}
#article div.thumb {
   color:inherit;
}

/* === Babel === */

div.babelbox {
   float: right;
   margin-left: 1em;
   margin-bottom: 0.5em;
   width: 246px;
   border: 1px solid #99B3FF;
   padding: 2px 0 2px 0;
}
.lang-blockN, .lang-block0, .lang-block1, .lang-block2, .lang-block3 {
   margin: 2px 4px 2px 4px; /* t, l, b, r */
   width:238px;
   border-collapse: collapse;
}
td.lang-codeN, td.lang-code0, td.lang-code1, td.lang-code2, td.lang-code3 {
   text-align:center;
   font-size:14pt;
   width:45px;
   height:45px;
}
td.lang-descriptionN, td.lang-description0, td.lang-description1,
td.lang-description2, td.lang-description3 {
  font-size:8pt;
  padding:4pt;
  line-height:1.25em;
}

.lang-block0 {
   border:1px solid #FFB3B3;
}
td.lang-code0 {
  background-color: #FFB3B3;
  color: black;
}
td.lang-description0 {
  background-color: #FFE0E8;
  color: black;
}

.lang-block1,  .lang-block2, .lang-block3  {
   border:1px solid #99B3FF;
}
td.lang-code1, td.lang-code2, td.lang-code3 {
  background-color: #99B3FF;
  color: black;
}
td.lang-description1,  td.lang-description2, td.lang-description3 {
  background-color: #E0E8FF;
  color: black;
}

.lang-blockN {
   border:1px solid #6EF7A7;
}
td.lang-codeN {
  background-color: #6EF7A7;
  color: black;
}
td.lang-descriptionN {
  background-color: #C5FCDC;
  color: black;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
background-color:#cfc;
font-weight:bold;
color:green;
}</text>
    </revision>
    <revision>
      <id>4360</id>
      <timestamp>2011-11-22T22:47:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="3308">/***** CSS placed here will be applied to all skins on the entire site. *****/

/* Mark redirects in Special:Allpages and Special:Watchlist */
.allpagesredirect {
   font-style: italic;
}
.allpagesredirect:after {
   color: #808080; content: &quot; (redirect)&quot;
}
.watchlistredir {
   font-style: italic;
}

/* Giving headers and TOC a little extra space */
h2 {
   margin-top: 20px;
}
.toc {
   margin-top: 20px;
}

/* Infobox template style */
.infobox {
   border: 1px solid #aaaaaa;
   background-color: #f9f9f9;
   color: black;
   margin-bottom: 0.5em;
   margin-left: 1em;
   padding: 0.2em;
   float: right;
   clear: right;
}
.infobox td,
.infobox th {
   vertical-align: top;
}
.infobox caption {
   font-size: larger;
   margin-left: inherit;
}
.infobox.bordered {
   border-collapse: collapse;
}
.infobox.bordered td,
.infobox.bordered th {
   border: 1px solid #aaaaaa;
}
.infobox.bordered .borderless td,
.infobox.bordered .borderless th {
   border: 0;
}

/* Forum formatting (by -Algorithm &amp; -Splaka) */
.forumheader {
   border: 1px solid #aaa;
   margin-top: 1em;
   padding: 12px;
}
.forumlist td.forum_edited a {
   color: black;
   text-decoration: none;
}
.forumlist td.forum_title a {
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new {
   font-weight: bold;
   background: url(/images/4/4e/Forum_new.gif) center left no-repeat;
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new:visited {
   font-weight: normal;
   background: none;
   padding-left: 20px;
}
.forumlist th.forum_title {
   padding-left: 20px;
}

/* Recent changes byte indicators */
.mw-plusminus-pos {
   color: #006500;
}
.mw-plusminus-neg {
   color: #8B0000;
}

/* Image frame fix */
div.tright, div.tleft {
   border: 1px solid silver;
}

div.thumbinner {
   background: inherit;
   border: none;
   color: inherit;
}
#article div.thumb {
   color:inherit;
}

/* === Babel === */

div.babelbox {
   float: right;
   margin-left: 1em;
   margin-bottom: 0.5em;
   width: 246px;
   border: 1px solid #99B3FF;
   padding: 2px 0 2px 0;
}
.lang-blockN, .lang-block0, .lang-block1, .lang-block2, .lang-block3 {
   margin: 2px 4px 2px 4px; /* t, l, b, r */
   width:238px;
   border-collapse: collapse;
}
td.lang-codeN, td.lang-code0, td.lang-code1, td.lang-code2, td.lang-code3 {
   text-align:center;
   font-size:14pt;
   width:45px;
   height:45px;
}
td.lang-descriptionN, td.lang-description0, td.lang-description1,
td.lang-description2, td.lang-description3 {
  font-size:8pt;
  padding:4pt;
  line-height:1.25em;
}

.lang-block0 {
   border:1px solid #FFB3B3;
}
td.lang-code0 {
  background-color: #FFB3B3;
  color: black;
}
td.lang-description0 {
  background-color: #FFE0E8;
  color: black;
}

.lang-block1,  .lang-block2, .lang-block3  {
   border:1px solid #99B3FF;
}
td.lang-code1, td.lang-code2, td.lang-code3 {
  background-color: #99B3FF;
  color: black;
}
td.lang-description1,  td.lang-description2, td.lang-description3 {
  background-color: #E0E8FF;
  color: black;
}

.lang-blockN {
   border:1px solid #6EF7A7;
}
td.lang-codeN {
  background-color: #6EF7A7;
  color: black;
}
td.lang-descriptionN {
  background-color: #C5FCDC;
  color: black;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
width:100%;
height:100%;
background-color:#cfc;
font-weight:bold;
color:green;
}</text>
    </revision>
    <revision>
      <id>4362</id>
      <timestamp>2011-11-22T23:30:15Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>This file doesn't seem to purge/update so I'm moving to Wikia.css</comment>
      <text xml:space="preserve" bytes="3173">/***** CSS placed here will be applied to all skins on the entire site. *****/

/* Mark redirects in Special:Allpages and Special:Watchlist */
.allpagesredirect {
   font-style: italic;
}
.allpagesredirect:after {
   color: #808080; content: &quot; (redirect)&quot;
}
.watchlistredir {
   font-style: italic;
}

/* Giving headers and TOC a little extra space */
h2 {
   margin-top: 20px;
}
.toc {
   margin-top: 20px;
}

/* Infobox template style */
.infobox {
   border: 1px solid #aaaaaa;
   background-color: #f9f9f9;
   color: black;
   margin-bottom: 0.5em;
   margin-left: 1em;
   padding: 0.2em;
   float: right;
   clear: right;
}
.infobox td,
.infobox th {
   vertical-align: top;
}
.infobox caption {
   font-size: larger;
   margin-left: inherit;
}
.infobox.bordered {
   border-collapse: collapse;
}
.infobox.bordered td,
.infobox.bordered th {
   border: 1px solid #aaaaaa;
}
.infobox.bordered .borderless td,
.infobox.bordered .borderless th {
   border: 0;
}

/* Forum formatting (by -Algorithm &amp; -Splaka) */
.forumheader {
   border: 1px solid #aaa;
   margin-top: 1em;
   padding: 12px;
}
.forumlist td.forum_edited a {
   color: black;
   text-decoration: none;
}
.forumlist td.forum_title a {
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new {
   font-weight: bold;
   background: url(/images/4/4e/Forum_new.gif) center left no-repeat;
   padding-left: 20px;
}
.forumlist td.forum_title a.forum_new:visited {
   font-weight: normal;
   background: none;
   padding-left: 20px;
}
.forumlist th.forum_title {
   padding-left: 20px;
}

/* Recent changes byte indicators */
.mw-plusminus-pos {
   color: #006500;
}
.mw-plusminus-neg {
   color: #8B0000;
}

/* Image frame fix */
div.tright, div.tleft {
   border: 1px solid silver;
}

div.thumbinner {
   background: inherit;
   border: none;
   color: inherit;
}
#article div.thumb {
   color:inherit;
}

/* === Babel === */

div.babelbox {
   float: right;
   margin-left: 1em;
   margin-bottom: 0.5em;
   width: 246px;
   border: 1px solid #99B3FF;
   padding: 2px 0 2px 0;
}
.lang-blockN, .lang-block0, .lang-block1, .lang-block2, .lang-block3 {
   margin: 2px 4px 2px 4px; /* t, l, b, r */
   width:238px;
   border-collapse: collapse;
}
td.lang-codeN, td.lang-code0, td.lang-code1, td.lang-code2, td.lang-code3 {
   text-align:center;
   font-size:14pt;
   width:45px;
   height:45px;
}
td.lang-descriptionN, td.lang-description0, td.lang-description1,
td.lang-description2, td.lang-description3 {
  font-size:8pt;
  padding:4pt;
  line-height:1.25em;
}

.lang-block0 {
   border:1px solid #FFB3B3;
}
td.lang-code0 {
  background-color: #FFB3B3;
  color: black;
}
td.lang-description0 {
  background-color: #FFE0E8;
  color: black;
}

.lang-block1,  .lang-block2, .lang-block3  {
   border:1px solid #99B3FF;
}
td.lang-code1, td.lang-code2, td.lang-code3 {
  background-color: #99B3FF;
  color: black;
}
td.lang-description1,  td.lang-description2, td.lang-description3 {
  background-color: #E0E8FF;
  color: black;
}

.lang-blockN {
   border:1px solid #6EF7A7;
}
td.lang-codeN {
  background-color: #6EF7A7;
  color: black;
}
td.lang-descriptionN {
  background-color: #C5FCDC;
  color: black;
}</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Lyricwiki-api-mailing-list</title>
    <ns>8</ns>
    <id>2073</id>
      <sha1>o8efbs3ei9ug2nmxlkfpgtya8t3kukj</sha1>
    <revision>
      <id>4015</id>
      <timestamp>2011-09-28T23:59:53Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;table border=0 style=&quot;background-color: #fff; padding: 5px;&quot; cellspacing=0&gt;   &lt;tr&gt;&lt;td&gt;   &lt;img src=&quot;http://groups.google.com/groups/img/3nb/groups_bar.gif&quot;          height=26 wid...&quot;</comment>
      <text xml:space="preserve" bytes="658">&lt;table border=0 style=&quot;background-color: #fff; padding: 5px;&quot; cellspacing=0&gt;
  &lt;tr&gt;&lt;td&gt;
  &lt;img src=&quot;http://groups.google.com/groups/img/3nb/groups_bar.gif&quot;
         height=26 width=132 alt=&quot;Google Groups&quot;&gt;
  &lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td style=&quot;padding-left: 5px&quot;&gt;
  &lt;b&gt;Subscribe to LyricWiki API Developers&lt;/b&gt;
  &lt;/td&gt;&lt;/tr&gt;
  &lt;form action=&quot;http://groups.google.com/group/lyricwiki-api/boxsubscribe&quot;&gt;
  &lt;tr&gt;&lt;td style=&quot;padding-left: 5px;&quot;&gt;
  Email: &lt;input type=text name=email&gt;
  &lt;input type=submit name=&quot;sub&quot; value=&quot;Subscribe&quot;&gt;
  &lt;/td&gt;&lt;/tr&gt;
&lt;/form&gt;
&lt;tr&gt;&lt;td align=right&gt;
  &lt;a href=&quot;http://groups.google.com/group/lyricwiki-api&quot;&gt;Visit this group&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Mainpage</title>
    <ns>8</ns>
    <id>2043</id>
      <sha1>60j4assfod7eax858e9a4dxhd5pfu0y</sha1>
    <revision>
      <id>3903</id>
      <timestamp>2011-08-16T19:58:28Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <comment>SEO</comment>
      <text xml:space="preserve" bytes="14">Wikia API Wiki</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:MenuRail</title>
    <ns>8</ns>
    <id>2120</id>
    <redirect title="MediaWiki:ApiMenuRail" />
      <sha1>7jvh8rbl3pi8x41gt5516xnhl0vw97m</sha1>
    <revision>
      <id>4159</id>
      <timestamp>2011-10-12T21:55:34Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved [[MediaWiki:MenuRail]] to [[MediaWiki:ApiMenuRail]]: it's going to be global so should mention what it's used for</comment>
      <text xml:space="preserve" bytes="35">#REDIRECT [[MediaWiki:ApiMenuRail]]</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Wiki-navigation</title>
    <ns>8</ns>
    <id>2053</id>
      <sha1>lpw3k0b9fpylzeyj4obj5i00gmxm6bo</sha1>
    <revision>
      <id>3937</id>
      <timestamp>2011-09-27T23:48:43Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;*#visited#|TopContent *Resources **Quick Start|Quick Start **Key Request Form|API Key Request **Documentation|Documentation *App Gallery|App Gallery *Support|Support&quot;</comment>
      <text xml:space="preserve" bytes="165">*#visited#|TopContent
*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
*App Gallery|App Gallery
*Support|Support</text>
    </revision>
    <revision>
      <id>4106</id>
      <timestamp>2011-10-06T21:37:22Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Under documentation.</comment>
      <text xml:space="preserve" bytes="264">*#visited#|TopContent
*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
*Support|Support</text>
    </revision>
    <revision>
      <id>4107</id>
      <timestamp>2011-10-06T22:40:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>under App Gallery</comment>
      <text xml:space="preserve" bytes="326">*#visited#|TopContent
*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Game Guides|Game Guides
*Support|Support</text>
    </revision>
    <revision>
      <id>4108</id>
      <timestamp>2011-10-07T16:49:59Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="355">*#visited#|TopContent
*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Game Guides|Game Guides
*Support|Support
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4125</id>
      <timestamp>2011-10-11T22:21:52Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="385">*#visited#|TopContent
*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**App Gallery#LyricWiki lyrics|LyricWiki lyrics
**App Gallery#Wikia Game Guides|Game Guides
*Support|Support
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4126</id>
      <timestamp>2011-10-11T22:22:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="385">*#visited#|TopContent
*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**App_Gallery#LyricWiki_lyrics|LyricWiki lyrics
**App_Gallery#Wikia_Game_Guides|Game Guides
*Support|Support
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4127</id>
      <timestamp>2011-10-11T22:39:14Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="363">*Resources
**Quick Start|Quick Start
**Key Request Form|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**App_Gallery#LyricWiki_lyrics|LyricWiki lyrics
**App_Gallery#Wikia_Game_Guides|Game Guides
*Support|Support
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4134</id>
      <timestamp>2011-10-11T23:07:08Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="362">*Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**App_Gallery#LyricWiki_lyrics|LyricWiki lyrics
**App_Gallery#Wikia_Game_Guides|Game Guides
*Support|Support
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4284</id>
      <timestamp>2011-11-08T21:51:03Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="372">*Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**App_Gallery#LyricWiki_lyrics|LyricWiki lyrics
**App_Gallery#Wikia_Game_Guides|Game Guides
*Support|Support
**FAQ|FAQ
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4286</id>
      <timestamp>2011-11-08T21:55:43Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="395">*Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*App Gallery|App Gallery
**App_Gallery#LyricWiki_lyrics|LyricWiki lyrics
**App_Gallery#Wikia_Game_Guides|Game Guides
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4300</id>
      <timestamp>2011-11-10T18:47:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="404">*Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*Category:App Gallery|App Gallery
**App_Gallery#LyricWiki_lyrics|LyricWiki lyrics
**App_Gallery#Wikia_Game_Guides|Game Guides
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4301</id>
      <timestamp>2011-11-10T18:49:05Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="386">*Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*Category:App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Game Guides|Wikia Game Guides
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4314</id>
      <timestamp>2011-11-10T19:21:53Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="440">*Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*Category:App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Game Guides|Wikia Game Guides
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4315</id>
      <timestamp>2011-11-10T19:23:57Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="459">*Category:Resources|Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Wikia Custom API|Wikia Custom API
*Category:App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Game Guides|Wikia Game Guides
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4321</id>
      <timestamp>2011-11-10T22:33:35Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="487">*Category:Resources|Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***MediaWiki API|MediaWiki API
***LyricWiki API|LyricWiki API
***Documentation#Wikia_Custom_API_Documentation|Wikia Custom API
*Category:App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Game Guides|Wikia Game Guides
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4339</id>
      <timestamp>2011-11-13T00:46:43Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="501">*Category:Resources|Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***Documentation#MediaWiki_API|MediaWiki API
***LyricWiki API|LyricWiki API
***Documentation#Wikia_Custom_API_Documentation|Wikia Custom API
*Category:App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Game Guides|Wikia Game Guides
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>4340</id>
      <timestamp>2011-11-13T00:47:18Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="515">*Category:Resources|Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***Documentation#MediaWiki_API_Documentation|MediaWiki API
***LyricWiki API|LyricWiki API
***Documentation#Wikia_Custom_API_Documentation|Wikia Custom API
*Category:App Gallery|App Gallery
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Game Guides|Wikia Game Guides
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>5149</id>
      <timestamp>2013-09-18T19:53:17Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="535">*Category:Resources|Resources
**Quick Start|Quick Start
**Special:ApiGate|API Key Request
**Documentation|Documentation
***Documentation#MediaWiki_API_Documentation|MediaWiki API
***LyricWiki API|LyricWiki API
***Documentation#Wikia_Custom_API_Documentation|Wikia Custom API
*Category:App Gallery|App Gallery
**My Wikia|My Wikia
**Wikia Game Guides|Wikia Game Guides
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
    <revision>
      <id>5174</id>
      <timestamp>2013-09-18T20:34:43Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="468">*Category:Resources|Resources
**Quick Start|Quick Start
**Documentation|Documentation
***Documentation|Wikia Content API
***Legacy API#MediaWiki_API_Documentation|MediaWiki API
***LyricWiki API|LyricWiki API
*Category:App Gallery|App Gallery
**My Wikia|My Wikia
**Wikia Game Guides|Wikia Game Guides
**LyricWiki lyrics|LyricWiki lyrics
**Wikia Challenge: PhotoPop|Wikia Challenge: PhotoPop
*Support|Support
**FAQ|Frequently Asked Questions
**mailto:api@wikia.com|Email</text>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Wikia.css</title>
    <ns>8</ns>
    <id>2060</id>
      <sha1>9ff11uxuxnfz6w6fse44uw7f2lfc6qy</sha1>
    <revision>
      <id>3956</id>
      <timestamp>2011-09-28T18:12:03Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;/** Quick Start **/ .quickStart{   width: 32%;   background-color:#e3e3e3;   border-bottom-left-radius:5px;   border-bottom-right-radius:5px;   padding:5px; } .quickStart h3{   m...&quot;</comment>
      <text xml:space="preserve" bytes="450">/** Quick Start **/
.quickStart{
  width: 32%;
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  padding:5px;
}
.quickStart h3{
  margin: -5px; /* overrides the padding of the parent */
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h3 span{
  font-weight:bold;
  font-size:1.3em;
}</text>
    </revision>
    <revision>
      <id>3959</id>
      <timestamp>2011-09-28T18:22:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="501">/** Quick Start **/
.quickStart{
  width: 32%;
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  padding:5px;
  float:left;
  height:100px;
  margin-right:25px;
}
.quickStart h4{
  margin: -5px; /* overrides the padding of the parent */
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h3 span{
  font-weight:bold;
  font-size:1.3em;
}</text>
    </revision>
    <revision>
      <id>3960</id>
      <timestamp>2011-09-28T18:24:21Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="503">/** Quick Start **/
.quickStart{
  width: 185px;
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  padding:5px;
  float:left;
  height:100px;
  margin-right:25px;
}
.quickStart h4{
  margin: -5px; /* overrides the padding of the parent */
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}</text>
    </revision>
    <revision>
      <id>3963</id>
      <timestamp>2011-09-28T18:38:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="522">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  height:100px;
  margin-right:25px;
}
.quickStart h4{
  margin: -5px; /* overrides the padding of the parent */
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  padding:5px;
}</text>
    </revision>
    <revision>
      <id>3964</id>
      <timestamp>2011-09-28T18:40:11Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="498">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  height:100px;
  margin-right:25px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  padding:5px;
}</text>
    </revision>
    <revision>
      <id>3965</id>
      <timestamp>2011-09-28T18:42:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="497">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-right:25px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}</text>
    </revision>
    <revision>
      <id>3967</id>
      <timestamp>2011-09-28T19:10:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="532">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-right:25px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}
.quickStart_arrow{
  float:left;
}</text>
    </revision>
    <revision>
      <id>3968</id>
      <timestamp>2011-09-28T19:13:50Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="561">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-right:25px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}
.quickStart_arrow{
  float:left;
  width:33px;
  height:29px;
}</text>
    </revision>
    <revision>
      <id>3970</id>
      <timestamp>2011-09-28T19:19:28Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="602">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:7px 15px 7px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}
.quickStart_arrow{
  float:left;
  width:33px;
  height:29px;
}</text>
    </revision>
    <revision>
      <id>3971</id>
      <timestamp>2011-09-28T19:22:50Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="609">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:12px;
}</text>
    </revision>
    <revision>
      <id>3972</id>
      <timestamp>2011-09-28T19:23:54Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="608">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
}</text>
    </revision>
    <revision>
      <id>3973</id>
      <timestamp>2011-09-28T20:41:22Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="629">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px;
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3985</id>
      <timestamp>2011-09-28T22:34:43Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>more padding</comment>
      <text xml:space="preserve" bytes="643">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3986</id>
      <timestamp>2011-09-28T22:44:50Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="674">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  background-color:#e3e3e3;
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #aaa
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3987</id>
      <timestamp>2011-09-28T22:55:59Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1506">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #aaa;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3988</id>
      <timestamp>2011-09-28T22:57:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1506">/** Quick Start **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3995</id>
      <timestamp>2011-09-28T23:19:10Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1667">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail .module{
  padding:20px;
  color: #00396D;
}
#WikiaRail .module h1{
  margin-bottom:0px;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3996</id>
      <timestamp>2011-09-28T23:22:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>added gradient bg to modules</comment>
      <text xml:space="preserve" bytes="2524">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail .module{
  padding:20px;
  color: #00396D;

background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail .module h1{
  margin-bottom:0px;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3997</id>
      <timestamp>2011-09-28T23:22:54Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2581">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail .module h1{
  margin-bottom:0px;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>3998</id>
      <timestamp>2011-09-28T23:25:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>extra class to keep this style from overriding normal rail on other pages</comment>
      <text xml:space="preserve" bytes="2607">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:0px;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4000</id>
      <timestamp>2011-09-28T23:27:46Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2629">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:0px;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4001</id>
      <timestamp>2011-09-28T23:30:52Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>tweaked rail menu heading</comment>
      <text xml:space="preserve" bytes="2649">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.20em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4002</id>
      <timestamp>2011-09-28T23:33:05Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2665">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:175px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4003</id>
      <timestamp>2011-09-28T23:33:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2665">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4164</id>
      <timestamp>2011-10-12T23:03:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>add the same style to the main part of the Special:ApiGate form</comment>
      <text xml:space="preserve" bytes="2740">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4216</id>
      <timestamp>2011-10-15T00:22:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>imported changes from devbox</comment>
      <text xml:space="preserve" bytes="2869">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4220</id>
      <timestamp>2011-10-28T00:36:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3891">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4221</id>
      <timestamp>2011-10-28T00:54:11Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3888">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  font-size: 1em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}


/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4222</id>
      <timestamp>2011-10-28T00:57:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4009">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  font-size: 1em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:2.5px;
  font-size:1.10em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4223</id>
      <timestamp>2011-10-28T01:09:15Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3990">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:2.5px;
  font-size:1.10em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4225</id>
      <timestamp>2011-10-28T05:27:31Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3990">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:130px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:2.5px;
  font-size:1.10em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4226</id>
      <timestamp>2011-10-28T05:30:01Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3988">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:130px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4227</id>
      <timestamp>2011-10-28T05:32:46Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3988">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:130px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.25em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4228</id>
      <timestamp>2011-10-28T05:33:46Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3988">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.25em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4229</id>
      <timestamp>2011-10-28T05:39:46Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3987">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4230</id>
      <timestamp>2011-10-28T05:44:37Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4085">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:10px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top:5px;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4231</id>
      <timestamp>2011-10-28T05:46:24Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4086">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:10px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top:10px;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4232</id>
      <timestamp>2011-10-28T05:52:10Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4086">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:15px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module HR, #specialApiGateMainSection .module HR{
  margin-top:10px;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4234</id>
      <timestamp>2011-10-28T05:54:07Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4087">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:15px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module HR, #specialApiGateMainSection .module HR{
  padding-top:10px;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4235</id>
      <timestamp>2011-10-28T05:54:49Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4083">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:15px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module HR, #specialApiGateMainSection .module HR{
  padding:10px;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4236</id>
      <timestamp>2011-10-28T05:56:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4082">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module HR, #specialApiGateMainSection .module HR{
  padding:10px;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4237</id>
      <timestamp>2011-10-28T05:58:17Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4104">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module HR, #specialApiGateMainSection .module HR{
  margin-top:10px; margin-bottom:10px
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4238</id>
      <timestamp>2011-10-28T06:00:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4120">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module HR, #specialApiGateMainSection .module HR{
  margin-top:10px; 
margin-bottom:10px;
color:00396D

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4239</id>
      <timestamp>2011-10-28T06:05:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4119">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top:10px; 
margin-bottom:10px;
color:#ddd;

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4242</id>
      <timestamp>2011-10-28T06:15:24Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4147">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px
width: 100px

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4251</id>
      <timestamp>2011-10-28T06:33:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4147">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h2, #specialApiGateMainSection .module h2{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px
width: 100px

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4252</id>
      <timestamp>2011-10-28T06:34:17Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4147">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h4, #specialApiGateMainSection .module h4{
  margin-bottom:5px;
  font-size:1.5em;
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px
width: 100px

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4253</id>
      <timestamp>2011-10-28T06:37:43Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4163">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h4, #specialApiGateMainSection .module h4{
  margin-bottom:5px;
  font-size:1.5em;
font-style:bold
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px
width: 100px

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4254</id>
      <timestamp>2011-10-28T06:42:45Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4164">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module h5, #specialApiGateMainSection .module h5{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px
width: 100px

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4256</id>
      <timestamp>2011-10-28T06:49:50Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4166">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px
width: 100px

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4263</id>
      <timestamp>2011-10-31T17:42:33Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>presumably those rules were wanted?</comment>
      <text xml:space="preserve" bytes="4168">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:125px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

#WikiaRail.WikiaApiRail2 .module hr, #specialApiGateMainSection .module hr{
  margin-top: 10px; 
margin-bottom: 10px;
color: #ddd;
height: 1px;
width: 100px;

}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4266</id>
      <timestamp>2011-11-02T22:18:22Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4006">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:115px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4267</id>
      <timestamp>2011-11-02T22:20:58Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="4006">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:105px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4268</id>
      <timestamp>2011-11-02T22:22:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3983">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;

  font-size: 1.25em;

  border-radius:5px;

  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4269</id>
      <timestamp>2011-11-02T22:24:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3959">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4270</id>
      <timestamp>2011-11-02T22:25:15Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>removing background gradient for UI style guide (design input)</comment>
      <text xml:space="preserve" bytes="3101">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%);
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4271</id>
      <timestamp>2011-11-02T22:27:10Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="2243">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4273</id>
      <timestamp>2011-11-02T23:47:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1803">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4274</id>
      <timestamp>2011-11-02T23:48:21Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Undo revision 4273 by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]])</comment>
      <text xml:space="preserve" bytes="2243">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}
#specialApiGateMainSection .module{
  height:auto;
  background-color:white;
  background-image:none;
  border:1px solid #ddd;
}
#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
font-weight:bold
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4275</id>
      <timestamp>2011-11-02T23:49:56Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="2098">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4277</id>
      <timestamp>2011-11-03T00:49:16Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2219">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4278</id>
      <timestamp>2011-11-03T00:49:46Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2218">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.0em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4279</id>
      <timestamp>2011-11-03T00:52:45Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="2229">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px; color:#000
  font-size:1.0em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4280</id>
      <timestamp>2011-11-03T00:53:44Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Undo revision 4279 by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]])</comment>
      <text xml:space="preserve" bytes="2218">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.0em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4281</id>
      <timestamp>2011-11-03T00:53:55Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Undo revision 4280 by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]])</comment>
      <text xml:space="preserve" bytes="2229">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px; color:#000
  font-size:1.0em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4282</id>
      <timestamp>2011-11-03T00:54:22Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2098">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}</text>
    </revision>
    <revision>
      <id>4361</id>
      <timestamp>2011-11-22T23:29:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2233">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
width:100%;
height:100%;
background-color:#cfc;
font-weight:bold;
color:green;
}</text>
    </revision>
    <revision>
      <id>4364</id>
      <timestamp>2011-11-22T23:32:38Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2220">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
background-color:#cfc;
font-weight:bold;
color:green;
}
.unknown{
}</text>
    </revision>
    <revision>
      <id>4365</id>
      <timestamp>2011-11-22T23:34:55Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2297">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
background-color:#cfc;
font-weight:bold;
color:green;
}
.no{
background-color:#fcc;
color:red;
}
.unknown{
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>4368</id>
      <timestamp>2011-11-22T23:45:08Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2354">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
font-weight:bold;
color:green;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>4369</id>
      <timestamp>2011-11-22T23:45:57Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>bold the 'no' elements</comment>
      <text xml:space="preserve" bytes="2372">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1, #specialApiGateMainSection .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div, #specialApiGateMainSection .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>4375</id>
      <timestamp>2011-11-23T22:31:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>removed style from modules in main part of page.</comment>
      <text xml:space="preserve" bytes="2293">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module, #specialApiGateMainSection .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>4376</id>
      <timestamp>2011-11-23T22:37:07Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>remove more unintended style for main section</comment>
      <text xml:space="preserve" bytes="2257">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>4432</id>
      <timestamp>2011-12-07T10:10:55Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2326">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.partially{
text-align:center;
background-color:#f85;
color:black;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>4433</id>
      <timestamp>2011-12-07T10:14:09Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>made &quot;partially&quot; more readable</comment>
      <text xml:space="preserve" bytes="2345">/** Menu Rail (on Main Page and a few others) **/
#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.partially{
text-align:center;
background-color:#fda;
color:orange;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>5190</id>
      <timestamp>2013-09-20T16:18:46Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="2385">/** Menu Rail (on Main Page and a few others) **/

body { background-repeat: repeat-x; }

#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.partially{
text-align:center;
background-color:#fda;
color:orange;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>5192</id>
      <timestamp>2013-09-20T16:20:58Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="2387">/** Menu Rail (on Main Page and a few others) **/

body {
  background-repeat: repeat-x;
}

#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.partially{
text-align:center;
background-color:#fda;
color:orange;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
    <revision>
      <id>5193</id>
      <timestamp>2013-09-20T16:21:18Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="2397">/** Menu Rail (on Main Page and a few others) **/

body.mediawiki {
  background-repeat: repeat-x;
}

#WikiaRail.WikiaApiRail2 .module{
  padding:20px;
  color: #00396D;
  box-shadow: 0px 4px 8px #bbb;
  height:105px;
}

#WikiaRail.WikiaApiRail .module{
  padding:20px;
  color: #00396D;
  font-size: 1.25em;
  box-shadow: 0px 4px 8px #bbb;
  height:135px; 
}

#WikiaRail.WikiaApiRail .module h1{
  margin-bottom:5px;
  font-size:1.10em;
}

#WikiaRail.WikiaApiRail2 .module div{
  margin-bottom:5px;
  font-size:1.5em;
}

/** &quot;Quick Start&quot; page **/
.quickStart{
  width: 185px;
  float:left;
  margin-left:-10px;
}
.quickStart .first{
  margin-left:0px;
}
.quickStart h4{
  margin: 0px;
  font-size:.85em;
  color:white;
  background-color:#0F88D6;
  line-height:1.3em;
  border-top-left-radius:5px;
  border-top-right-radius:5px;
  padding:12px 15px 12px 15px;
}
.quickStart h4 span{
  font-weight:bold;
  font-size:1.3em;
}
.quickStart div{
  border-bottom-left-radius:5px;
  border-bottom-right-radius:5px;
  height:80px;
  padding:5px 15px 5px 15px;
  box-shadow: 4px 4px 4px #bbb;

  background: rgb(252,252,252); /* Old browsers */
  background: -moz-linear-gradient(top, rgba(252,252,252,1) 0%, rgba(223,223,223,1) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(223,223,223,1))); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* Opera11.10+ */
  background: -ms-linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); /* IE10+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#dfdfdf',GradientType=0 ); /* IE6-9 */
  background: linear-gradient(top, rgba(252,252,252,1) 0%,rgba(223,223,223,1) 100%); 
}
.quickStart_arrow{
  float:left;
  width:33px;
  padding-top:6px;
  position:relative;
}

/** Support Matrix on [[Client libraries]] **/
.yes{
text-align:center;
background-color:#cfc;
color:green;
font-weight:bold;
}
.no{
text-align:center;
background-color:#fcc;
color:red;
font-weight:bold;
}
.partially{
text-align:center;
background-color:#fda;
color:orange;
font-weight:bold;
}
.unknown{
text-align:center;
background-color:#ff8;
color:black;
}</text>
    </revision>
  </page>
  <page>
    <title>My Wikia</title>
    <ns>0</ns>
    <id>2666</id>
      <sha1>4en7e5qy5jjc6f1548pfhf5ztxemzz2</sha1>
    <revision>
      <id>5103</id>
      <timestamp>2013-09-18T18:21:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot;&gt; wiki home.png|My Wikia - Home stats.png|My Wikia - Stats article.png|My Wikia - Article bookmarks.png|My Wikia - ...&quot;</comment>
      <text xml:space="preserve" bytes="1294">&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot;&gt;
wiki home.png|My Wikia - Home
stats.png|My Wikia - Stats
article.png|My Wikia - Article
bookmarks.png|My Wikia - bookmarks
&lt;/gallery&gt;
==Description==
Get the official Wikia app for iPad. Search for the latest news and information on your favorite pop culture topics, collected by millions of fans like yourself. Wikia is the ultimate source for pop culture expertise on more than 300,000 topics, including movies, video games, TV shows, books, music and so much more. Need to keep track of the fast, interlocking jokes on Arrested Development? Read constantly evolving, deep content in an elegant, easy-to-read, and customizable format. Want to catch up on Season 5 of Breaking Bad? Stay up-to-date by searching for and browsing articles by Trending, Popular, or Recent with an effortlessly swipeable interface. It's everything you love all in one app.

With the My Wikia app you can:

*Enjoy an elegant and easy-to-read view of Wikia's massive pop culture communities

*Search and add your favorite topics to your home screen for a personal view of Wikia

*Discover endless photo galleries, videos, and articles on nearly any topic of your choice

*Bookmark and share articles
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5125</id>
      <timestamp>2013-09-18T19:10:18Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1377">&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot;&gt;
wiki home.png|My Wikia - Home
stats.png|My Wikia - Stats
article.png|My Wikia - Article
bookmarks.png|My Wikia - bookmarks
&lt;/gallery&gt;
==Description==
Get the official Wikia app for iPad. Search for the latest news and information on your favorite pop culture topics, collected by millions of fans like yourself. Wikia is the ultimate source for pop culture expertise on more than 300,000 topics, including movies, video games, TV shows, books, music and so much more. Need to keep track of the fast, interlocking jokes on Arrested Development? Read constantly evolving, deep content in an elegant, easy-to-read, and customizable format. Want to catch up on Season 5 of Breaking Bad? Stay up-to-date by searching for and browsing articles by Trending, Popular, or Recent with an effortlessly swipeable interface. It's everything you love all in one app.

With the My Wikia app you can:

*Enjoy an elegant and easy-to-read view of Wikia's massive pop culture communities

*Search and add your favorite topics to your home screen for a personal view of Wikia

*Discover endless photo galleries, videos, and articles on nearly any topic of your choice

*Bookmark and share articles
Download from [https://itunes.apple.com/us/app/my-wikia/id623705389?mt=8 iTunes] .
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5154</id>
      <timestamp>2013-09-18T20:02:56Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1347">&lt;gallery spacing=&quot;small&quot; widths=&quot;147&quot; orientation=&quot;portrait&quot;&gt;
wiki home.png|My Wikia - Home
stats.png|My Wikia - Stats
article.png|My Wikia - Article
bookmarks.png|My Wikia - bookmarks
&lt;/gallery&gt;
==Description==
Get the official Wikia app for iPad. Search for the latest news and information on your favorite pop culture topics, collected by millions of fans like yourself. Wikia is the ultimate source for pop culture expertise on more than 300,000 topics, including movies, video games, TV shows, books, music and so much more. Need to keep track of the fast, interlocking jokes on Arrested Development? Read constantly evolving, deep content in an elegant, easy-to-read, and customizable format. Want to catch up on Season 5 of Breaking Bad? Stay up-to-date by searching for and browsing articles by Trending, Popular, or Recent with an effortlessly swipeable interface. It's everything you love all in one app.

With the My Wikia app you can:

*Enjoy an elegant and easy-to-read view of Wikia's massive pop culture communities

*Search and add your favorite topics to your home screen for a personal view of Wikia

*Discover endless photo galleries, videos, and articles on nearly any topic of your choice

*Bookmark and share articles
Download from [https://itunes.apple.com/us/app/my-wikia/id623705389?mt=8 iTunes] .
[[Category:App Gallery]]</text>
    </revision>
  </page>
  <page>
    <title>Quick Start</title>
    <ns>0</ns>
    <id>2050</id>
      <sha1>ey9mgi2wa11txmega46qnwcwvc7kxk9</sha1>
    <revision>
      <id>3928</id>
      <timestamp>2011-09-26T00:38:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Quick Start Page - Finishing copy tomorrow ;-).</comment>
      <text xml:space="preserve" bytes="1052">__NoTOC__
The following numbered list will be represented graphically:
#Request a key
#*Fill out our form to [[Key Request Form|get your own API Key]].
#Read Guidelines
#*Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
#Build, test, and go!
#*Build and test (over and over again). Then [[App Gallery|share]] with the Community.
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create and share content on any topic in any language.
=='''API'''==
===Documentation===
You can use the following APIs to access the rich user generated information on our websites:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]] .

=='''Terms of Use'''==</text>
    </revision>
    <revision>
      <id>3929</id>
      <timestamp>2011-09-26T05:36:09Z</timestamp>
      <contributor>
        <ip>71.198.136.170</ip>
      </contributor>
      <text xml:space="preserve" bytes="1743">__NoTOC__
The following numbered list will be represented graphically:
#Request a key
#*Fill out our form to [[Key Request Form|get your own API Key]].
#Read Guidelines
#*Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
#Build, test, and go!
#*Build and test (over and over again). Then [[App Gallery|share with the community]].
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from the
&lt;br /&gt;
=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:</text>
    </revision>
    <revision>
      <id>3930</id>
      <timestamp>2011-09-26T05:37:53Z</timestamp>
      <contributor>
        <ip>71.198.136.170</ip>
      </contributor>
      <comment>/* Requesting Keys */</comment>
      <text xml:space="preserve" bytes="1774">__NoTOC__
The following numbered list will be represented graphically:
#Request a key
#*Fill out our form to [[Key Request Form|get your own API Key]].
#Read Guidelines
#*Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
#Build, test, and go!
#*Build and test (over and over again). Then [[App Gallery|share with the community]].
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:</text>
    </revision>
    <revision>
      <id>3946</id>
      <timestamp>2011-09-28T02:47:43Z</timestamp>
      <contributor>
        <ip>71.198.136.170</ip>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1797">__NoTOC__
The following numbered list will be represented graphically:
#Request a key
#*Fill out our form to [[Key Request Form|get your own API Key]].
#Read Guidelines
#*Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
#Build, test, and go!
#*Build and test (over and over again). Then [[App Gallery|share with the community]].
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3952</id>
      <timestamp>2011-09-28T17:57:41Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>changed HTML structure of quickstart blobs</comment>
      <text xml:space="preserve" bytes="1896">__NOTOC__
&lt;div class='quickStart'&gt;
&lt;h3&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h3&gt;
Fill out our form to [[Key Request Form|get your own API Key]].
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h3&gt;&lt;span&gt;2&lt;/span&gt;Read Guidelines&lt;/h3&gt;
Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h3&gt;&lt;span&gt;3&lt;/span&gt;Build, test, and go!&lt;/h3&gt;
Build and test (over and over again). Then [[App Gallery|share with the community]].
&lt;/div&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3953</id>
      <timestamp>2011-09-28T17:58:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1898">__NOTOC__
&lt;div class='quickStart'&gt;
&lt;h3&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h3&gt;
Fill out our form to [[Key Request Form|get your own API Key]].
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h3&gt;&lt;span&gt;2&lt;/span&gt; Read Guidelines&lt;/h3&gt;
Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h3&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h3&gt;
Build and test (over and over again). Then [[App Gallery|share with the community]].
&lt;/div&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3958</id>
      <timestamp>2011-09-28T18:22:40Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1898">__NOTOC__
&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h4&gt;
Fill out our form to [[Key Request Form|get your own API Key]].
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read Guidelines&lt;/h4&gt;
Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
Build and test (over and over again). Then [[App Gallery|share with the community]].
&lt;/div&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3962</id>
      <timestamp>2011-09-28T18:36:15Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1930">__NOTOC__
&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h4&gt;
&lt;div&gt;Fill out our form to [[Key Request Form|get your own API Key]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read Guidelines&lt;/h4&gt;
&lt;div&gt;Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the commnity]].&lt;/div&gt;
&lt;/div&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3966</id>
      <timestamp>2011-09-28T18:46:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1962">__NOTOC__
&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h4&gt;
&lt;div&gt;Fill out our form to [[Key Request Form|get your own API Key]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read Guidelines&lt;/h4&gt;
&lt;div&gt;Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the commnity]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt;&lt;/div&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3969</id>
      <timestamp>2011-09-28T19:14:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2082">__NOTOC__
&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h4&gt;
&lt;div&gt;Fill out our form to [[Key Request Form|get your own API Key]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read Guidelines&lt;/h4&gt;
&lt;div&gt;Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the commnity]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt;&lt;/div&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3974</id>
      <timestamp>2011-09-28T20:45:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="2108">__NOTOC__
&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request a key&lt;/h4&gt;
&lt;div&gt;Fill out our form to [[Key Request Form|get your own API Key]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read Guidelines&lt;/h4&gt;
&lt;div&gt;Review the [[Quick Start#Terms of Use|Terms of Use]] and [[Documentation]] .&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the commnity]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt;&lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3975</id>
      <timestamp>2011-09-28T22:13:06Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Module copy changes</comment>
      <text xml:space="preserve" bytes="2094">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Learn the APIs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community.]]&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3976</id>
      <timestamp>2011-09-28T22:13:42Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>module 2 title</comment>
      <text xml:space="preserve" bytes="2100">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Learn about the APIs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community.]]&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3977</id>
      <timestamp>2011-09-28T22:17:35Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>module 2 title</comment>
      <text xml:space="preserve" bytes="2097">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community.]]&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3978</id>
      <timestamp>2011-09-28T22:23:40Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>+module padding</comment>
      <text xml:space="preserve" bytes="2235">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div style=&quot;padding-left:15px; padding-right:15px&quot;&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div style=&quot;padding-left:15px; padding-right:15px&quot;&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div style=&quot;padding-left:15px; padding-right:15px&quot;&gt;Build and test (over and over again). Then [[App Gallery|share with the community.]]&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3984</id>
      <timestamp>2011-09-28T22:34:34Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>that padding looks good... moved it to [[MediaWiki:Wikia.css]]</comment>
      <text xml:space="preserve" bytes="2097">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community.]]&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>3989</id>
      <timestamp>2011-09-28T22:57:51Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2097">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4060</id>
      <timestamp>2011-09-29T21:37:05Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="2108">__NOTOC__
__NORAIL__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4061</id>
      <timestamp>2011-09-29T21:39:04Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="2097">__NOTOC__

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4074</id>
      <timestamp>2011-09-29T22:24:17Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="2194">&lt;div class=&quot;noRail&quot;&gt;&lt;/div&gt;

__NOTOC__

&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:

&lt;mainpage-endcolumn /&gt;

{{MenuRail}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4075</id>
      <timestamp>2011-09-29T22:24:41Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="2195">&lt;div class=&quot;noRail&quot;&gt; &lt;/div&gt;

__NOTOC__

&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:

&lt;mainpage-endcolumn /&gt;

{{MenuRail}}
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4076</id>
      <timestamp>2011-09-29T22:25:58Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="2129">__NOTOC__

&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:

[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4077</id>
      <timestamp>2011-09-29T22:26:52Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="2098">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Limits===
We have limited the access per key to under XXXX queries per hour in order to preserve the functionality of our APIs. If we detect abuse on your key, we will switch your key off.
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4078</id>
      <timestamp>2011-09-30T17:09:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* API */</comment>
      <text xml:space="preserve" bytes="1906">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request an API key by completing our [[Key Request Form]]. In addition to requesting a key, we strongly encourage you to [http://api.wikia.com/wiki/Special:Signup sign up] for a Wikia account, if you haven't done so already, so you can fully benefit from knowledge of the Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4081</id>
      <timestamp>2011-10-04T18:57:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Requesting Keys */</comment>
      <text xml:space="preserve" bytes="1982">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
Do:
#Stay within the rate limit
Don't:
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4082</id>
      <timestamp>2011-10-04T23:10:42Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3190">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't be able to tell you mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br/&gt;
So go on, play nice, and of course, have fun!
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4083</id>
      <timestamp>2011-10-04T23:11:56Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3180">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't tell you mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun!
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4084</id>
      <timestamp>2011-10-04T23:15:36Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>/* What is Wikia? */</comment>
      <text xml:space="preserve" bytes="3245">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't tell you mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun!
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4086</id>
      <timestamp>2011-10-04T23:22:30Z</timestamp>
      <contributor>
        <ip>174.253.233.34</ip>
      </contributor>
      <text xml:space="preserve" bytes="3246">__NOTOC__


&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;
&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun!
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4097</id>
      <timestamp>2011-10-04T23:56:55Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="3316">&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at api@wikia.com.
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4098</id>
      <timestamp>2011-10-04T23:58:08Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Quick Start]]&quot; ([edit=autoconfirmed] (indefinite) [move=autoconfirmed] (indefinite))</comment>
      <text xml:space="preserve" bytes="3316">&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at api@wikia.com.
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4099</id>
      <timestamp>2011-10-05T00:02:15Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>email link</comment>
      <text xml:space="preserve" bytes="3339">&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line is: do not do anything that you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4101</id>
      <timestamp>2011-10-05T00:35:52Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3330">&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise is specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4103</id>
      <timestamp>2011-10-05T00:39:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3327">&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4105</id>
      <timestamp>2011-10-05T19:02:49Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3335">&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4112</id>
      <timestamp>2011-10-07T21:07:51Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="3342">&lt;br /&gt;
&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4135</id>
      <timestamp>2011-10-11T23:07:48Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3359">&lt;br /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4165</id>
      <timestamp>2011-10-12T23:22:05Z</timestamp>
      <contributor>
        <username>Ohmyn0</username>
        <id>118323</id>
      </contributor>
      <text xml:space="preserve" bytes="3391">__NORAIL____NOHEADER____NONAV__
&lt;br /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4166</id>
      <timestamp>2011-10-12T23:22:22Z</timestamp>
      <contributor>
        <username>Ohmyn0</username>
        <id>118323</id>
      </contributor>
      <text xml:space="preserve" bytes="3370">__NORAIL__
&lt;br /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;[[File:Api_arrow.png]]&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4167</id>
      <timestamp>2011-10-12T23:24:07Z</timestamp>
      <contributor>
        <username>Ohmyn0</username>
        <id>118323</id>
      </contributor>
      <text xml:space="preserve" bytes="3498">__NORAIL__
&lt;br /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4168</id>
      <timestamp>2011-10-12T23:28:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3845">__NORAIL__&amp;nbsp
&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;



&lt;p style=&quot;border-style: initial; border-color: initial; margin-top: 1em; margin-bottom: 1em; &quot;&gt;&lt;mainpage-rightcolumn-start /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;{{MenuRail}}&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4169</id>
      <timestamp>2011-10-12T23:29:45Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3835">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
&lt;br /&gt;
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;



&lt;p style=&quot;border-style: initial; border-color: initial; margin-top: 1em; margin-bottom: 1em;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;{{MenuRail}}&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4170</id>
      <timestamp>2011-10-12T23:30:11Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3836">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;



&lt;p style=&quot;border-style: initial; border-color: initial; margin-top: 1em; margin-bottom: 1em;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;{{MenuRail}}&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4171</id>
      <timestamp>2011-10-12T23:30:59Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3843">&lt;br /&gt;

&lt;mainpage-leftcolumn-start /&gt;
&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;



&lt;p style=&quot;border-style: initial; border-color: initial; margin-top: 1em; margin-bottom: 1em;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;{{MenuRail}}&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4172</id>
      <timestamp>2011-10-12T23:32:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3614">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4173</id>
      <timestamp>2011-10-12T23:33:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3615">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

&lt;br /&gt;

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4174</id>
      <timestamp>2011-10-12T23:34:11Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3609">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4243</id>
      <timestamp>2011-10-28T06:17:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>MenuRail2</comment>
      <text xml:space="preserve" bytes="3610">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4348</id>
      <timestamp>2011-11-22T08:06:56Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* API */  Key Request Form link</comment>
      <text xml:space="preserve" bytes="3626">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our [[Documentation|Documentation page]].
===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4350</id>
      <timestamp>2011-11-22T21:59:57Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>/* Documentation */</comment>
      <text xml:space="preserve" bytes="3633">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 48 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4377</id>
      <timestamp>2011-11-25T01:49:41Z</timestamp>
      <contributor>
        <username>BillK</username>
        <id>38903</id>
      </contributor>
      <comment>/* What is Wikia? */</comment>
      <text xml:space="preserve" bytes="3633">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[App Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>4379</id>
      <timestamp>2011-11-25T03:50:37Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>app gallery link</comment>
      <text xml:space="preserve" bytes="3643">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
The bottom line: don't do anything you wouldn't tell your mom.

But here's the gist of it:
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5079</id>
      <timestamp>2013-09-12T21:33:17Z</timestamp>
      <contributor>
        <username>Swoodie</username>
        <id>3290568</id>
      </contributor>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3709">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at api@wikia.com to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5080</id>
      <timestamp>2013-09-12T21:34:14Z</timestamp>
      <contributor>
        <username>Swoodie</username>
        <id>3290568</id>
      </contributor>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3732">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5089</id>
      <timestamp>2013-09-17T20:26:16Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3726">&lt;mainpage-leftcolumn-start /&gt;
&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5090</id>
      <timestamp>2013-09-17T20:27:04Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Terms of Use */</comment>
      <text xml:space="preserve" bytes="3734">&lt;mainpage-leftcolumn-start /&gt;
&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;

&lt;br /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5091</id>
      <timestamp>2013-09-17T20:28:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3699">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;
__NOTOC____NORAIL__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5092</id>
      <timestamp>2013-09-17T20:29:11Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3701">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;
__NOTOC____NORAIL__


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5093</id>
      <timestamp>2013-09-17T20:30:00Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3714">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
__NOTOC____NORAIL__


=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5094</id>
      <timestamp>2013-09-17T20:30:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]] | [[Special:Block/TranStanley|block]]) to last version by [[User:Swoodie|Swoodie]]</comment>
      <text xml:space="preserve" bytes="3732">&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-leftcolumn-start /&gt;



&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5095</id>
      <timestamp>2013-09-17T20:31:27Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3746">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;

&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__

=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5096</id>
      <timestamp>2013-09-17T20:32:15Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="3744">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Request an API key&lt;/h4&gt;

&lt;div&gt;Read our [[Quick_Start#Terms_of_Use|Terms of Use]] and fill out the [[Special:ApiGate|Key Request Form]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Read our API docs&lt;/h4&gt;
&lt;div&gt;Review our [[Documentation]].&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then [[:Category:App_Gallery|share with the community]].&lt;/div&gt;
&lt;/div&gt;
&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.
*'''Wikia Custom API''' - Provides access to Wikia-specific features, such as LatestPhotos.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

===Requesting Keys===
You can request a key by completing our [[Special:ApiGate|Key Request Form]]. When requesting a key, you will be prompted to login or sign up for a Wikia account. If you don't have a Wikia account yet, you can quickly register for one on this [http://api.wikia.com/wiki/Special:Signup sign-up page]. It's simple, free, and you can benefit from the knowledge of the entire Wikian Community.&lt;br /&gt;

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail2}}

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5157</id>
      <timestamp>2013-09-18T20:13:28Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="3341">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Read our API docs&lt;/h4&gt;

&lt;div&gt;Read our '''[[Quick_Start#Terms_of_Use|Terms of Use]]'''.&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Explore API&lt;/h4&gt;
&lt;div&gt;Use our '''[http://www.wikia.com/api/v1/ interactive documentation]''' and read '''[[Wikia Content API|API usage examples]]'''&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then '''[[:Category:App_Gallery|share with the community]]'''.&lt;/div&gt;
&lt;/div&gt;
&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''Content API -''' Provides access to articles, search and media files.
*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
    <revision>
      <id>5158</id>
      <timestamp>2013-09-18T20:14:20Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="3354">&lt;mainpage-leftcolumn-start /&gt;

&lt;div class='quickStart' style='margin-left:25px'&gt;
&lt;h4&gt;&lt;span&gt;1&lt;/span&gt; Read our API docs&lt;/h4&gt;

&lt;div&gt;Read our '''[[Quick_Start#Terms_of_Use|Terms of Use]]'''.&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;2&lt;/span&gt; Explore API&lt;/h4&gt;
&lt;div&gt;Use our '''[http://www.wikia.com/api/v1/ interactive documentation]''' and read '''[[Wikia Content API|API usage examples]]'''&lt;/div&gt;
&lt;/div&gt;

&lt;div class='quickStart_arrow'&gt;http://images1.wikia.nocookie.net/__cb20110928182946/api2509/images/5/5c/Api_arrow.png&lt;/div&gt;

&lt;div class='quickStart'&gt;
&lt;h4&gt;&lt;span&gt;3&lt;/span&gt; Build, test, and go!&lt;/h4&gt;
&lt;div&gt;Build and test (over and over again). Then '''[[:Category:App_Gallery|share with the community]]'''.&lt;/div&gt;
&lt;/div&gt;
&lt;div style='clear:both'&gt; &lt;/div&gt;
__NOTOC____NORAIL__
=='''What is Wikia?'''==
Wikia is a collaborative publishing platform that enables communities to discover, create, and share content—from data to images—on any topic and in any language. The Wikia network of wikis now boasts over 3 million registered users on over 275,000 wikis, along with [http://www.quantcast.com/p-8bG6eLqkH6Avk over 57 million] monthly global visitors.

It goes without saying that we have A LOT of stuff you can use.

=='''API'''==
===Documentation===

We currently support the following APIs:

*'''Content API -''' Provides access to articles, search and media files.
*'''MediaWiki API''' - Since Wikia is built on top of MediaWiki, the MediaWiki API can be used to access most of the data on our websites.
*'''LyricWiki API''' - Provides access to LyricWiki.

You can find all the documentation on these APIs on our '''[[Documentation|Documentation page]]'''.

=='''Terms of Use'''==
But here's the gist of it:
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].

&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;
{{MenuRail2}}
&lt;mainpage-endcolumn /&gt;
[[Category:Resources]]</text>
    </revision>
  </page>
  <page>
    <title>Support</title>
    <ns>0</ns>
    <id>2092</id>
      <sha1>tfw5an6dv9ihl9lfyashw8levpzg0jf</sha1>
    <revision>
      <id>4100</id>
      <timestamp>2011-10-05T00:05:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>New page</comment>
      <text xml:space="preserve" bytes="55">==Contact==
Email: [mailto:api@wikia.com api@wikia.com]</text>
    </revision>
    <revision>
      <id>4195</id>
      <timestamp>2011-10-13T01:09:32Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="311">&lt;mainpage-leftcolumn-start /&gt;
==Contact==
Email: [mailto:api@wikia.com api@wikia.com]

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4196</id>
      <timestamp>2011-10-13T01:10:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>no toc</comment>
      <text xml:space="preserve" bytes="321">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;
==Contact==
Email: [mailto:api@wikia.com api@wikia.com]

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4197</id>
      <timestamp>2011-10-13T01:11:16Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="383">&lt;mainpage-leftcolumn-start /&gt;
==Contact==
Email: [mailto:api@wikia.com api@wikia.com]

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NOTOC__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4246</id>
      <timestamp>2011-10-28T06:21:12Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>MenuRail2</comment>
      <text xml:space="preserve" bytes="384">&lt;mainpage-leftcolumn-start /&gt;
==Contact==
Email: [mailto:api@wikia.com api@wikia.com]

&lt;mainpage-endcolumn /&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NOTOC__&lt;/p&gt;</text>
    </revision>
  </page>
  <page>
    <title>Talk:JS MediaWiki Client/@comment-Potassium19-20130930135112</title>
    <ns>1</ns>
    <id>2686</id>
      <sha1>mtt9rob1i1d8bwxeaiqpvhfc18w7x39</sha1>
    <revision>
      <id>5205</id>
      <timestamp>2013-09-30T13:51:12Z</timestamp>
      <contributor>
        <username>Potassium19</username>
        <id>3554193</id>
      </contributor>
      <comment>Created page with &quot;thanks for the new download link!&quot;</comment>
      <text xml:space="preserve" bytes="33">thanks for the new download link!</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-2.30.52.230-20130906064933</title>
    <ns>1</ns>
    <id>2652</id>
      <sha1>h1yrb0lqq34kwpcdd8zf4czb4ysp9rf</sha1>
    <revision>
      <id>5070</id>
      <timestamp>2013-09-06T06:49:33Z</timestamp>
      <contributor>
        <ip>2.30.52.230</ip>
      </contributor>
      <comment>Created page with &quot;help &quot;</comment>
      <text xml:space="preserve" bytes="4">help</text>
    </revision>
    <revision>
      <id>5164</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-2.30.52.230-20130906064933]] to [[Talk:Legacy API/@comment-2.30.52.230-20130906064933]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="4">help</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-49.248.181.136-20130404094439</title>
    <ns>1</ns>
    <id>2598</id>
      <sha1>bmyz29mquzecqppzyjvsau02wroyaeq</sha1>
    <revision>
      <id>5004</id>
      <timestamp>2013-04-04T09:44:39Z</timestamp>
      <contributor>
        <ip>49.248.181.136</ip>
      </contributor>
      <comment>Created page with &quot;I want to collect images from wikia. How I can do this using API?&quot;</comment>
      <text xml:space="preserve" bytes="65">I want to collect images from wikia. How I can do this using API?</text>
    </revision>
    <revision>
      <id>5166</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-49.248.181.136-20130404094439]] to [[Talk:Legacy API/@comment-49.248.181.136-20130404094439]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="65">I want to collect images from wikia. How I can do this using API?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-49.248.84.100-20130528123409</title>
    <ns>1</ns>
    <id>2621</id>
      <sha1>pj7dxovhutxezh20rqqf5gk8yrxetoi</sha1>
    <revision>
      <id>5035</id>
      <timestamp>2013-05-28T12:34:09Z</timestamp>
      <contributor>
        <ip>49.248.84.100</ip>
      </contributor>
      <comment>Created page with &quot;  &lt;span style=&quot;color:rgb(0,0,0);font-family:'couriernew',courier;font-size:12pt;line-height:normal;&quot;&gt;www.wikia.com is the collection of wikis. I want to search the images acro...&quot;</comment>
      <text xml:space="preserve" bytes="581">

&lt;span style=&quot;color:rgb(0,0,0);font-family:'couriernew',courier;font-size:12pt;line-height:normal;&quot;&gt;www.wikia.com is the collection of wikis. I want to search the images across the all wikis on www.wikia.com with wikia API. &lt;/span&gt;&lt;span style=&quot;font-family:'couriernew',courier;font-size:12pt;color:rgb(0,0,0);line-height:normal;&quot;&gt;Is it possible with wikia API and How ?&lt;/span&gt;

&lt;span style=&quot;font-family:'couriernew',courier;font-size:medium;color:rgb(0,0,0);line-height:normal;&quot;&gt;We are able to search the wikis on the www.wikia.com. Is it possible with wikia API and How ?&lt;/span&gt;</text>
    </revision>
    <revision>
      <id>5165</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-49.248.84.100-20130528123409]] to [[Talk:Legacy API/@comment-49.248.84.100-20130528123409]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="581">

&lt;span style=&quot;color:rgb(0,0,0);font-family:'couriernew',courier;font-size:12pt;line-height:normal;&quot;&gt;www.wikia.com is the collection of wikis. I want to search the images across the all wikis on www.wikia.com with wikia API. &lt;/span&gt;&lt;span style=&quot;font-family:'couriernew',courier;font-size:12pt;color:rgb(0,0,0);line-height:normal;&quot;&gt;Is it possible with wikia API and How ?&lt;/span&gt;

&lt;span style=&quot;font-family:'couriernew',courier;font-size:medium;color:rgb(0,0,0);line-height:normal;&quot;&gt;We are able to search the wikis on the www.wikia.com. Is it possible with wikia API and How ?&lt;/span&gt;</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-61.4.122.101-20120111204139</title>
    <ns>1</ns>
    <id>2199</id>
      <sha1>pm6lnervlfb5dzo2io1p146kj2ekdxe</sha1>
    <revision>
      <id>4537</id>
      <timestamp>2012-01-11T20:41:40Z</timestamp>
      <contributor>
        <ip>61.4.122.101</ip>
      </contributor>
      <comment>Created page with &quot;kau sulu&quot;</comment>
      <text xml:space="preserve" bytes="8">kau sulu</text>
    </revision>
    <revision>
      <id>5170</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-61.4.122.101-20120111204139]] to [[Talk:Legacy API/@comment-61.4.122.101-20120111204139]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="8">kau sulu</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-LyleArgabright-20120421072904</title>
    <ns>1</ns>
    <id>2351</id>
      <sha1>bfxha6spokktxs67pq70g7mmfn8vukm</sha1>
    <revision>
      <id>4707</id>
      <timestamp>2012-04-21T07:29:04Z</timestamp>
      <contributor>
        <username>LyleArgabright</username>
        <id>4951020</id>
      </contributor>
      <comment>Created page with &quot;So custom API? What's that mean? We are looking for a statistical type form for collecting data from Users. Any ideas?&quot;</comment>
      <text xml:space="preserve" bytes="118">So custom API? What's that mean? We are looking for a statistical type form for collecting data from Users. Any ideas?</text>
    </revision>
    <revision>
      <id>5168</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-LyleArgabright-20120421072904]] to [[Talk:Legacy API/@comment-LyleArgabright-20120421072904]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="118">So custom API? What's that mean? We are looking for a statistical type form for collecting data from Users. Any ideas?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-LyleArgabright-20120421072904/@comment-Sean Colombo-20120421084642</title>
    <ns>1</ns>
    <id>2354</id>
      <sha1>71kexyfeh5tm66537cyra4e8h8ctczh</sha1>
    <revision>
      <id>4710</id>
      <timestamp>2012-04-21T08:46:42Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;That refers to an API that's custom to Wikia as opposed to MediaWiki in general.  What type of information are you trying to collect?&quot;</comment>
      <text xml:space="preserve" bytes="133">That refers to an API that's custom to Wikia as opposed to MediaWiki in general.

What type of information are you trying to collect?</text>
    </revision>
    <revision>
      <id>5169</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-LyleArgabright-20120421072904/@comment-Sean Colombo-20120421084642]] to [[Talk:Legacy API/@comment-LyleArgabright-20120421072904/@comment-Sean Colombo-20120421084642]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="133">That refers to an API that's custom to Wikia as opposed to MediaWiki in general.

What type of information are you trying to collect?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Legacy API/@comment-Snardybardflast-20130301220907</title>
    <ns>1</ns>
    <id>2588</id>
      <sha1>1vpw0ivlvk48vrh8uo69u8hy96o4o8x</sha1>
    <revision>
      <id>4991</id>
      <timestamp>2013-03-01T22:09:08Z</timestamp>
      <contributor>
        <username>Snardybardflast</username>
        <id>6834174</id>
      </contributor>
      <comment>Created page with &quot;I have used the MediaWiki api with wikipedia and have tried to port the same code across.. How do I use the wikia key?&quot;</comment>
      <text xml:space="preserve" bytes="118">I have used the MediaWiki api with wikipedia and have tried to port the same code across.. How do I use the wikia key?</text>
    </revision>
    <revision>
      <id>5167</id>
      <timestamp>2013-09-18T20:25:18Z</timestamp>
      <contributor>
        <username>WikiaBot</username>
        <id>4663069</id>
      </contributor>
      <minor/>
      <comment>WikiaBot moved page [[Talk:Documentation/@comment-Snardybardflast-20130301220907]] to [[Talk:Legacy API/@comment-Snardybardflast-20130301220907]] without leaving a redirect</comment>
      <text xml:space="preserve" bytes="118">I have used the MediaWiki api with wikipedia and have tried to port the same code across.. How do I use the wikia key?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-173.13.135.107-20120315223559</title>
    <ns>1</ns>
    <id>2328</id>
      <sha1>qmbrp6l4294wstyl1erndzkpvl6ydjm</sha1>
    <revision>
      <id>4682</id>
      <timestamp>2012-03-15T22:35:59Z</timestamp>
      <contributor>
        <ip>173.13.135.107</ip>
      </contributor>
      <comment>Created page with &quot;Using fmt=json returns text of the form: song = { 'artist':'Placebo', 'song':'Meds', 'lyrics':'I was alone, falling free\nTrying my best not to forget\nWhat happened to us\nWhat ...&quot;</comment>
      <text xml:space="preserve" bytes="502">Using fmt=json returns text of the form:
song = {
'artist':'Placebo',
'song':'Meds',
'lyrics':'I was alone, falling free\nTrying my best not to forget\nWhat happened to us\nWhat happened to me\nWhat happened as I let it slip\n\nI was confused by the powers that be\nForgetting [...]',
'url':'http://lyrics.wikia.com/Placebo:Meds'
}

This is not valid JSON - JSON string literals use double-quotes, not single quotes, and the &quot;song = &quot; portion is completely non-JSONy. It is, however, valid Python code.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-173.13.135.107-20120315223559/@comment-Sean Colombo-20120315223946</title>
    <ns>1</ns>
    <id>2330</id>
      <sha1>35wursencp3z908761bpwro9sinbqkq</sha1>
    <revision>
      <id>4684</id>
      <timestamp>2012-03-15T22:39:46Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Thanks for pointing this out.  A couple of years ago we realized that this was invalid json and added the &quot;'''realjson'''&quot; return format (gotta love backward compatibility).  Jus...&quot;</comment>
      <text xml:space="preserve" bytes="378">Thanks for pointing this out.  A couple of years ago we realized that this was invalid json and added the &quot;'''realjson'''&quot; return format (gotta love backward compatibility).  Just noticed that the documentation for realjson seems to have been lost (or at least misplaced because I don't see it) when we moved the docs to this wiki.   Will update the docs with &quot;realjson&quot; format.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-173.13.135.107-20120315223559/@comment-Sean Colombo-20120315224630</title>
    <ns>1</ns>
    <id>2331</id>
      <sha1>1bku1rcldf62jp2k9xy8wme4fppzrzv</sha1>
    <revision>
      <id>4686</id>
      <timestamp>2012-03-15T22:46:30Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Docs updated. Thanks again!&quot;</comment>
      <text xml:space="preserve" bytes="27">Docs updated. Thanks again!</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-174.111.230.108-20130923151929</title>
    <ns>1</ns>
    <id>2684</id>
      <sha1>0hoxfs7jmkqo489j47o0xh1ifc9jyu9</sha1>
    <revision>
      <id>5200</id>
      <timestamp>2013-09-23T15:19:29Z</timestamp>
      <contributor>
        <ip>174.111.230.108</ip>
      </contributor>
      <comment>Created page with &quot;It is ludicrous that someone would claim ownership of all lyrics in the world.  In particular, I had written a LyricWiki plus Freebase discography mashup for a band that owns...&quot;</comment>
      <text xml:space="preserve" bytes="527">It is ludicrous that someone would claim ownership of all lyrics in the world.  In particular, I had written a LyricWiki plus Freebase discography mashup for a band that owns all the rights to all their lyrics for their hundreds of songs, and are fine with them being up and correctible for their fans.

Artists are waking up and realizing they've been cheated.  Eliminate the middleman.  Death to music labels, death to the RIAA.  It's only a matter of time.

Thanks for your efforts in helping with the revolution... Not.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-39.32.90.92-20130701182755</title>
    <ns>1</ns>
    <id>2633</id>
      <sha1>57ed0r6gv1k5mbzxzyaff76xicb2oiy</sha1>
    <revision>
      <id>5049</id>
      <timestamp>2013-07-01T18:27:55Z</timestamp>
      <contributor>
        <ip>39.32.90.92</ip>
      </contributor>
      <comment>Created page with &quot;how to list categories using wikia api? Please any help&quot;</comment>
      <text xml:space="preserve" bytes="55">how to list categories using wikia api? Please any help</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-78.12.150.172-20120318212751</title>
    <ns>1</ns>
    <id>2332</id>
      <sha1>cwwo942qowmkremgeghjfgkqkln42fj</sha1>
    <revision>
      <id>4687</id>
      <timestamp>2012-03-18T21:27:52Z</timestamp>
      <contributor>
        <ip>78.12.150.172</ip>
      </contributor>
      <comment>Created page with &quot;'Get Lyrical' app for Mac OS X uses LyricWiki as lyrics search engine. If the API does not return the full lyrics, how is that app supposed to work? Parsing html page of lyric? T...&quot;</comment>
      <text xml:space="preserve" bytes="222">'Get Lyrical' app for Mac OS X uses LyricWiki as lyrics search engine. If the API does not return the full lyrics, how is that app supposed to work? Parsing html page of lyric? Thanks in advance.
PS: Sorry for bad english.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-78.12.150.172-20120318212751/@comment-208.80.65.32-20120506182222</title>
    <ns>1</ns>
    <id>2359</id>
      <sha1>acx2d1x3gh4f62ml28hgbtja84ooeia</sha1>
    <revision>
      <id>4719</id>
      <timestamp>2012-05-06T18:22:22Z</timestamp>
      <contributor>
        <ip>208.80.65.32</ip>
      </contributor>
      <comment>Created page with &quot;Haven't used that app, but presumably if they're showing the full lyrics, they must be doing it in a WebView / WebPanel and just showing the full page (but that page can use any ...&quot;</comment>
      <text xml:space="preserve" bytes="209">Haven't used that app, but presumably if they're showing the full lyrics, they must be doing it in a WebView / WebPanel and just showing the full page (but that page can use any skin, including LyricsMinimal).</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-78.12.150.172-20120318212751/@comment-78.12.179.143-20120506161439</title>
    <ns>1</ns>
    <id>2357</id>
      <sha1>26jbfct3g3sldpa433e0yx8lrd0rxrp</sha1>
    <revision>
      <id>4717</id>
      <timestamp>2012-05-06T16:14:40Z</timestamp>
      <contributor>
        <ip>78.12.179.143</ip>
      </contributor>
      <comment>Created page with &quot;No response? :(&quot;</comment>
      <text xml:space="preserve" bytes="15">No response? :(</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-78.12.150.172-20120318212751/@comment-78.12.179.143-20120508124927</title>
    <ns>1</ns>
    <id>2367</id>
      <sha1>1shzzu4jdzvowlmkk1saq1qbg498lwj</sha1>
    <revision>
      <id>4729</id>
      <timestamp>2012-05-08T12:49:27Z</timestamp>
      <contributor>
        <ip>78.12.179.143</ip>
      </contributor>
      <comment>Created page with &quot;I don't think so, as it automatically adds lyrics to current playing/selected iTunes song...&quot;</comment>
      <text xml:space="preserve" bytes="92">I don't think so, as it automatically adds lyrics to current playing/selected iTunes song...</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-78.12.150.172-20120318212751/@comment-94.36.184.6-20120905231916</title>
    <ns>1</ns>
    <id>2525</id>
      <sha1>80oez5rggtks0wogpvgu56rmuxaxea6</sha1>
    <revision>
      <id>4901</id>
      <timestamp>2012-09-05T23:19:16Z</timestamp>
      <contributor>
        <ip>94.36.184.6</ip>
      </contributor>
      <comment>Created page with &quot;Bump? I also saw many other apps that still work, isn't that illegal? I mean, they must parse the html in order to retrieve the full lyric... Am i wrong?&quot;</comment>
      <text xml:space="preserve" bytes="153">Bump? I also saw many other apps that still work, isn't that illegal? I mean, they must parse the html in order to retrieve the full lyric... Am i wrong?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-78.12.150.172-20120318212751/@comment-94.36.194.147-20120811223350</title>
    <ns>1</ns>
    <id>2521</id>
      <sha1>37251povrggo4a4lh8zlmznnlg1inyh</sha1>
    <revision>
      <id>4887</id>
      <timestamp>2012-08-11T22:33:50Z</timestamp>
      <contributor>
        <ip>94.36.194.147</ip>
      </contributor>
      <comment>Created page with &quot;Other thoughts/ideas?&quot;</comment>
      <text xml:space="preserve" bytes="21">Other thoughts/ideas?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-Arteku-20120306222255</title>
    <ns>1</ns>
    <id>2318</id>
      <sha1>6zzsoc9rcel8vgww3qh6a4nmjeew7jh</sha1>
    <revision>
      <id>4667</id>
      <timestamp>2012-03-06T22:22:55Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <comment>Created page with &quot;I have a question about the constraint that API users must &quot;open the lyricswiki page inside a browser-panel with javascript enabled&quot;.   For an iPhone app, would it be okay to sho...&quot;</comment>
      <text xml:space="preserve" bytes="622">I have a question about the constraint that API users must &quot;open the lyricswiki page inside a browser-panel with javascript enabled&quot;. 

For an iPhone app, would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8) I definitely want to abide by the lyricwiki API terms, but am hoping there's a way to do so that fits better with the visual design of my app. Thanks!</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-Arteku-20120306222255/@comment-Sean Colombo-20120309195524</title>
    <ns>1</ns>
    <id>2323</id>
      <sha1>gb082ls6mvh0q9vp2mku40p9y2rvg66</sha1>
    <revision>
      <id>4675</id>
      <timestamp>2012-03-09T19:55:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Hi there, Unfortunately, we are only licensed to give the lyrics to third parties as web-pages right now so I don't think that would work.  While it wouldn't solve the performanc...&quot;</comment>
      <text xml:space="preserve" bytes="996">Hi there,
Unfortunately, we are only licensed to give the lyrics to third parties as web-pages right now so I don't think that would work.

While it wouldn't solve the performance penalties of using a WebView (mini-browser), you can customize the CSS of the resulting page to fit the visual design of your app.  Fortunately, the performance penalties are fairly minor, the LW app is actually using a WebView to display the lyrics but it doesn't seem to create any perceptible slowdown that I noticed.

I hope that customizing the CSS will help solve your issue. I'm happy to help you figure out good ways to do that if you'd like.

Thanks,
 - Sean


--
As an aside: the LW app does use a WebView, but it does work slightly differently (it can do things in 1 request instead of two).  Our license with Gracenote explicitly covers our mobile app, but we're not allowed to sublicense to others to do the same. Basically Gracenote wants you to license through them if you want to get lyrics directly.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-Ecouteapp-20121106193507</title>
    <ns>1</ns>
    <id>2553</id>
      <sha1>lmoo1ynz1j1foohgamj17pywbff6cik</sha1>
    <revision>
      <id>4939</id>
      <timestamp>2012-11-06T19:35:08Z</timestamp>
      <contributor>
        <username>Ecouteapp</username>
        <id>5710006</id>
      </contributor>
      <comment>Created page with &quot;Hey,  I'm working on an iOS app. I plan to use the API too, and display the shortened lyrics in a TextView, then add a button in the interface to view full lyrics inside a Web...&quot;</comment>
      <text xml:space="preserve" bytes="467">Hey,

I'm working on an iOS app. I plan to use the API too, and display the shortened lyrics in a TextView, then add a button in the interface to view full lyrics inside a WebView.

However, I would like to know which copyright sentence should I use ? Apple asks developers to provide copyrights (like they did with Google Maps using a &quot;© Google Maps 2012&quot; at the bottom-left of the map).

Should I just put &quot;© LyricsWiki, 2012&quot; or &quot;© Gracenote, 2012&quot; ?

Thanks :)</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/@comment-Jbrower95-20120709171017</title>
    <ns>1</ns>
    <id>2500</id>
      <sha1>gmh5dr6mxjtamia0tk4b4tvya000oc6</sha1>
    <revision>
      <id>4865</id>
      <timestamp>2012-07-09T17:10:18Z</timestamp>
      <contributor>
        <username>Jbrower95</username>
        <id>5275756</id>
      </contributor>
      <comment>Created page with &quot;Hi, don't know if anyone can help me. I have an application that uses this interface to pull out certain words from the lyrics, but never shows the lyrics to the user. Is it okay...&quot;</comment>
      <text xml:space="preserve" bytes="366">Hi, don't know if anyone can help me. I have an application that uses this interface to pull out certain words from the lyrics, but never shows the lyrics to the user. Is it okay if the application views the lyrics internally (without displaying them)? If the user wants to actually view the lyrics, he has to view the javascript enabled page with the ads. Thoughts?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-182.71.107.234-20120910104555</title>
    <ns>1</ns>
    <id>2528</id>
      <sha1>ln1qqbbg39xmcd4h5h7blkg7sdjg0gn</sha1>
    <revision>
      <id>4906</id>
      <timestamp>2012-09-10T10:45:56Z</timestamp>
      <contributor>
        <ip>182.71.107.234</ip>
      </contributor>
      <comment>Created page with &quot;I am trying to do the following but it is not working although if I copy-paste the URL in the browser I get the XML response very well. Please help.    $.get(&quot;http://lyrics.wi...&quot;</comment>
      <text xml:space="preserve" bytes="307">I am trying to do the following but it is not working although if I copy-paste the URL in the browser I get the XML response very well. Please help.



$.get(&quot;http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Nothing%20Else%20Matters&amp;song=Metallica&amp;fmt=xml&quot;, {},

function(data){

alert(data);

}, &quot;xml&quot;);</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-182.71.107.234-20120910104555/@comment-Sean Colombo-20120910215125</title>
    <ns>1</ns>
    <id>2530</id>
      <sha1>i5s0baysxzrsf7z89d03cpm4ty6k0ry</sha1>
    <revision>
      <id>4908</id>
      <timestamp>2012-09-10T21:51:25Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;My guess is that you're doing the request from another domain, which isn't allowed in normal AJAX in browsers.  You'll probably have better luck using a JSONP request.  &lt;tt&gt; $...&quot;</comment>
      <text xml:space="preserve" bytes="416">My guess is that you're doing the request from another domain, which isn't allowed in normal AJAX in browsers.

You'll probably have better luck using a JSONP request.

&lt;tt&gt;
$.getJSON(&quot;http://lyrics.wikia.com/api.php?callback=?&quot;,
{
   func: 'getSong',
   artist: 'Metallica',
   song: 'Nothing_Else_Matters',
   fmt: 'realjson' // legacy fix... see docs
},
function(data){
   alert(data);
});
&lt;/tt&gt;

Hope that helps!</text>
    </revision>
    <revision>
      <id>4909</id>
      <timestamp>2012-09-10T21:51:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="430">My guess is that you're doing the request from another domain, which isn't allowed in normal AJAX in browsers.

You'll probably have better luck using a JSONP request.

&lt;code&gt;
 $.getJSON(&quot;http://lyrics.wikia.com/api.php?callback=?&quot;,
 {
    func: 'getSong',
    artist: 'Metallica',
    song: 'Nothing_Else_Matters',
    fmt: 'realjson' // legacy fix... see docs
 },
 function(data){
    alert(data);
 });
&lt;/code&gt;

Hope that helps!</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-195.74.38.118-20120302124338</title>
    <ns>1</ns>
    <id>2290</id>
      <sha1>43xz4ilufy3vwezwrwe3519du2uuqhu</sha1>
    <revision>
      <id>4639</id>
      <timestamp>2012-03-02T12:43:39Z</timestamp>
      <contributor>
        <ip>195.74.38.118</ip>
      </contributor>
      <comment>Created page with &quot; /     너무나 기대가 되는 프로그램을 만들어 주셔서 감사합니다(아직 제대로 써보지 못해서요). 설치부터 난항이었는데 어찌 어찌 설...&quot;</comment>
      <text xml:space="preserve" bytes="451"> /     너무나 기대가 되는 프로그램을 만들어 주셔서 감사합니다(아직 제대로 써보지 못해서요). 설치부터 난항이었는데 어찌 어찌 설치를 했습니다. 그런데  멘션 은 백없이 되었는데  tweets/MD/sent MD  백업이 아니되옵니다. 오류메시지는 다음과 같습니다.  Input stnrig  was not in correct format  도움 요청드리옵니다. 다시 한번 감사드립니다.sunshiner7</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-195.74.38.118-20120302124338/@comment-Sean Colombo-20120403000951</title>
    <ns>1</ns>
    <id>2340</id>
      <sha1>4x9klvyr0nh4lhg5gvfmlazmm3b2min</sha1>
    <revision>
      <id>4695</id>
      <timestamp>2012-04-03T00:09:52Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Google Translate says: &quot;/ So excited Thank you for making the program (not yet, I can not really enjoy any of properly). How was the installation from the hiatus was how to insta...&quot;</comment>
      <text xml:space="preserve" bytes="466">Google Translate says:
&quot;/ So excited Thank you for making the program (not yet, I can not really enjoy any of properly). How was the installation from the hiatus was how to install. But the baekeopyi was mensyeon tweets / MD / sent MD doeopnida no backup. The error messages are as follows: Input stnrig was not in correct format deuriopnida for help. Thank you again. Sunshiner7&quot;

Unfortunately, I can't tell if that's random blog-spam or if that's about our API :(</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-64.237.59.148-20120222042755</title>
    <ns>1</ns>
    <id>2234</id>
      <sha1>7sj4xwveu2nk6we7pdewnbrjdfhjjwb</sha1>
    <revision>
      <id>4578</id>
      <timestamp>2012-02-22T04:27:56Z</timestamp>
      <contributor>
        <ip>64.237.59.148</ip>
      </contributor>
      <comment>Created page with &quot;Thanks for vsiiting my site! I love your blog! And, you might be my new favorite person for saying you are the best white rapper you know!  I'm working on memorizing the words to...&quot;</comment>
      <text xml:space="preserve" bytes="195">Thanks for vsiiting my site! I love your blog! And, you might be my new favorite person for saying you are the best white rapper you know!  I'm working on memorizing the words to Ice Ice Baby! :)</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-82.80.135.128-20131211165640</title>
    <ns>1</ns>
    <id>2717</id>
      <sha1>ae7b958porksme53q3pqc1vsfwxgqmv</sha1>
    <revision>
      <id>5246</id>
      <timestamp>2013-12-11T16:56:40Z</timestamp>
      <contributor>
        <ip>82.80.135.128</ip>
      </contributor>
      <comment>Created page with &quot;Hi there,  Is there an option to get lyrics from one source of information instead Artist AND Song ?  For example,   [http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Brea...&quot;</comment>
      <text xml:space="preserve" bytes="320">Hi there,

Is there an option to get lyrics from one source of information instead Artist AND Song ?

For example, 

[http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Breaking_Benjamin&amp;song=Until_The_End&amp;fmt=text http://lyrics.wikia.com/api.php?func=getSong&amp;ONEINFO=Breaking_Benjamin_Until_The_End&amp;fmt=text]

Thanks.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Arteku-20120204170001</title>
    <ns>1</ns>
    <id>2213</id>
      <sha1>awmynrwry7qedc6ud8sr7bw3w1qocd9</sha1>
    <revision>
      <id>4555</id>
      <timestamp>2012-02-04T17:00:01Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <comment>Created page with &quot;What is the REST format for the postSong function? I've figured out all the parameters except for onAlbums. Can anybody provide an example?  Also, it looks like the postSong func...&quot;</comment>
      <text xml:space="preserve" bytes="342">What is the REST format for the postSong function? I've figured out all the parameters except for onAlbums. Can anybody provide an example?

Also, it looks like the postSong function clears out all the values in the song footer (e.g. language, iTunes ID, MusicBrainz ID, etc.) Is there anyway to retain those, while still updating the lyrics?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Arteku-20120204170001/@comment-Sean Colombo-20120204173009</title>
    <ns>1</ns>
    <id>2216</id>
      <sha1>3do0h6h2uoojgx9k9wbmzx7u4wf0nnn</sha1>
    <revision>
      <id>4558</id>
      <timestamp>2012-02-04T17:30:09Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Great questions on both counts.  For postSong, it's expecting a pipe-delimited list of Album titles (example in: [http://mediawiki-api.googlecode.com/svn/trunk/Mediawiki/LyricWik...&quot;</comment>
      <text xml:space="preserve" bytes="717">Great questions on both counts.  For postSong, it's expecting a pipe-delimited list of Album titles (example in: [http://mediawiki-api.googlecode.com/svn/trunk/Mediawiki/LyricWiki.pm perl] and [http://toolserver.org/~chris/highlight.php?d=chris%2Fclasses%2F&amp;f=botclasses.php php]). The album titles themselves can just be &quot;Album Name (year)&quot; if they're by the same artist who sings the song, otherwise they should be &quot;Artist Name:Album Name (year)&quot; ([http://toolserver.org/~chris/highlight.php?d=chris%2Fclasses%2Fexamples%2F&amp;f=lyricwiki.php example in php] near the bottom).

For the second question, currently there's no way to retain those.  That should definitely be added though.

Thanks for the great questions!</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Bilal.dar-20130521125005</title>
    <ns>1</ns>
    <id>2612</id>
      <sha1>s9a7f4q05ootz385odqgcedn192p5t9</sha1>
    <revision>
      <id>5025</id>
      <timestamp>2013-05-21T12:50:06Z</timestamp>
      <contributor>
        <username>Bilal.dar</username>
        <id>9834849</id>
      </contributor>
      <comment>Created page with &quot;is it possible to get artist name list in this api?&quot;</comment>
      <text xml:space="preserve" bytes="51">is it possible to get artist name list in this api?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Tharindu DG-20120309185035</title>
    <ns>1</ns>
    <id>2319</id>
      <sha1>dmqfxhjkk84ddvevlwnsdv07wnh0jft</sha1>
    <revision>
      <id>4671</id>
      <timestamp>2012-03-09T18:50:35Z</timestamp>
      <contributor>
        <username>Tharindu DG</username>
        <id>4908277</id>
      </contributor>
      <comment>Created page with &quot;I used xml rpc api in a program to download lyrics, but only part of the lyrics is downloaded. why is that ? How can I download full lyrics via this api. e.g : http://lyrics.wiki...&quot;</comment>
      <text xml:space="preserve" bytes="284">I used xml rpc api in a program to download lyrics, but only part of the lyrics is downloaded. why is that ?
How can I download full lyrics via this api.
e.g : http://lyrics.wikia.com/api.php?func=getSong&amp;artist=Linkin_park&amp;song=in_the_end&amp;fmt=xml
only gives half of the lyrics.
thnx.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Tharindu DG-20120309185035/@comment-Sean Colombo-20120309194729</title>
    <ns>1</ns>
    <id>2322</id>
      <sha1>eg4kxngh0lsa1k2jmf4kj7hyt6eb861</sha1>
    <revision>
      <id>4674</id>
      <timestamp>2012-03-09T19:47:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Hi there :)  The answer is in the FAQ: http://api.wikia.com/wiki/LyricWiki_API#FAQs&quot;</comment>
      <text xml:space="preserve" bytes="83">Hi there :)

The answer is in the FAQ: http://api.wikia.com/wiki/LyricWiki_API#FAQs</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Tharindu DG-20120309185035/@comment-Sean Colombo-20120310062856</title>
    <ns>1</ns>
    <id>2325</id>
      <sha1>9utu6uvqgvt8edjyhc30g2fpvvuyj5t</sha1>
    <revision>
      <id>4679</id>
      <timestamp>2012-03-10T06:28:56Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;I'm not aware of any others that are free.&quot;</comment>
      <text xml:space="preserve" bytes="42">I'm not aware of any others that are free.</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/REST/@comment-Tharindu DG-20120309185035/@comment-Tharindu DG-20120310051104</title>
    <ns>1</ns>
    <id>2324</id>
      <sha1>i3izhtmcei9p2b364unferyyfe6u2g4</sha1>
    <revision>
      <id>4677</id>
      <timestamp>2012-03-10T05:11:05Z</timestamp>
      <contributor>
        <username>Tharindu DG</username>
        <id>4908277</id>
      </contributor>
      <comment>Created page with &quot;Thank you very much sean.........! :)&quot;</comment>
      <text xml:space="preserve" bytes="37">Thank you very much sean.........! :)</text>
    </revision>
    <revision>
      <id>4678</id>
      <timestamp>2012-03-10T05:12:07Z</timestamp>
      <contributor>
        <username>Tharindu DG</username>
        <id>4908277</id>
      </contributor>
      <text xml:space="preserve" bytes="95">Thank you very much sean.........! :) Are there any other APIs that I use to grab full lyrics ?</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/@comment-87.1.38.145-20120131201605</title>
    <ns>1</ns>
    <id>2206</id>
      <sha1>0dz7m3vxhj4zk1le40xfobjexvcg6x1</sha1>
    <revision>
      <id>4547</id>
      <timestamp>2012-01-31T20:16:06Z</timestamp>
      <contributor>
        <ip>87.1.38.145</ip>
      </contributor>
      <comment>Created page with &quot;Why getSongResult returns me an incomplete lyric? The value lyric in the returned dictionary terminates with [...] &quot;</comment>
      <text xml:space="preserve" bytes="114">Why getSongResult returns me an incomplete lyric? The value lyric in the returned dictionary terminates with [...]</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/@comment-87.1.38.145-20120131201605/@comment-Sean Colombo-20120131234720</title>
    <ns>1</ns>
    <id>2208</id>
      <sha1>mnt1ev2ce0pwq6fse1k6hfzrc1etuht</sha1>
    <revision>
      <id>4549</id>
      <timestamp>2012-01-31T23:47:20Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Hi there, This question is answered in the first section on this page (the one called [[LyricWiki_API/SOAP#Cropped_Lyrics]]).  Please let us know if you have any other questions :)&quot;</comment>
      <text xml:space="preserve" bytes="180">Hi there,
This question is answered in the first section on this page (the one called [[LyricWiki_API/SOAP#Cropped_Lyrics]]).  Please let us know if you have any other questions :)</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/@comment-Danzaver-20120926132633</title>
    <ns>1</ns>
    <id>2531</id>
      <sha1>nu51gmm6aq95wpkwh80tnv60t2d30xz</sha1>
    <revision>
      <id>4910</id>
      <timestamp>2012-09-26T13:26:34Z</timestamp>
      <contributor>
        <username>Danzaver</username>
        <id>5552524</id>
      </contributor>
      <comment>Created page with &quot;hi,&quot;</comment>
      <text xml:space="preserve" bytes="3">hi,</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/Java &amp; Axis/@comment-128.111.220.50-20120302183150</title>
    <ns>1</ns>
    <id>2303</id>
      <sha1>khl0guazo5havrzv0a6b2xjzaog1oqt</sha1>
    <revision>
      <id>4652</id>
      <timestamp>2012-03-02T18:31:50Z</timestamp>
      <contributor>
        <ip>128.111.220.50</ip>
      </contributor>
      <comment>Created page with &quot;I'm using the modified inutrsctions here to get the mobility pack working in NB6 M7.I still get the preverify error:Preverifying 1 file(s) into /Users/adrian/Projects/NB6/MobileA...&quot;</comment>
      <text xml:space="preserve" bytes="785">I'm using the modified inutrsctions here to get the mobility pack working in NB6 M7.I still get the preverify error:Preverifying 1 file(s) into /Users/adrian/Projects/NB6/MobileApplication1/build/preverified directory.Error preverifying class java.lang.Class    VERIFIER ERROR java/lang/Class.newInstance0()Ljava/lang/Object;:Illegal type in constant pool/Users/adrian/Projects/NB6/MobileApplication1/nbproject/build-impl.xml:416: Preverification failed with error code 1.I've added the 1.4.2 version of classes.jar where necessary.I've even wrapped the preverify script with:#!/bin/shexport PATH=/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/bin/:$PATH/Users/adrian/opt/java/mpp-sdk/osx/preverify/preverify $*I know this is a long thread now, but any ideas?ThxAdrian</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/Java &amp; Axis/@comment-98.215.39.6-20130321214557</title>
    <ns>1</ns>
    <id>2595</id>
      <sha1>cbeu80ayo0cna18exwtc8vuyad2k669</sha1>
    <revision>
      <id>5000</id>
      <timestamp>2013-03-21T21:45:58Z</timestamp>
      <contributor>
        <ip>98.215.39.6</ip>
      </contributor>
      <comment>Created page with &quot;vallnope   code dleet all   Codes &quot;</comment>
      <text xml:space="preserve" bytes="33">vallnope   code dleet all   Codes</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/Python/@comment-Benna100-20130507090352</title>
    <ns>1</ns>
    <id>2609</id>
      <sha1>fld2kgo4uka04elc649furwvesiv386</sha1>
    <revision>
      <id>5021</id>
      <timestamp>2013-05-07T09:03:52Z</timestamp>
      <contributor>
        <username>Benna100</username>
        <id>9218018</id>
      </contributor>
      <comment>Created page with &quot;This is by far the worst API i have used in my life, completely impossible to install or use...&quot;</comment>
      <text xml:space="preserve" bytes="95">This is by far the worst API i have used in my life, completely impossible to install or use...</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki API/SOAP/Ruby/@comment-24.39.229.130-20120928190740</title>
    <ns>1</ns>
    <id>2534</id>
      <sha1>c30brs6iju1w3ssx9goovwsps6x5g5i</sha1>
    <revision>
      <id>4913</id>
      <timestamp>2012-09-28T19:07:40Z</timestamp>
      <contributor>
        <ip>24.39.229.130</ip>
      </contributor>
      <comment>Created page with &quot;1PM&quot;</comment>
      <text xml:space="preserve" bytes="3">1PM</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki lyrics/@comment-5.149.104.81-20130217082045</title>
    <ns>1</ns>
    <id>2585</id>
      <sha1>c37uvgwohxzjthdmqssx3dwwy2k438h</sha1>
    <revision>
      <id>4986</id>
      <timestamp>2013-02-17T08:20:46Z</timestamp>
      <contributor>
        <ip>5.149.104.81</ip>
      </contributor>
      <comment>Created page with &quot;I love it on iOS, but could you please make its look a little less dimal? :D&quot;</comment>
      <text xml:space="preserve" bytes="76">I love it on iOS, but could you please make its look a little less dimal? :D</text>
    </revision>
  </page>
  <page>
    <title>Talk:LyricWiki lyrics/@comment-62.157.245.100-20121223093106</title>
    <ns>1</ns>
    <id>2571</id>
      <sha1>6vbtin9trbyfb8d6jzil4fy8nhnpmkt</sha1>
    <revision>
      <id>4967</id>
      <timestamp>2012-12-23T09:31:06Z</timestamp>
      <contributor>
        <ip>62.157.245.100</ip>
      </contributor>
      <comment>Created page with &quot;Don't works on Android 4.1.1&quot;</comment>
      <text xml:space="preserve" bytes="28">Don't works on Android 4.1.1</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-202.28.180.202-20120930082914</title>
    <ns>1</ns>
    <id>2536</id>
      <sha1>7hstnvkyv3qn3f2dhe7bnmxcp56rplo</sha1>
    <revision>
      <id>4915</id>
      <timestamp>2012-09-30T08:29:14Z</timestamp>
      <contributor>
        <ip>202.28.180.202</ip>
      </contributor>
      <comment>Created page with &quot;      &lt;span style=&quot;font-size:12pt;line-height:115%;font-family:Helvetica,sans-serif;background-position:initialinitial;background-repeat:initialinitial;&quot;&gt;I need to know if I w...&quot;</comment>
      <text xml:space="preserve" bytes="577">





&lt;span style=&quot;font-size:12pt;line-height:115%;font-family:Helvetica,sans-serif;background-position:initialinitial;background-repeat:initialinitial;&quot;&gt;I need to know if I want use a definition of a term from the Wikia, how am I supposed write the reference according to Vancouver style. As the EndNote program asks many things regarding the author, title, page numbers, publishers and editors etc. which I am having problem to find in Wikia. Please help me. &lt;/span&gt;&lt;span style=&quot;font-size:22.0pt;line-height:115%;font-family:&quot;TimesNewRoman&quot;,&quot;serif&quot;; mso-no-proof:no&quot;&gt;
&lt;/span&gt;</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-Batorhos-20120514220857</title>
    <ns>1</ns>
    <id>2370</id>
      <sha1>ih1ekdb6wa6pjmmp3mn183kx61rkxhf</sha1>
    <revision>
      <id>4732</id>
      <timestamp>2012-05-14T22:08:58Z</timestamp>
      <contributor>
        <username>Batorhos</username>
        <id>3152785</id>
      </contributor>
      <comment>Created page with &quot;Is this the site's look? I'm not exactly sure about this page, could somebody help by explaining what the API does? Thanks in advance.&quot;</comment>
      <text xml:space="preserve" bytes="134">Is this the site's look? I'm not exactly sure about this page, could somebody help by explaining what the API does? Thanks in advance.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-Batorhos-20120514220857/@comment-Batorhos-20120515045805</title>
    <ns>1</ns>
    <id>2374</id>
      <sha1>argzinf9vk1k8x0935z5qc2ffqzfnfx</sha1>
    <revision>
      <id>4736</id>
      <timestamp>2012-05-15T04:58:05Z</timestamp>
      <contributor>
        <username>Batorhos</username>
        <id>3152785</id>
      </contributor>
      <comment>Created page with &quot;So it's pretty much making it easier for programmers to code things, rather than making everything from scratch. Thanks very much, appreciate it. Take care.&quot;</comment>
      <text xml:space="preserve" bytes="156">So it's pretty much making it easier for programmers to code things, rather than making everything from scratch. Thanks very much, appreciate it. Take care.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-Batorhos-20120514220857/@comment-Sean Colombo-20120515001214</title>
    <ns>1</ns>
    <id>2373</id>
      <sha1>p7szb5x0oyq9ebnb93t9w75e0f7s4h3</sha1>
    <revision>
      <id>4735</id>
      <timestamp>2012-05-15T00:12:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Hi [[User:Batorhos|Batorhos]] :)  The API is a way for programs to access data from Wikia.  This way, a programmer could make a bot or a mobile app that does something cool using...&quot;</comment>
      <text xml:space="preserve" bytes="318">Hi [[User:Batorhos|Batorhos]] :)  The API is a way for programs to access data from Wikia.  This way, a programmer could make a bot or a mobile app that does something cool using the content in Wikia's databases.  Check out the [[:Category:App_Gallery|App Gallery]] for some examples of what can be made using the API.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-Kangaroopower-20120709043701</title>
    <ns>1</ns>
    <id>2498</id>
      <sha1>f4b7ges6o3rwmfovtdosfass2nvktxs</sha1>
    <revision>
      <id>4863</id>
      <timestamp>2012-07-09T04:37:01Z</timestamp>
      <contributor>
        <username>Kangaroopower</username>
        <id>3562424</id>
      </contributor>
      <comment>Created page with &quot;Just curious, but where's Nirvana's source code? Mainly looking for the javascript part.&quot;</comment>
      <text xml:space="preserve" bytes="88">Just curious, but where's Nirvana's source code? Mainly looking for the javascript part.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-Kangaroopower-20120709043701/@comment-Sean Colombo-20120709212917</title>
    <ns>1</ns>
    <id>2503</id>
      <sha1>ffal8r3r6n1xiusv4okm7b1r1q8ryul</sha1>
    <revision>
      <id>4868</id>
      <timestamp>2012-07-09T21:29:17Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;http://trac.wikia-code.com/browser/wikia/trunk/resources/wikia/libraries/jquery/nirvana/jquery.wikia.nirvana.js&quot;</comment>
      <text xml:space="preserve" bytes="111">http://trac.wikia-code.com/browser/wikia/trunk/resources/wikia/libraries/jquery/nirvana/jquery.wikia.nirvana.js</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-VicVal-20121008165435</title>
    <ns>1</ns>
    <id>2539</id>
      <sha1>mihqwyxa43sy7wuvigvpi1hbz2apv1y</sha1>
    <revision>
      <id>4918</id>
      <timestamp>2012-10-08T16:54:35Z</timestamp>
      <contributor>
        <username>VicVal</username>
        <id>1786536</id>
      </contributor>
      <comment>Created page with &quot;Can't find any mention on what I'm supposed to do with my API Key?  I have a sample PERL MediaWiki::Bot that works well on Wikipedia, but which is unable to log into Wikia :-(...&quot;</comment>
      <text xml:space="preserve" bytes="317">Can't find any mention on what I'm supposed to do with my API Key?

I have a sample PERL MediaWiki::Bot that works well on Wikipedia, but which is unable to log into Wikia :-(

So I got a key, but need to figure out what to with it???

--[[User:VicVal|VicVal]] ([[User talk:VicVal|talk]]) 16:54, October 8, 2012 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>Talk:Quick Start/@comment-VicVal-20121008165435/@comment-Sean Colombo-20121008201949</title>
    <ns>1</ns>
    <id>2542</id>
      <sha1>0x2v79klxzhetyflyjhf4rg92qo02tw</sha1>
    <revision>
      <id>4924</id>
      <timestamp>2012-10-08T20:19:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Set the key in the header &quot;X-Wikia-API-Key&quot; in your request.  The original plan was to make add a subroutine in the [[Perl MediaWiki API]] library for setting that, but I don'...&quot;</comment>
      <text xml:space="preserve" bytes="202">Set the key in the header &quot;X-Wikia-API-Key&quot; in your request.

The original plan was to make add a subroutine in the [[Perl MediaWiki API]] library for setting that, but I don't think that ever happened.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Support/@comment-61.16.146.180-20130307122259</title>
    <ns>1</ns>
    <id>2590</id>
      <sha1>kggaylq5i380liq9zemzbyiu6oxogbj</sha1>
    <revision>
      <id>4992</id>
      <timestamp>2013-03-07T12:22:59Z</timestamp>
      <contributor>
        <ip>61.16.146.180</ip>
      </contributor>
      <comment>Created page with &quot;Hi,  I want to integrate dragonvale wikia in my iOS app,in this regard I want to pull data from these three pages  http://dragonvale.wikia.com/wiki/Dragons  http://dragonvale....&quot;</comment>
      <text xml:space="preserve" bytes="338">Hi,

I want to integrate dragonvale wikia in my iOS app,in this regard I want to pull data from these three pages

http://dragonvale.wikia.com/wiki/Dragons

http://dragonvale.wikia.com/wiki/Breeding

http://dragonvale.wikia.com/wiki/Eggs

Can you please help me in this regard,how to integrate this API into my iOS app?

Thanks

Sucharita</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Challenge: PhotoPop/@comment-Joeyaa-20111225121153</title>
    <ns>1</ns>
    <id>2185</id>
      <sha1>j5h0udok4tkj23w33n38dqn075fz2ri</sha1>
    <revision>
      <id>4513</id>
      <timestamp>2011-12-25T12:11:53Z</timestamp>
      <contributor>
        <username>Joeyaa</username>
        <id>417287</id>
      </contributor>
      <comment>Created page with &quot;Any progress on scaling this as opt-in for all wikis?&quot;</comment>
      <text xml:space="preserve" bytes="53">Any progress on scaling this as opt-in for all wikis?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Challenge: PhotoPop/@comment-Joeyaa-20111225121153/@comment-TranStanley-20111226210257</title>
    <ns>1</ns>
    <id>2193</id>
      <sha1>jpyc1yvnq3qleueu3fdndhja21up6b8</sha1>
    <revision>
      <id>4525</id>
      <timestamp>2011-12-26T21:02:57Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;Sorry, that won't be happening anytime soon, but we'll try our best to notify you when it does. Thanks and Happy Holidays.&quot;</comment>
      <text xml:space="preserve" bytes="122">Sorry, that won't be happening anytime soon, but we'll try our best to notify you when it does. Thanks and Happy Holidays.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Challenge: PhotoPop/@comment-Zanimum-20120107203811</title>
    <ns>1</ns>
    <id>2194</id>
      <sha1>nkbyv98wsyyrtbuzsuqat21qmxnbaln</sha1>
    <revision>
      <id>4526</id>
      <timestamp>2012-01-07T20:38:11Z</timestamp>
      <contributor>
        <username>Zanimum</username>
        <id>921</id>
      </contributor>
      <comment>Created page with &quot;Happy Meal Wiki would love to be included, if you're doing any more tests before a full launch.&quot;</comment>
      <text xml:space="preserve" bytes="95">Happy Meal Wiki would love to be included, if you're doing any more tests before a full launch.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Content API/@comment-87.11.16.106-20131230202241</title>
    <ns>1</ns>
    <id>2729</id>
      <sha1>5n538ri7lbgozy0pxocywp97w6l08cb</sha1>
    <revision>
      <id>5263</id>
      <timestamp>2013-12-30T20:22:41Z</timestamp>
      <contributor>
        <ip>87.11.16.106</ip>
      </contributor>
      <comment>Created page with &quot;How to get article content if i know the title? The url accepts only IDs.  If it's not possible, how i get the ID from the title?&quot;</comment>
      <text xml:space="preserve" bytes="129">How to get article content if i know the title? The url accepts only IDs.

If it's not possible, how i get the ID from the title?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Content API/@comment-87.11.16.106-20131230202241/@comment-TyA-20131231014346</title>
    <ns>1</ns>
    <id>2731</id>
      <sha1>dml7e9p6klcsc6trdrss0ba7h38by5h</sha1>
    <revision>
      <id>5265</id>
      <timestamp>2013-12-31T01:43:46Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <comment>Created page with &quot;You could use the [[Legacy_API#MediaWiki_API_Documentation|MediaWiki API]] for that.   &lt;code&gt;http://api.wikia.com/api.php?action=query&amp;prop=revisions&amp;rvprop=content&amp;titles=Mai...&quot;</comment>
      <text xml:space="preserve" bytes="189">You could use the [[Legacy_API#MediaWiki_API_Documentation|MediaWiki API]] for that. 

&lt;code&gt;http://api.wikia.com/api.php?action=query&amp;prop=revisions&amp;rvprop=content&amp;titles=Main%20Page&lt;/pre&gt;</text>
    </revision>
    <revision>
      <id>5266</id>
      <timestamp>2013-12-31T01:43:55Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <text xml:space="preserve" bytes="190">You could use the [[Legacy_API#MediaWiki_API_Documentation|MediaWiki API]] for that. 

&lt;code&gt;http://api.wikia.com/api.php?action=query&amp;prop=revisions&amp;rvprop=content&amp;titles=Main%20Page&lt;/code&gt;</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Content API/@comment-Asl970-20131025204817</title>
    <ns>1</ns>
    <id>2697</id>
      <sha1>307gk5h1jysfllf9m357s4prrk6leaj</sha1>
    <revision>
      <id>5216</id>
      <timestamp>2013-10-25T20:48:17Z</timestamp>
      <contributor>
        <username>Asl970</username>
        <id>5564744</id>
      </contributor>
      <comment>Created page with &quot;http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true  ^ this doesn't seem right, it doesn't work, should it be:  http://muppet...&quot;</comment>
      <text xml:space="preserve" bytes="277">http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true

^ this doesn't seem right, it doesn't work, should it be:

http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true

without the Api</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Content API/@comment-Asl970-20131025204817/@comment-TyA-20131029161413</title>
    <ns>1</ns>
    <id>2701</id>
      <sha1>lqj1sd71tb7lt45eo6i1vnbdegjqssc</sha1>
    <revision>
      <id>5223</id>
      <timestamp>2013-10-29T16:14:13Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <comment>Created page with &quot;I've edited the page accordingly. &quot;</comment>
      <text xml:space="preserve" bytes="33">I've edited the page accordingly.</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Content API/@comment-KORNiUX-20140105205545</title>
    <ns>1</ns>
    <id>2734</id>
      <sha1>7pmq00att1znm6gjjbrl98xox6mfhel</sha1>
    <revision>
      <id>5269</id>
      <timestamp>2014-01-05T20:55:45Z</timestamp>
      <contributor>
        <username>KORNiUX</username>
        <id>4299437</id>
      </contributor>
      <comment>Created page with &quot;How I can get log and sending messages in chat if I logged in?&quot;</comment>
      <text xml:space="preserve" bytes="62">How I can get log and sending messages in chat if I logged in?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Content API/@comment-KORNiUX-20140105205545/@comment-TyA-20140113192721</title>
    <ns>1</ns>
    <id>2739</id>
      <sha1>glws0ou07egu7x96otxq174rlqlyo66</sha1>
    <revision>
      <id>5275</id>
      <timestamp>2014-01-13T19:27:22Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <comment>Created page with &quot;There isn't an API module for dealing with Chat. However there are some user made solutions for dealing with chat. If simply logging is what you need, you could use [[w:User:J...&quot;</comment>
      <text xml:space="preserve" bytes="353">There isn't an API module for dealing with Chat. However there are some user made solutions for dealing with chat. If simply logging is what you need, you could use [[w:User:Joeytje50/Chat logger|Joeytje50's JS chat logger]]. However if you'd like to program something in Python, you could take a look at [[w:User:Hairr/ChatBot|Hairr's ChatBot module]].</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Game Guides/@comment-Dak47922-20120302155724</title>
    <ns>1</ns>
    <id>2296</id>
      <sha1>75r482ide107xsnssd7eq28kb2w2hyv</sha1>
    <revision>
      <id>4645</id>
      <timestamp>2012-03-02T15:57:24Z</timestamp>
      <contributor>
        <username>Dak47922</username>
        <id>2094570</id>
      </contributor>
      <comment>Created page with &quot;The terraria wiki should be added!&quot;</comment>
      <text xml:space="preserve" bytes="34">The terraria wiki should be added!</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Game Guides/@comment-Razorgirl-20130922062410</title>
    <ns>1</ns>
    <id>2681</id>
      <sha1>41h503144oiphwwdhxojc69hdir9p11</sha1>
    <revision>
      <id>5197</id>
      <timestamp>2013-09-22T06:24:10Z</timestamp>
      <contributor>
        <username>Razorgirl</username>
        <id>842519</id>
      </contributor>
      <comment>Created page with &quot;Does anyone know how Wiki Admins can contact the Devs of this App if our Wiki doesn't seem to be working with this App after we've done all that we supposedly have to do?&quot;</comment>
      <text xml:space="preserve" bytes="170">Does anyone know how Wiki Admins can contact the Devs of this App if our Wiki doesn't seem to be working with this App after we've done all that we supposedly have to do?</text>
    </revision>
  </page>
  <page>
    <title>Talk:Wikia Game Guides/@comment-Razorgirl-20130922062410/@comment-Sean Colombo-20131010222012</title>
    <ns>1</ns>
    <id>2691</id>
      <sha1>m8reuvrdym2xo211fl2jyhc8se8da8h</sha1>
    <revision>
      <id>5209</id>
      <timestamp>2013-10-10T22:20:12Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;You should probably stalk [[User_talk:TranStanley]]&quot;</comment>
      <text xml:space="preserve" bytes="51">You should probably stalk [[User_talk:TranStanley]]</text>
    </revision>
    <revision>
      <id>5210</id>
      <timestamp>2013-10-10T22:21:01Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="75">Probably leaving a comment on [[User_talk:TranStanley]] would do the trick.</text>
    </revision>
  </page>
  <page>
    <title>Template talk:Infobox</title>
    <ns>11</ns>
    <id>1863</id>
      <sha1>ofda1y3lcsqwkcv2o7i83z5vyjmgda4</sha1>
    <revision>
      <id>2935</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="4851">{{Infobox
|Box title    = Info Title
|Image file   = Example.jpg
|Image size   = 125
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
|Row 4 title  = Title row 4
|Row 4 info   = Info row 4
|Row 5 title  = Title row 5
|Row 5 info   = Info row 5
|Row 6 title  = Title row 6
|Row 6 info   = Info row 6
|Row 7 title  = Title row 7
|Row 7 info   = Info row 7
|Row 8 title  = Title row 8
|Row 8 info   = Info row 8
|Row 9 title  = Title row 9
|Row 9 info   = Info row 9
|Row 10 title = Title row 10
|Row 10 info  = Info row 10
}}
Complete Infobox:&lt;br&gt;
&lt;code&gt;'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Image file   = sample.jpg&lt;br /&gt;
'''|'''Image size   = 125&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''|'''Row 4 title  = Title row 4&lt;br /&gt;
'''|'''Row 4 info   = Info row 4&lt;br /&gt;
'''|'''Row 5 title  = Title row 5&lt;br /&gt;
'''|'''Row 5 info   = Info row 5&lt;br /&gt;
'''|'''Row 6 title  = Title row 6&lt;br /&gt;
'''|'''Row 6 info   = Info row 6&lt;br /&gt;
'''|'''Row 7 title  = Title row 7&lt;br /&gt;
'''|'''Row 7 info   = Info row 7&lt;br /&gt;
'''|'''Row 8 title  = Title row 8&lt;br /&gt;
'''|'''Row 8 info   = Info row 8&lt;br /&gt;
'''|'''Row 9 title  = Title row 9&lt;br /&gt;
'''|'''Row 9 info   = Info row 9&lt;br /&gt;
'''|'''Row 10 title = Title row 10&lt;br /&gt;
'''|'''Row 10 info  = Info row 10&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''&lt;/code&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
{{Infobox
|Box title    = Info Title
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
|Row 4 title  = Title row 4
|Row 4 info   = Info row 4
|Row 5 title  = Title row 5
|Row 5 info   = Info row 5
|Row 6 title  = Title row 6
|Row 6 info   = Info row 6
|Row 7 title  = Title row 7
|Row 7 info   = Info row 7
|Row 8 title  = Title row 8
|Row 8 info   = Info row 8
|Row 9 title  = Title row 9
|Row 9 info   = Info row 9
|Row 10 title = Title row 10
|Row 10 info  = Info row 10
}}
Infobox '''Image''' omitted :&lt;br&gt;
&lt;code&gt;'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''|'''Row 4 title  = Title row 4&lt;br /&gt;
'''|'''Row 4 info   = Info row 4&lt;br /&gt;
'''|'''Row 5 title  = Title row 5&lt;br /&gt;
'''|'''Row 5 info   = Info row 5&lt;br /&gt;
'''|'''Row 6 title  = Title row 6&lt;br /&gt;
'''|'''Row 6 info   = Info row 6&lt;br /&gt;
'''|'''Row 7 title  = Title row 7&lt;br /&gt;
'''|'''Row 7 info   = Info row 7&lt;br /&gt;
'''|'''Row 8 title  = Title row 8&lt;br /&gt;
'''|'''Row 8 info   = Info row 8&lt;br /&gt;
'''|'''Row 9 title  = Title row 9&lt;br /&gt;
'''|'''Row 9 info   = Info row 9&lt;br /&gt;
'''|'''Row 10 title = Title row 10&lt;br /&gt;
'''|'''Row 10 info  = Info row 10&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''&lt;/code&gt;
&lt;br&gt;&lt;br&gt;
{{Infobox
|Box title    = Info Title
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
}}
Infobox '''Image''' omitted and displaying only 3 rows of information:&lt;br&gt;
&lt;code&gt;'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''&lt;/code&gt;
&lt;br&gt;&lt;br&gt;
{{Infobox
|Box title    = Info Title
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
|Row 4 info   = Info row 4
|Row 5 title  = Title row 5
|Row 5 info   = Info row 5
|Row 6 title  = Title row 6
|Row 6 info   = Info row 6
}}
Infobox '''Image''' and '''title row 4''' omited:&lt;br&gt;
Result: Row 4, 5, and 6 will not be displayed.&lt;br&gt;
&lt;code&gt;'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''|'''Row 4 info   = Info row 4&lt;br /&gt;
'''|'''Row 5 title  = Title row 5&lt;br /&gt;
'''|'''Row 5 info   = Info row 5&lt;br /&gt;
'''|'''Row 6 title  = Title row 6&lt;br /&gt;
'''|'''Row 6 info   = Info row 6&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''&lt;/code&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template talk:Welcome</title>
    <ns>11</ns>
    <id>1674</id>
      <sha1>lpb98r4b3qxrq7io0476a5egm54bqjb</sha1>
    <revision>
      <id>3054</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2406">==How to use the template==
Just type or copy the text &lt;nowiki&gt;{{subst:welcome|YourUsername |~~~~}}&lt;/nowiki&gt; onto a user's Talk page then add your signature. As soon as you Save, the entry will lose its link to the template and become ordinary text, which you can edit to personalise it.

==Use of &quot;subst:&quot; prefix==
Using the prefix before any template name copies the template then cuts the connection. If you omit the &quot;subst:&quot; the result copies just the same but will not be editable and will always show the current version of the template - probably not a good idea for a one-off welcoming message, although it is useful for many other templates.

==Edit it to make it more specific to this wiki==
For example, it could say &quot;Welcome to the '''&lt;font color=blue&gt;XYZWV Wiki&lt;/font&gt;'''&quot;.    You could add a link to a page you particularly want new users to look at.   You could use the &quot;upload file&quot; link to add a new picture that is meaningful (or funny!) to your visitors, and change the code &lt;nowiki&gt;[[Image:Example.jpg]]&lt;/nowiki&gt; to the name of your new picture.

==Make another one just for you to use==
On your user page you could create a link to something like &lt;nowiki&gt;[[template:welcJG]]&lt;/nowiki&gt; then make the resulting page a copy of [[template:welcome]] and modify it any way you like. Then you can type or paste &lt;nowiki&gt;{{subst:welcJG}}&lt;/nowiki&gt; on a newcomer's page and not need further personalising.

== Auto sign ==
You can get the template to automatically include the user's signature, but it will only work when it's substituted. If it's transcluded the four tildes will show. I guess you have to weigh up the advantages and disadvantages; you can easily include the subst: code in [[MediaWiki:Newarticletext]], but you run the risk of experienced users just transcluding it.

== PAGENAME ==
A good idea is to include the &lt;nowiki&gt;{{PAGENAME}}&lt;/nowiki&gt; magic word, that way the user feels like it's more of a personal welcome. This can be either directly transcluded, or substituted. There are problems with both options. For direct transclusion, the welcome will show the full pagename (e.g. User talk:Name/Archive2), if it's ever archived. For substitution, the whole template needs to be substituted for it to work. Otherwise, the pagename magic word will show. The same problem is faced as with auto signing; more experienced users are likely to just transclude it.

[[Category:Help]]</text>
    </revision>
  </page>
  <page>
    <title>Template:!</title>
    <ns>10</ns>
    <id>1772</id>
      <sha1>482k5k6o1iym676dzqlo6yfmyo0tlel</sha1>
    <revision>
      <id>3654</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="46">&lt;onlyinclude&gt;|&lt;/onlyinclude&gt;
{{documentation}}</text>
    </revision>
  </page>
  <page>
    <title>Template:!!</title>
    <ns>10</ns>
    <id>1798</id>
      <sha1>9w1l3rx1tksmytabfwcd6ift27gzd42</sha1>
    <revision>
      <id>3256</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="43">||&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:!!/doc</title>
    <ns>10</ns>
    <id>1916</id>
      <sha1>3tjusu9tq9tqj8f885gpbd8jno873lp</sha1>
    <revision>
      <id>3362</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="406">;Description
:This template is used for creating two pipes, in [[Help:Table|wikitables]] contained in [[Help:Parser functions|Parser functions]].
;Syntax
:Insert this template using &lt;code&gt;{{t|!!}}&lt;/code&gt;
;See also
:[[m:Template:!!|Template:!!]] on Meta-Wiki.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:!/doc</title>
    <ns>10</ns>
    <id>1915</id>
      <sha1>fus0m31f3cmi3i3ivordud5vb3o3ebw</sha1>
    <revision>
      <id>3359</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="400">;Description
:This template is used for creating a pipe, in [[Help:Table|wikitables]] contained in [[Help:Parser functions|Parser functions]].
;Syntax
:Insert this template using &lt;code&gt;{{t|!}}&lt;/code&gt;
;See also
:[[m:Template:!|Template:!]] on Meta-Wiki.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Album/doc</title>
    <ns>10</ns>
    <id>1996</id>
      <sha1>d2tijgkvjg8tblgirqnylzwwea6eoyo</sha1>
    <revision>
      <id>3754</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1002">;Description
:To use this template, enter the following and fill in the appropriate fields. Any field left blank will not show up. Don't forget to include brackets, to make the fields into links.
;Syntax
:Type &lt;code&gt;{{t|infobox album|...}}&lt;/code&gt; somewhere, with parameters as shown below. 
;Sample output

&lt;pre&gt;{{infobox album
| name       = Album name [defaults to pagename]
| image      = Image:Example.jpg
| imagewidth = [defaults to 250]
| artist     = Artist name
| released   = Release date
| recorded   = Date recorded
| length     = Album length
| label      = Label
| producer   = Producer
}}&lt;/pre&gt;

Results in...

{{infobox album
| name       = Album name
| image      = Image:Example.jpg
| artist     = Artist name
| released   = Release date
| recorded   = Date recorded
| length     = Album length
| label      = Label
| producer   = Producer
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Asin</title>
    <ns>10</ns>
    <id>2083</id>
      <sha1>cn8r3z0c317mnkeqgf7fiv02z6kz2pv</sha1>
    <revision>
      <id>4048</id>
      <timestamp>2011-09-29T20:41:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;includeonly&gt;[http://www.amazon.com/exec/obidos/redirect?link_code=ur2&amp;tag=wikia-20&amp;camp=1789&amp;creative=9325&amp;path=http%3A%2F%2Fwww.amazon.com%2Fgp%2Fproduct%2F{{{1}}}%2Fsr%3D8-1%2...&quot;</comment>
      <text xml:space="preserve" bytes="420">&lt;includeonly&gt;[http://www.amazon.com/exec/obidos/redirect?link_code=ur2&amp;tag=wikia-20&amp;camp=1789&amp;creative=9325&amp;path=http%3A%2F%2Fwww.amazon.com%2Fgp%2Fproduct%2F{{{1}}}%2Fsr%3D8-1%2Fqid%3D1147400297%2Fref%3Dpd_bbs_1%3F%255Fencoding%3DUTF8 {{{2}}}]{{#ifeq:{{#len:{{{1}}}}}|10||[[Category:Invalid ASIN Parameter]]}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Asin/doc</title>
    <ns>10</ns>
    <id>2084</id>
      <sha1>7ui6qehdtu3x0bx4l6lfdeumfjjhekq</sha1>
    <revision>
      <id>4049</id>
      <timestamp>2011-09-29T20:41:45Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;includeonly&gt;{{ProtectedPage}}{{DISPLAYTITLE:Template:asin}}[[Category:Templates/External Links|Asin]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|Asin]]&lt;/noinclude...&quot;</comment>
      <text xml:space="preserve" bytes="532">&lt;includeonly&gt;{{ProtectedPage}}{{DISPLAYTITLE:Template:asin}}[[Category:Templates/External Links|Asin]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|Asin]]&lt;/noinclude&gt;


'''''Usage:'''''
&lt;pre&gt;{{asin|B000EULJLU|10,000 Days}}&lt;/pre&gt;
where &lt;tt&gt;B000EULJLU&lt;/tt&gt; is the ASIN number and &lt;tt&gt;10,000 Days&lt;/tt&gt; is the text of the link. The ASIN number is a unique number that amazon gives to each item. See the picture below for where to find the ASIN on an [http://www.amazon.com/music Amazon page].

[[Image:Asin.jpg|left|link=]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Bigcat</title>
    <ns>10</ns>
    <id>1902</id>
      <sha1>issa18cltcoitn5ifl5na3n0t4dunrf</sha1>
    <revision>
      <id>3230</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3425">{| style=&quot;width:100%; margin-top:1em; border:1px solid #999; font-size:90%; text-align:center;&quot;
|-
! style=&quot;background-color:#3366CC; color:#FFFFFF; padding:0.2em 0.5em;&quot; | This is a very large category!
|-
! To see more of it, click the links below for specific letters, or click the &quot;Next&quot; (or &quot;Prev&quot;) links.&lt;br /&gt;Also note that subcategories are sorted alongside articles, so '''not all subcategories are visible on the first page'''.
|-
| style=&quot;text-align:center;&quot; |
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}}} *] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=A}} A] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=B}} B] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=C}} C] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=D}} D] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=E}} E] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=F}} F] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=G}} G] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=H}} H] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=I}} I] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=J}} J] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=K}} K] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=L}} L] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=M}} M] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=N}} N] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=O}} O] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=P}} P] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=Q}} Q] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=R}} R] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=S}} S] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=T}} T] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=U}} U] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=V}} V] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=W}} W] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=X}} X] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=Y}} Y] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=Z}} Z]&lt;br /&gt;
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=0}} 0-9] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=a}} a] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=b}} b] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=c}} c] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=d}} d] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=e}} e] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=f}} f] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=g}} g] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=h}} h] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=i}} i] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=j}} j] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=k}} k] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=l}} l] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=m}} m] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=n}} n] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=o}} o] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=p}} p] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=q}} q] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=r}} r] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=s}} s] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=t}} t] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=u}} u] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=v}} v] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=w}} w] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=x}} x] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=y}} y] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=z}} z] - 
[{{fullurl:{{NAMESPACE}}:{{PAGENAME}}|from=~}} ~]
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Bigcat/doc</title>
    <ns>10</ns>
    <id>1906</id>
      <sha1>pq2misz3efxxjz3rlj30f3svgumkqme</sha1>
    <revision>
      <id>3243</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="401">;Description
:This template is used to help navigate large categories (generally those over 200 articles).
;Syntax
:Type &lt;code&gt;{{t|bigcat}}&lt;/code&gt; at the end of the category page.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{bigcat}}&lt;/nowiki&gt;&lt;/code&gt; gives...

{{bigcat}}

&lt;includeonly&gt;[[Category:Category templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Book</title>
    <ns>10</ns>
    <id>1997</id>
      <sha1>k3emrxpnsvx2a1m2jiuqzms8mga5nxv</sha1>
    <revision>
      <id>3755</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1297">{| style=&quot;clear: right; border: solid #aaa 1px; margin: 0 0 1em 1em; font-size: 95%; background: #f9f9f9; color:black; width: 310px; padding: 10px; text-align: left; float: right;&quot;
|- 
| colspan=&quot;2&quot; align=&quot;center&quot; style=&quot;font-size:125%;&quot; bgcolor=#cef2e0 | {{PAGENAME}}
|-
|
|-
{{#if: {{{image|}}} | {{!}} align=center colspan=2 {{!}} [[Image:{{{image}}}|center|284px]] }}
|- style=&quot;vertical-align: top;&quot;
{{#if: {{{author|}}} | {{!}} valign=top {{!}} '''Author''' {{!!}} {{{author}}} }}
|- style=&quot;vertical-align: top;&quot;
{{#if: {{{illustrator|}}} | {{!}} valign=top {{!}} '''Illustrator''' {{!!}} {{{illustrator}}} }}
|- style=&quot;vertical-align: top;&quot;
{{#if: {{{date|}}} | {{!}} '''Publication date''' {{!!}} {{{date}}} }}
|- style=&quot;vertical-align: top;&quot;
{{#if: {{{publisher|}}} | {{!}} '''Published by''' {{!!}} {{{publisher}}} }}
|- style=&quot;vertical-align: top;&quot;
{{#if: {{{isbn|}}} | {{!}} '''ISBN''' {{!!}} {{{isbn}}} }}
|-
| colspan=&quot;2&quot; align=&quot;center&quot; style=&quot;font-size:125%;&quot; bgcolor=#cef2e0 | ''Publication Order''
|- align=center
| valign=top align=center style=&quot;font-size:80%;&quot; width=150 | Preceded by&lt;br&gt;{{{previous}}}
| valign=top align=center style=&quot;font-size:80%;&quot; width=150 | Followed by&lt;br&gt;{{{next}}}
|}&lt;noinclude&gt;
&lt;br clear=&quot;all&quot;&gt;
{{documentation}}
[[Category:Templates|Book]]
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Book/doc</title>
    <ns>10</ns>
    <id>1998</id>
      <sha1>5xcqvqqj34rv6lvjchr6zzdfsx6wcvj</sha1>
    <revision>
      <id>3756</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="758">;Description
:To use this template, enter the following and fill in the appropriate fields. Any field left blank will not show up. Don't forget to include brackets, to make the fields into links.
;Syntax
:Type &lt;code&gt;{{t|book|...}}&lt;/code&gt; somewhere, with parameters as shown below. 
;Sample output
&lt;pre&gt;{{Book
| image   = 
| author   = 
| illustrator = 
| date      = 
| publisher = 
| isbn  = 
| previous =
| next =
}}&lt;/pre&gt;

Results in...

{{Book
| image   = Example.jpg
| author   = Author
| illustrator = Illustrator
| date      = Date
| publisher = Publisher
| isbn  = ISBN
| previous = Previous
| next = Next
}}
&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Box1 start</title>
    <ns>10</ns>
    <id>1620</id>
      <sha1>px41jfgd72f6l6k4b1bptwax5wg87h2</sha1>
    <revision>
      <id>3276</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="212">{|width=&quot;100%&quot; cellpadding=&quot;0px&quot; cellspacing=&quot;0px&quot; 
|- valign=&quot;top&quot;
| style=&quot;width:50%; padding:.5em; border:1px solid #c9c9ff; color:#000; background-color:#f3f3ff;&quot; |&lt;noinclude&gt;
|}
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Box1 start/doc</title>
    <ns>10</ns>
    <id>1923</id>
      <sha1>cez1zboahj3m0n7opsjdtuqj60eolvu</sha1>
    <revision>
      <id>3384</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="527">;Description
:This template starts a blue box, as the first part of a two column box.
;Syntax
:Type &lt;code&gt;{{t|Box1 start}}&lt;/code&gt;, then whatever you would like inside the first box, then &lt;code&gt;{{t|Box2 start}}&lt;/code&gt; and whatever you want in the second box, ended by &lt;code&gt;{{t|Boxes end}}&lt;/code&gt;.
:For example...
&lt;pre&gt;
{{Box1 start}}
Text
{{Box2 start}}
Text
{{Boxes end}}
&lt;/pre&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Box2 start</title>
    <ns>10</ns>
    <id>1621</id>
      <sha1>mkkz7bipu7dimtrj8zrjb07ra1ygzio</sha1>
    <revision>
      <id>3282</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="141">| style=&quot;width:50%; padding:.5em; border:1px solid #b9ffb9; color:#000; background-color:#f3fff3;&quot; |&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Box2 start/doc</title>
    <ns>10</ns>
    <id>1924</id>
      <sha1>m6ss14tgl95zprclw4aso2x34v82ci6</sha1>
    <revision>
      <id>3387</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="530">;Description
:This template starts a purple box, as the second part of a two column box.
;Syntax
:Type &lt;code&gt;{{t|Box1 start}}&lt;/code&gt;, then whatever you would like inside the first box, then &lt;code&gt;{{t|Box2 start}}&lt;/code&gt; and whatever you want in the second box, ended by &lt;code&gt;{{t|Boxes end}}&lt;/code&gt;.
:For example...
&lt;pre&gt;
{{Box1 start}}
Text
{{Box2 start}}
Text
{{Boxes end}}
&lt;/pre&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Boxes end</title>
    <ns>10</ns>
    <id>1622</id>
      <sha1>ecbqhaur9r6m8ddfnwjqztn0uqt0tjy</sha1>
    <revision>
      <id>3285</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="43">|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Boxes end/doc</title>
    <ns>10</ns>
    <id>1925</id>
      <sha1>olivvx1kuq5yotkks4619ef9684khv5</sha1>
    <revision>
      <id>3390</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="518">;Description
:This template end a box, as the last part of a two column box.
;Syntax
:Type &lt;code&gt;{{t|Box1 start}}&lt;/code&gt;, then whatever you would like inside the first box, then &lt;code&gt;{{t|Box2 start}}&lt;/code&gt; and whatever you want in the second box, ended by &lt;code&gt;{{t|Boxes end}}&lt;/code&gt;.
:For example...
&lt;pre&gt;
{{Box1 start}}
Text
{{Box2 start}}
Text
{{Boxes end}}
&lt;/pre&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:CC-BY-SA</title>
    <ns>10</ns>
    <id>1986</id>
      <sha1>n1omy1o7xnz140ji73zg7o0uaa92bqr</sha1>
    <revision>
      <id>3721</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="334">&lt;div class=&quot;boilerplate&quot; id=&quot;cc-by-sa&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file is licensed under the [http://creativecommons.org/licenses/by-sa/3.0/ Creative Commons Attribution-Share Alike License].'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:CC-BY-SA/doc</title>
    <ns>10</ns>
    <id>1987</id>
      <sha1>3y02d98h991ybgu8u6me69fkdvymqo6</sha1>
    <revision>
      <id>3722</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="296">;Description
:This template is used to mark images with the CC-BY-SA license.
;Syntax
:Type &lt;code&gt;{{t|CC-BY-SA}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Category</title>
    <ns>10</ns>
    <id>1855</id>
      <sha1>hu9okeasvb752smv1yslzd3jduxisjx</sha1>
    <revision>
      <id>3227</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="189">To add an article, image, or category to this category, append '''&lt;code&gt;&lt;nowiki&gt;[[&lt;/nowiki&gt;Category:{{PAGENAME}}]]&lt;/code&gt;''' to the end of its page.&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Category/doc</title>
    <ns>10</ns>
    <id>1905</id>
      <sha1>rxbdtbkcvi0859z9k0u3r9e60sdm1br</sha1>
    <revision>
      <id>3240</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="520">;Description
:This template may be placed on any category page, to encourage users to help populate that category. ''(Note, it will not say &lt;nowiki&gt;[[Category:Category]]&lt;/nowiki&gt; there - it will use the local category name.)''
;Syntax
:To use the template, type a short description of the category (unless its name is self-explanatory) followed by &lt;code&gt;{{t|category}}&lt;/code&gt;.

&lt;includeonly&gt;[[Category:Category templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Cc-by-sa-3.0</title>
    <ns>10</ns>
    <id>1879</id>
      <sha1>bxs51qkbfqbqyo1kvg409p0ja6rce0p</sha1>
    <revision>
      <id>3619</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="757">{| class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:2px solid #88A; background:#FFFFCC; color:black;&quot;
|-
| align=&quot;center&quot; |http://images.wikia.com/messaging/images//thumb/7/79/CC_some_rights_reserved.svg/90px-CC_some_rights_reserved.svg.png&lt;br /&gt;http://images.wikia.com/messaging/images//thumb/1/11/Cc-by_new_white.svg/24px-Cc-by_new_white.svg.png http://images.wikia.com/messaging/images//thumb/d/df/Cc-sa_white.svg/24px-Cc-sa_white.svg.png
| '''''This work is licensed under the Creative Commons [http://creativecommons.org/licenses/by-sa/3.0/ &lt;span style=&quot;color:#002bb8;&quot;&gt;Attribution-ShareAlike 3.0&lt;/span&gt;] License.&lt;br /&gt;{{#if:{{{1|}}}|&lt;br /&gt;Attribution: {{{1|}}}}}'''''
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Cc-by-sa-3.0/doc</title>
    <ns>10</ns>
    <id>1954</id>
      <sha1>ra882ibmfshyvsj1bpb3307fu0wbsle</sha1>
    <revision>
      <id>3519</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="452">;Description
:This template is used to mark images with the [http://creativecommons.org/licenses/by-sa/3.0/ CC-BY-SA-3.0] license.
;Syntax
:Type &lt;code&gt;{{t|cc-by-sa-3.0|attribution details}}&lt;/code&gt; on the image information page.
:Replace &quot;&lt;code&gt;attribution details&lt;/code&gt;&quot; with information about the source.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Cite</title>
    <ns>10</ns>
    <id>1908</id>
      <sha1>n5igsb77lfl4lgxydti4kpffnoxag14</sha1>
    <revision>
      <id>3337</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="142">&lt;sup&gt;''&amp;#91;citation&amp;nbsp;needed&amp;#93;''&lt;/sup&gt;&lt;includeonly&gt;[[Category:Citations needed]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Cite/doc</title>
    <ns>10</ns>
    <id>1943</id>
      <sha1>nqdwx6zlv28aogrixi7ipo6bidpp36l</sha1>
    <revision>
      <id>3473</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="443">;Description
:This template is used to mark text as needing sourcing.
;Syntax
:Place &lt;code&gt;{{t|cite}}&lt;/code&gt; after unsourced and/or questionable text so that its implication is self explanatory as to what is lacking citation. If necessary, use the article's talk page to discuss further details.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Clr</title>
    <ns>10</ns>
    <id>1810</id>
      <sha1>o3cyjwxn0og6z9buxsbjoqe9w58x32x</sha1>
    <revision>
      <id>3259</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="93">&lt;div style=&quot;clear:both; margin:0; padding:0;&quot;&gt;&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Clr/doc</title>
    <ns>10</ns>
    <id>1917</id>
      <sha1>d7wd82j8c193kdllb3c1m15f1m4lq6z</sha1>
    <revision>
      <id>3365</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="498">;Description
:This template is a shorthand for &lt;code&gt;&amp;lt;div style=&quot;clear:both;&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;.
:It moves any content following the template below any objects floating to the left and/or right (TOCs, infoboxes, images, etc..).
;Syntax
:Type &lt;code&gt;{{t|clr}}&lt;/code&gt; in an article at the point you want the clear.
;See also
:{{t|clrl}} and {{t|clrr}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Clrl</title>
    <ns>10</ns>
    <id>1811</id>
      <sha1>htzmys0l0no4jz7fymo6gc1uoc02p8r</sha1>
    <revision>
      <id>3262</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="93">&lt;div style=&quot;clear:left; margin:0; padding:0;&quot;&gt;&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Clrl/doc</title>
    <ns>10</ns>
    <id>1918</id>
      <sha1>labgu1k4aenuw0uy82ewnzxmcji1ddo</sha1>
    <revision>
      <id>3368</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="485">;Description
:This template is a shorthand for &lt;code&gt;&amp;lt;div style=&quot;clear:left;&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;.
:It moves any content following the template below any objects floating to the left (TOCs, infoboxes, images, etc..).
;Syntax
:Type &lt;code&gt;{{t|clrl}}&lt;/code&gt; in an article at the point you want the clear.
;See also
:{{t|clr}} and {{t|clrr}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Clrr</title>
    <ns>10</ns>
    <id>1812</id>
      <sha1>h8ja9bj69qkqqyft7cws9jf7athuyms</sha1>
    <revision>
      <id>3265</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="94">&lt;div style=&quot;clear:right; margin:0; padding:0;&quot;&gt;&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Clrr/doc</title>
    <ns>10</ns>
    <id>1919</id>
      <sha1>tm12tlp7rp89br9d2ihhtzwp7ggka2v</sha1>
    <revision>
      <id>3371</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="487">;Description
:This template is a shorthand for &lt;code&gt;&amp;lt;div style=&quot;clear:right;&quot;&gt;&amp;lt;/div&gt;&lt;/code&gt;.
:It moves any content following the template below any objects floating to the right (TOCs, infoboxes, images, etc..).
;Syntax
:Type &lt;code&gt;{{t|clrr}}&lt;/code&gt; in an article at the point you want the clear.
;See also
:{{t|clr}} and {{t|clrl}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Col-2</title>
    <ns>10</ns>
    <id>1805</id>
      <sha1>a1ia7g1mrltk4fmb913ifsw7lgnry8k</sha1>
    <revision>
      <id>3310</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="75">| valign=&quot;top&quot; style=&quot;width:50%;&quot; |&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Col-2/doc</title>
    <ns>10</ns>
    <id>1934</id>
      <sha1>9k86trzjb4sr06e1tkqtntftqse9ded</sha1>
    <revision>
      <id>3427</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="504">;Description
:This template starts a column, as part of a two-column template.
;Syntax
:Type &lt;code&gt;{{t|Col-begin}}&lt;/code&gt;, then whatever you would like inside the first box, then &lt;code&gt;{{t|Col-2}}&lt;/code&gt; and whatever you want in the second box, ended by &lt;code&gt;{{t|Col-end}}&lt;/code&gt;.
:For example...
&lt;pre&gt;
{{Col-begin}}
Text
{{Col-2}}
Text
{{Col-end}}
&lt;/pre&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Col-begin</title>
    <ns>10</ns>
    <id>1806</id>
      <sha1>p01mr7knc65chjgb0vr5ns2vk2whg40</sha1>
    <revision>
      <id>3900</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="179">{| class=&quot;{{{class|}}}&quot; style=&quot;background-color:{{{bgColor|transparent}}}; color:{{{fontColor|inherit}}}; width:{{{width|100%}}};&quot;
|-
|&lt;noinclude&gt;
|}
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Col-begin/doc</title>
    <ns>10</ns>
    <id>1914</id>
      <sha1>9k86trzjb4sr06e1tkqtntftqse9ded</sha1>
    <revision>
      <id>3356</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="504">;Description
:This template starts a column, as part of a two-column template.
;Syntax
:Type &lt;code&gt;{{t|Col-begin}}&lt;/code&gt;, then whatever you would like inside the first box, then &lt;code&gt;{{t|Col-2}}&lt;/code&gt; and whatever you want in the second box, ended by &lt;code&gt;{{t|Col-end}}&lt;/code&gt;.
:For example...
&lt;pre&gt;
{{Col-begin}}
Text
{{Col-2}}
Text
{{Col-end}}
&lt;/pre&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Col-end</title>
    <ns>10</ns>
    <id>1807</id>
      <sha1>kw6nijp2wezrl0ixc3g0cobi6i0424g</sha1>
    <revision>
      <id>3245</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="42">|}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Col-end/doc</title>
    <ns>10</ns>
    <id>1913</id>
      <sha1>lhbt4if9wrq3qtq4p7uja2pc8ov9i9u</sha1>
    <revision>
      <id>3353</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="502">;Description
:This template ends a column, as part of a two-column template.
;Syntax
:Type &lt;code&gt;{{t|Col-begin}}&lt;/code&gt;, then whatever you would like inside the first box, then &lt;code&gt;{{t|Col-2}}&lt;/code&gt; and whatever you want in the second box, ended by &lt;code&gt;{{t|Col-end}}&lt;/code&gt;.
:For example...
&lt;pre&gt;
{{Col-begin}}
Text
{{Col-2}}
Text
{{Col-end}}
&lt;/pre&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Delete</title>
    <ns>10</ns>
    <id>1507</id>
      <sha1>2wb40xvckgnc93kztm0cgguia122kk5</sha1>
    <revision>
      <id>3730</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="635">&lt;div name=&quot;Deletion notice&quot; class=&quot;boilerplate metadata&quot; id=&quot;delete&quot; style=&quot;background-color:#fee; margin:1em; padding:0 10px; border:1px solid #aaa;&quot;&gt;
'''This page is a candidate for deletion.'''

If you disagree with its deletion, please explain why at [[Category talk:Candidates for deletion]] or improve the page and remove the &lt;code&gt;{{t|delete}}&lt;/code&gt; tag.

Remember to check [[Special:Whatlinkshere/{{FULLPAGENAME}}|what links here]] and [{{fullurl:{{FULLPAGENAME}}|action=history}} the page history] before deleting.
&lt;/div&gt;&lt;includeonly&gt;[[Category:Candidates for deletion]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Delete/doc</title>
    <ns>10</ns>
    <id>1897</id>
      <sha1>kit83y87fnnd5jqh7m6xmu2rl7r1nkd</sha1>
    <revision>
      <id>3191</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="347">;Description
:This template is used to mark pages for deletion, categorizing them in [[:Category:Candidates for deletion]].
;Syntax
:Type &lt;code&gt;{{t|delete}}&lt;/code&gt; on the page to be deleted.'''

&lt;includeonly&gt;[[Category:Article management templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Disambig</title>
    <ns>10</ns>
    <id>1818</id>
      <sha1>600jt8jdvls8xx6v2acv6hnpubhoqu0</sha1>
    <revision>
      <id>3115</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="702">&lt;div name=&quot;Disambiguation notice&quot; class=&quot;boilerplate metadata&quot; id=&quot;disambig&quot; style=&quot;background-color: #eef; margin: 0 1em; padding: 0 10px; border: 1px solid #aaa;&quot;&gt;
'''This article is a disambiguation page for {{PAGENAME}}'''

The following is a list of links to pages that might share the same title.&lt;br/&gt;
Please follow one of the disambiguation links below or [[Special:Search|search]] to find the page you were looking for if it is not listed. If an [[Special:Whatlinkshere/{{FULLPAGENAME}}|internal link]] led you here, you may wish to change the link to point directly to the intended article.
&lt;/div&gt;&lt;includeonly&gt;[[Category:Disambiguations]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Disambig/doc</title>
    <ns>10</ns>
    <id>1895</id>
      <sha1>glkbbl6a04fdplxmsz9q0xhsj3403hb</sha1>
    <revision>
      <id>3151</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="457">;Description
:Marks an article as a disambiguation page, adding a banner to the article and categorizing it under [[:Category:Disambiguations]].
:Articles using this template will also appear on [[Special:Disambiguations]].
;Syntax
:Add &lt;code&gt;{{t|disambig}}&lt;/code&gt; at the top of a disambiguation page.

&lt;includeonly&gt;[[Category:Article management templates|Disambiguation]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Documentation</title>
    <ns>10</ns>
    <id>1896</id>
      <sha1>ilegj3gawl8iq597jtk38r5229nyblg</sha1>
    <revision>
      <id>3638</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="732">&lt;noinclude&gt;&lt;div style=&quot;display:none;&quot;&gt;&lt;/noinclude&gt;&lt;div style=&quot;border:1px solid black; margin:1em; margin-top:3em;&quot;&gt;&lt;div style=&quot;background:#ddd; color:#111; padding:1em; margin:0em;&quot;&gt;'''Template documentation''' &lt;span style=&quot;font-size:85%;&quot;&gt;(for the above template, sometimes hidden or invisible)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:1em; padding-bottom:0em; margin:0em;&quot;&gt;{{tocright}}
{{{{PAGENAME}}/doc}}
&lt;/div&gt;&lt;br style=&quot;clear:both;&quot;/&gt;&lt;div style=&quot;background:#ddd; color:#111; padding:0.5em; margin:0em; font-size:85%; text-align:right;&quot;&gt;Visit [[Template:{{PAGENAME}}/doc]] to edit this text! ([[Template:Documentation|How does this work]]?)&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;&lt;/div&gt;
{{documentation}}[[Category:Template documentation| ]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Documentation/doc</title>
    <ns>10</ns>
    <id>1933</id>
      <sha1>nyf942axrg27g49faliy55k7t1y71g9</sha1>
    <revision>
      <id>3636</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1500">;Description
:This template is used to insert descriptions on template pages.
;Syntax
:Type &lt;code&gt;&lt;nowiki&gt;&lt;noinclude&gt;&lt;/nowiki&gt;{{t|documentation}}&lt;nowiki&gt;&lt;/noinclude&gt;&lt;/nowiki&gt;&lt;/code&gt; at the end of the template page.

==General usage==
===On the Template page===
&lt;pre&gt;
Template code&lt;includeonly&gt;Any categories to be inserted into articles by the template&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;
&lt;/pre&gt;

Note that, depending on the template, you may need to add a clear or complete a table/div just before &lt;code&gt;&lt;nowiki&gt;{{documentation}}&lt;/nowiki&gt;&lt;/code&gt; is inserted (within the noinclude tags).

The line break is also useful as it helps prevent the documentation template &quot;running into&quot; previous code.

===On the Template/doc page===
&lt;pre&gt;
;Description
:This template is used to do something.
;Syntax
:Type &lt;code&gt;{{t|templatename}}&lt;/code&gt; somewhere.
;Sample output
:&lt;code&gt;&amp;lt;nowiki&gt;{{templatename|foo}}&amp;lt;/nowiki&gt;&lt;/code&gt; gives...
:{{templatename|foo}}

&lt;includeonly&gt;Any categories for the template itself&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;
&lt;/pre&gt;

Use any or all of the above description/syntax/sample output sections. You may also want to add &quot;see also&quot; or further usage information sections.

Note that the above example also uses the [[Template:T]] and [[Template:T/piece]] templates.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Done</title>
    <ns>10</ns>
    <id>2067</id>
      <sha1>9bcxygvz8ltvmjwftbovdpq7qxidgu6</sha1>
    <revision>
      <id>4009</id>
      <timestamp>2011-09-28T23:55:47Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>IMPORTED FROM LyricWiki</comment>
      <text xml:space="preserve" bytes="88">&lt;onlyinclude&gt;[[Image:Completed.png|16px|Done!]]&lt;/onlyinclude&gt;[[Category:Templates|Done]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Edit</title>
    <ns>10</ns>
    <id>1911</id>
      <sha1>itnxlq5u95v2eydhhldy74kdfl84isz</sha1>
    <revision>
      <id>3347</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="116">&amp;#x5b;[{{fullurl:{{{1|{{FULLPAGENAME}}}}}|action=edit}} {{{2|edit}}}]&amp;#x5d;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Edit/doc</title>
    <ns>10</ns>
    <id>1946</id>
      <sha1>c0wpb9du33rwxbfx43khsg3caaralmx</sha1>
    <revision>
      <id>3482</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="644">;Description
:This template creates a clickable edit link for the given page name.
;Syntax
:Type &lt;code&gt;{{t|edit}}&lt;/code&gt;, &lt;code&gt;{{t|edit|pagename}}&lt;/code&gt; or &lt;code&gt;{{t|edit|pagename|linkname}}&lt;/code&gt;.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{edit}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{edit}}
:&lt;code&gt;&lt;nowiki&gt;{{edit|Wikia Templates}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{edit|Wikia Templates}}
:&lt;code&gt;&lt;nowiki&gt;{{edit|Wikia Templates|edit the main page!}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{edit|Wikia Templates|edit the main page!}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Ep-nav</title>
    <ns>10</ns>
    <id>1999</id>
      <sha1>0649jofl9yfhk5j6yrnv9tf9dwfgmsk</sha1>
    <revision>
      <id>3757</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="386">{| style=&quot;width:65%; margin:20px auto 10px auto; border:1px solid #AAA; background: #f9f9f9; text-align:center;&quot;
|-
| style=&quot;padding:0 5px 0 10px; width:50%;&quot; | '''Previous episode:'''
| style=&quot;padding:0 5px 0 10px; width:50%;&quot; | '''Next episode:'''
|-
| style=&quot;padding:0 5px 0 10px; | {{{prev|}}}
| style=&quot;padding:0 5px 0 10px; | {{{next|}}}
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Ep-nav/doc</title>
    <ns>10</ns>
    <id>2000</id>
      <sha1>evf1qpqaxnlvosuwtpqp9imquxo4383</sha1>
    <revision>
      <id>3758</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="710">;Description
:This templates is used to provide quick, consistent link to the previous and next episodes in a series. 
;Syntax
:Type &lt;code&gt;{{t|ep-nav|&lt;nowiki&gt;prev=&lt;/nowiki&gt;|&lt;nowiki&gt;next=&lt;/nowiki&gt;}}&lt;/code&gt; at the bottom of episode pages, filling in the prev= and next= fields. Don't forget to include brackets, to make the fields into links.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{ep-nav|prev=[[Help:Templates|Link A]] plus text|next=[[Help:Templates|Link C]]}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{ep-nav|prev=[[Help:Templates|Link A]] plus text|next=[[Help:Templates|Link C]]}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Failed</title>
    <ns>10</ns>
    <id>2069</id>
      <sha1>iupcvh3p5nhggrkfizivmaa77bf0nzr</sha1>
    <revision>
      <id>4011</id>
      <timestamp>2011-09-28T23:56:27Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;onlyinclude&gt;[[Image:Failed.png|16px|Fail]]&lt;/onlyinclude&gt;[[Category:Templates|Failed]]&quot;</comment>
      <text xml:space="preserve" bytes="86">&lt;onlyinclude&gt;[[Image:Failed.png|16px|Fail]]&lt;/onlyinclude&gt;[[Category:Templates|Failed]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Fairuse</title>
    <ns>10</ns>
    <id>1500</id>
      <sha1>noev11ypgatftsjjso9y7dqj4sacrjp</sha1>
    <revision>
      <id>3487</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="307">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file  is copyrighted. It will be used in a way that qualifies as fair use under US copyright law.'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Fairuse/doc</title>
    <ns>10</ns>
    <id>1948</id>
      <sha1>c339l756ke5h06078b2haad8d44gbpt</sha1>
    <revision>
      <id>3506</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="281">;Description
:This template is used to mark images as fair use.
;Syntax
:Type &lt;code&gt;{{t|fairuse}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:For/doc</title>
    <ns>10</ns>
    <id>1929</id>
      <sha1>f0tb40kw0wqnb36n1iybk9azlt438h9</sha1>
    <revision>
      <id>3404</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="651">;Description
:This template is used at the top of pages for simple [[Help:Disambiguation|disambiguations]].
;Syntax
:Type &lt;code&gt;{{t|for|something|page name|optional second pagename}}&lt;/code&gt;
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{for|the help pages|Help:Contents|Help:Main Page}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{for|the help pages|Help:Contents|Help:Main Page}}
:&lt;code&gt;&lt;nowiki&gt;{{for|2=Help:Contents}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{for|2=Help:Contents}}
;See also
:[[Wikipedia:Template:For|Template:For]] on Wikipedia.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Forumheader</title>
    <ns>10</ns>
    <id>1467</id>
      <sha1>qjkbs5fw8xma3g8jbfjsfcqpb8wnd9n</sha1>
    <revision>
      <id>3650</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="199">&lt;div class=&quot;forumheader&quot;&gt;'''Forums:''' [[Forum:Index|Index]] &gt; [[Forum:{{{1}}}|{{{1}}}]] &gt; {{PAGENAME}}&lt;/div&gt;&lt;br /&gt;

[[Category:{{{1}}}]]
&lt;noinclude&gt;
[[Category:Forums]]
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Forumheader/Help desk</title>
    <ns>10</ns>
    <id>1464</id>
      <sha1>b9q8l5j5h1n8ewsq41ll2gc4fjxogmo</sha1>
    <revision>
      <id>3644</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="132">{{Forumheader|Help desk}}

&lt;!-- Please put your content under this paragraph.  Be sure to sign your edits with four tildes: ~~~~ --&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Forumheader/Watercooler</title>
    <ns>10</ns>
    <id>1466</id>
      <sha1>kh1p3ufawqag49txrzfsi9eh6azuhwp</sha1>
    <revision>
      <id>3642</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="133">{{Forumheader|Watercooler}}

&lt;!-- Please put your content under this paragraph.  Be sure to sign your edits with four tildes ~~~~ --&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Forumheader/doc</title>
    <ns>10</ns>
    <id>1939</id>
      <sha1>3w7h52tuudx90f1k78r7mqqb1reo3rg</sha1>
    <revision>
      <id>3643</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="514">;Description
:This template is used at the top of certain forum pages. It is used in conjunction with template subpages such as [[Template:Forumheader/Watercooler]], which are involved in preloads and cannot therefore include the standard link to their own documentation. See [[Help:Wiki-style forums]] for more information.
;Syntax
:&lt;code&gt;{{t|Forumheader|Name of forum}}&lt;/code&gt;.

&lt;includeonly&gt;[[Category:General wiki templates]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:From Wikimedia</title>
    <ns>10</ns>
    <id>1787</id>
      <sha1>5fj9mbrnwj9tr0edqijbu1ygqsxju60</sha1>
    <revision>
      <id>3635</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="281">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file was originally uploaded on Wikipedia or another Wikimedia project.'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:From Wikimedia/doc</title>
    <ns>10</ns>
    <id>1950</id>
      <sha1>saqyayikd1h12oj5t6sxlae45x4zu7p</sha1>
    <revision>
      <id>3510</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="372">;Description
:This template is used to mark images as having been uploaded on [[wikipedia:|Wikipedia]] or another [[wikimedia:|Wikimedia]] project.
;Syntax
:Type &lt;code&gt;{{t|From Wikimedia}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:H1Fake</title>
    <ns>10</ns>
    <id>2078</id>
      <sha1>hai0fm3206scuw8uuocu9sw6a963wiu</sha1>
    <revision>
      <id>4032</id>
      <timestamp>2009-09-03T16:38:33Z</timestamp>
      <contributor>
        <username>6 times 9</username>
        <id>0</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:H1Fake]]&quot; ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="230">&lt;includeonly&gt;&lt;div style=&quot;font-size:130%; font-weight:bold; border-bottom:1px solid silver; margin:0.5em 0&quot;&gt;{{{1}}}&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4033</id>
      <timestamp>2011-09-29T17:55:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>1 revision: import WP template from LyricWiki</comment>
      <text xml:space="preserve" bytes="230">&lt;includeonly&gt;&lt;div style=&quot;font-size:130%; font-weight:bold; border-bottom:1px solid silver; margin:0.5em 0&quot;&gt;{{{1}}}&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:H4</title>
    <ns>10</ns>
    <id>2079</id>
      <sha1>ehhap6njz9jd3ut7xu4tge4vc53j5i9</sha1>
    <revision>
      <id>4034</id>
      <timestamp>2009-09-03T16:38:25Z</timestamp>
      <contributor>
        <username>6 times 9</username>
        <id>0</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Template:H4]]&quot; ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="424">&lt;includeonly&gt;&lt;div style=&quot;font-size:115%; font-weight:bold; margin-top:0.5em;&quot;&gt;{{{1}}}&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
This template produces a header similar to MediaWiki's level 4 headers &lt;code&gt;(&lt;nowiki&gt;====Some Text====&lt;/nowiki&gt;)&lt;/code&gt;, but does not create an entry in the Table Of Contents or a section edit link.

'''''Usage:''''' &lt;code&gt;&lt;nowiki&gt;{{H4|Header Title}}&lt;/nowiki&gt; &lt;/code&gt;

[[Category:Templates|H4]]
&lt;noinclude&gt;</text>
    </revision>
    <revision>
      <id>4035</id>
      <timestamp>2011-09-29T17:55:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>1 revision: import WP template from LyricWiki</comment>
      <text xml:space="preserve" bytes="424">&lt;includeonly&gt;&lt;div style=&quot;font-size:115%; font-weight:bold; margin-top:0.5em;&quot;&gt;{{{1}}}&lt;/div&gt;&lt;/includeonly&gt;&lt;noinclude&gt;
This template produces a header similar to MediaWiki's level 4 headers &lt;code&gt;(&lt;nowiki&gt;====Some Text====&lt;/nowiki&gt;)&lt;/code&gt;, but does not create an entry in the Table Of Contents or a section edit link.

'''''Usage:''''' &lt;code&gt;&lt;nowiki&gt;{{H4|Header Title}}&lt;/nowiki&gt; &lt;/code&gt;

[[Category:Templates|H4]]
&lt;noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Incomplete</title>
    <ns>10</ns>
    <id>2068</id>
      <sha1>9cyqyt4nwzixgmxtjk98clyw2hrdizm</sha1>
    <revision>
      <id>4010</id>
      <timestamp>2011-09-28T23:56:10Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="100">&lt;onlyinclude&gt;[[Image:Incomplete.png|16px|Incomplete]]&lt;/onlyinclude&gt;[[Category:Templates|Incomplete]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox</title>
    <ns>10</ns>
    <id>1862</id>
      <sha1>s3rnjo00kpykkxwjdyis3etxfv9povy</sha1>
    <revision>
      <id>3324</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1632">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px; background-color:#FFF;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#FFFFFF; font-size:120%; padding:1em;&quot; | {{{Box title|No Title}}}
{{#if: {{{image|}}}|
{{!}}-
{{!}} colspan=&quot;2&quot; style=&quot;text-align:center;&quot; {{!}} [[{{{image}}}|{{{imagewidth|250}}}px]]&lt;br/&gt;''{{{caption| }}}''
|
}}
|-
| style=&quot;width:30%;&quot; |
'''{{{Row 1 title|No Title}}}'''
| style=&quot;width:70%;&quot; |
{{{Row 1 info|No information}}}
{{#if: {{{Row 2 title|}}}|
{{!}}-
{{!}}
'''{{{Row 2 title}}}'''
{{!}}
{{{Row 2 info|No information}}}
{{#if: {{{Row 3 title|}}}|
{{!}}-
{{!}}
'''{{{Row 3 title}}}'''
{{!}}
{{{Row 3 info|No information}}}
{{#if: {{{Row 4 title|}}}|
{{!}}-
{{!}}
'''{{{Row 4 title}}}'''
{{!}}
{{{Row 4 info|No information}}}
{{#if: {{{Row 5 title|}}}|
{{!}}-
{{!}}
'''{{{Row 5 title}}}'''
{{!}}
{{{Row 5 info|No information}}}
{{#if: {{{Row 6 title|}}}|
{{!}}-
{{!}}
'''{{{Row 6 title}}}'''
{{!}}
{{{Row 6 info|No information}}}
{{#if: {{{Row 7 title|}}}|
{{!}}-
{{!}}
'''{{{Row 7 title}}}'''
{{!}}
{{{Row 7 info|No information}}}
{{#if: {{{Row 8 title|}}}|
{{!}}-
{{!}}
'''{{{Row 8 title}}}'''
{{!}}
{{{Row 8 info|No information}}}
{{#if: {{{Row 9 title|}}}|
{{!}}-
{{!}}
'''{{{Row 9 title}}}'''
{{!}}
{{{Row 9 info|No information}}}
{{#if: {{{Row 10 title|}}}|
{{!}}-
{{!}}
'''{{{Row 10 title}}}'''
{{!}}
{{{Row 10 info|No information}}}
{{#if: {{{Row 11 title|}}}|
{{!}}-
{{!}} colspan=&quot;2&quot; style=&quot;text-align:center; background:#AAAAAA;&quot; {{!}}
'''Too many parameters'''
|
}}
|
}}
|
}}
|
}}
|
}}
|
}}
|
}}
|
}}
|
}}
|
}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot;/&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox album</title>
    <ns>10</ns>
    <id>2024</id>
      <sha1>qa668i83tes4turqpebfufl9s2r0kao</sha1>
    <revision>
      <id>3569</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="873">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|- 
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; | {{{name|{{PAGENAME}}}}}
|- style=&quot;text-align:center;&quot;
{{#if: {{{image|}}} | {{!}} colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; {{!}} [[{{{image}}}|{{{imagewidth|250}}}px]] }}
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;font-size:120%; background-color:#3366CC; color:#ffffff;&quot; | ''{{{artist}}}''
|-
{{#if: {{{released|}}} | {{!}} '''Released''' {{!!}} {{{released}}} }}
|-
{{#if: {{{recorded|}}} | {{!}} '''Recorded''' {{!!}} {{{recorded}}} }}
|-
{{#if: {{{length|}}} | {{!}} '''Length''' {{!!}} {{{length}}} }}
|-
{{#if: {{{label|}}} | {{!}} '''Label''' {{!!}} {{{label}}} }}
|-
{{#if: {{{producer|}}} | {{!}} '''Produced by''' {{!!}} {{{producer}}} }}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox album/doc</title>
    <ns>10</ns>
    <id>1969</id>
      <sha1>6ib8wqpptyq6cixm7wtqivp0o4uwmqq</sha1>
    <revision>
      <id>3883</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1001">;Description
:To use this template, enter the following and fill in the appropriate fields. Any field left blank will not show up. Don't forget to include brackets, to make the fields into links.
;Syntax
:Type &lt;code&gt;{{t|infobox album|...}}&lt;/code&gt; somewhere, with parameters as shown below. 
;Sample output

&lt;pre&gt;{{infobox album
| name       = Album name [defaults to pagename]
| image      = File:Example.jpg
| imagewidth = [defaults to 250]
| artist     = Artist name
| released   = Release date
| recorded   = Date recorded
| length     = Album length
| label      = Label
| producer   = Producer
}}&lt;/pre&gt;

Results in...

{{infobox album
| name       = Album name
| image      = Image:Example.jpg
| artist     = Artist name
| released   = Release date
| recorded   = Date recorded
| length     = Album length
| label      = Label
| producer   = Producer
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox character</title>
    <ns>10</ns>
    <id>1957</id>
      <sha1>oe5e1rrp5w8k59pxqte80hc7so532vy</sha1>
    <revision>
      <id>3881</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="794">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; | {{{name|{{PAGENAME}}}}}
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; | [[{{{image|File:Placeholder person.png}}}|{{{imagewidth|250}}}px]]&lt;br/&gt;''{{{caption| }}}''
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff;&quot; | Vital statistics
|-
| style=&quot;width:30%;&quot; | '''Title'''
| style=&quot;width:70%;&quot; | {{{title}}}
|-
| '''Gender'''
| {{{gender}}}
|-
| '''Race'''
| {{{race}}}
|-
| '''Faction'''
| {{{faction}}}
|-
| '''Health'''
| {{{health}}}
|-
| '''Level'''
| {{{level}}}
|-
| '''Status'''
| {{{status}}}
|-
| '''Location'''
| {{{location}}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox character/doc</title>
    <ns>10</ns>
    <id>1964</id>
      <sha1>8pium9fzlff1p8zxoyama8nfenqzj2a</sha1>
    <revision>
      <id>3882</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="955">;Description
:This template is used to create a character infobox.
;Syntax
:Type &lt;code&gt;{{t|infobox character|...}}&lt;/code&gt; somewhere, with parameters as shown below.
;Sample output

&lt;pre&gt;{{infobox character
| name       = Bob [defaults to pagename]
| image      = File:Example.jpg
| imagewidth = [defaults to 250]
| caption    = Bob the Flower
| title      = The Flower
| gender     = Male
| race       = Flowerkind
| faction    = Flora
| health     = 9001
| level      = 5
| status     = Flowering
| location   = The Garden
}}&lt;/pre&gt;

Results in...

{{infobox character
| name     = Bob
| image    = Image:Example.jpg
| caption  = Bob the Flower
| title    = The Flower
| gender   = Male
| race     = Flowerkind
| faction  = Flora
| health   = 9001
| level    = 5
| status   = Flowering
| location = The Garden
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox episode</title>
    <ns>10</ns>
    <id>1963</id>
      <sha1>j1ua6695ru8bh64w0xlzni0zsvhzw2q</sha1>
    <revision>
      <id>3574</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="949">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|- 
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; | ''{{{name}}}''
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; | ''Season {{{season}}}, Episode {{{number}}}''
|- style=&quot;text-align:center;&quot;
{{#if: {{{image|}}} | {{!}} colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; {{!}} [[{{{image}}}|{{{imagewidth|250}}}px]] }}
|-
{{#if: {{{airdate|}}} | {{!}} '''Air date''' {{!!}} {{{airdate}}} }}
|-
{{#if: {{{writer|}}} | {{!}} '''Written by''' {{!!}} {{{writer}}} }}
|-
{{#if: {{{director|}}} | {{!}} '''Directed by''' {{!!}} {{{director}}} }}
|- 
| colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:0.25em; text-align:center;&quot; | Episode guide
|- style=&quot;text-align:center; font-size:95%;&quot; valign=&quot;top&quot;
| '''Previous'''&lt;br /&gt;{{{previous}}}
| '''Next'''&lt;br /&gt;{{{next}}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox episode/doc</title>
    <ns>10</ns>
    <id>1970</id>
      <sha1>fwp8yv5av6ai1qnaf5e5nt5qize6w79</sha1>
    <revision>
      <id>3884</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1006">;Description
:To use this template, enter the following and fill in the appropriate fields. Most fields left blank will not show up. Don't forget to include brackets, to make the fields into links.
;Syntax
:Type &lt;code&gt;{{t|infobox episode|...}}&lt;/code&gt; somewhere, with parameters as shown below. 
;Sample output

&lt;pre&gt;{{infobox episode
| name       = Five Alive
| season     = Five
| number     = Five
| image      = File:Example.jpg
| imagewidth = [defaults to 250] 
| airdate    = Unaired
| writer     = Mr. Writer
| director   = Ms. Director
| previous   = Episode A
| next       = Episode C
}}&lt;/pre&gt;

Results in...

{{infobox episode
| name       = Five Alive
| season     = Five
| number     = Five
| image      = File:Example.jpg
| airdate    = Unaired
| writer     = Mr. Writer
| director   = Ms. Director
| previous   = Episode A
| next       = Episode C
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox event</title>
    <ns>10</ns>
    <id>1958</id>
      <sha1>f867bhb6f2r96h3mptb9k0az8smx2pk</sha1>
    <revision>
      <id>3885</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="642">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; | {{{name|{{PAGENAME}}}}}
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; | [[{{{image|File:Placeholder other.png}}}|{{{imagewidth|250}}}px]]&lt;br/&gt;''{{{caption| }}}''
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff;&quot; | Vital statistics
|-
| style=&quot;width:30%;&quot; | '''Participants'''
| style=&quot;width:70%;&quot; | {{{participants}}}
|-
| '''Date'''
| {{{date}}}
|-
| '''Location'''
| {{{location}}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox event/doc</title>
    <ns>10</ns>
    <id>1965</id>
      <sha1>k6yim3zzime24xf7fj0qxnkwuhym1x5</sha1>
    <revision>
      <id>3892</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="831">;Description
:This template is used to create an event infobox.
;Syntax
:Type &lt;code&gt;{{t|infobox event|...}}&lt;/code&gt; somewhere, with parameters as shown below.
;Sample output

&lt;pre&gt;{{infobox event
| name         = Bob's Birthday Party [defaults to pagename]
| image        = File:Example.jpg
| imagewidth   = [defaults to 250]
| caption      = Bob the Flower
| participants = Bob's friends
| date         = Bob's birthday
| location     = Bob's house
}}&lt;/pre&gt;

Results in...

{{infobox event
| name         = Bob's Birthday Party
| image        = File:Example.jpg
| caption      = Bob the Flower
| participants = Bob's friends
| date         = Bob's birthday
| location     = Bob's house
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox item</title>
    <ns>10</ns>
    <id>1959</id>
      <sha1>qdyipw8r0v6p05vjpt4lsieevjsjdef</sha1>
    <revision>
      <id>3886</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="699">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; | {{{name|{{PAGENAME}}}}}
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; | [[{{{image|File:Placeholder item.png}}}|{{{imagewidth|250}}}px]]&lt;br/&gt;''{{{caption| }}}''
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff;&quot; | Vital statistics
|-
| style=&quot;width:30%;&quot; | '''Type'''
| style=&quot;width:70%;&quot; | {{{type}}}
|-
| '''Effects'''
| {{{effects}}}
|-
| '''Source'''
| {{{source}}}
|-
| '''Cost to buy'''
| {{{buy}}}
|-
| '''Cost to sell'''
| {{{sell}}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox item/doc</title>
    <ns>10</ns>
    <id>1966</id>
      <sha1>jcl6ag9rfhlq1mlb0evjpqooxft75my</sha1>
    <revision>
      <id>3887</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="855">;Description
:This template is used to create an item infobox.
;Syntax
:Type &lt;code&gt;{{t|infobox item|...}}&lt;/code&gt; somewhere, with parameters as shown below.
;Sample output

&lt;pre&gt;{{infobox item
| name       = Bob's Petal [defaults to pagename]
| image      = File:Example.jpg
| imagewidth = [defaults to 250]
| caption    = Bob the Flower
| type       = Petal
| effects    = Adds +1 prettiness
| source     = Earth
| buy        = 1 Seed
| sell       = 5 Pollen
}}&lt;/pre&gt;

Results in...

{{infobox item
| name       = Bob's Petal
| image      = File:Example.jpg
| caption    = Bob the Flower
| type       = Petal
| effects    = Adds +1 prettiness
| source     = Earth
| buy        = 1 Seed
| sell       = 5 Pollen
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox location</title>
    <ns>10</ns>
    <id>1960</id>
      <sha1>fiu6vksis6nvrvr23ihfqkj5bw6cy6u</sha1>
    <revision>
      <id>3888</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="806">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; |  {{{name|{{PAGENAME}}}}}
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; | [[{{{image|File:Placeholder location.png}}}|{{{imagewidth|250}}}px]]&lt;br/&gt;''{{{caption| }}}''
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; | [[{{{map}}}|{{{mapwidth|250}}}px]]&lt;br/&gt;''{{{mapcaption| }}}''
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff;&quot; | Vital statistics
|-
| style=&quot;width:30%;&quot; | '''Type'''
| style=&quot;width:70%;&quot; | {{{type}}}
|-
| '''Level'''
| {{{level}}}
|-
| '''Location'''
| {{{location}}}
|-
| '''Inhabitants'''
| {{{inhabitants}}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox location/doc</title>
    <ns>10</ns>
    <id>1967</id>
      <sha1>saqa4061rtrz4k39dnxxullpjrqvlh3</sha1>
    <revision>
      <id>3889</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="980">;Description
:This template is used to create a location infobox.
;Syntax
:Type &lt;code&gt;{{t|infobox location|...}}&lt;/code&gt; somewhere, with parameters as shown below.
;Sample output

&lt;pre&gt;{{infobox location
| name        = Land of Bob [defaults to pagename]
| image       = File:Example.jpg
| imagewidth  = [defaults to 250]
| caption     = Bob the Flower
| map         = File:Example.jpg
| mapwidth    = [defaults to 250]
| mapcaption  = Land of Bob
| type        = Garden
| level       = 10-20
| location    = Earth
| inhabitants = Flowerfolk
}}&lt;/pre&gt;

Results in...

{{infobox location
| name        = Land of Bob
| image       = File:Example.jpg
| caption     = Bob the Flower
| map         = File:Example.jpg
| mapcaption  = Bob the Flower
| type        = Garden
| level       = 10-20
| location    = Earth
| inhabitants = Flowerfolk
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox quest</title>
    <ns>10</ns>
    <id>1961</id>
      <sha1>iv2bysle0etkgtx38mtxeksc3l5bjyx</sha1>
    <revision>
      <id>3890</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="931">{| class=&quot;infobox&quot; style=&quot;font-size:89%; width:300px;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff; font-size:120%; padding:1em;&quot; |  {{{name|{{PAGENAME}}}}}
|- style=&quot;text-align:center;&quot;
| colspan=&quot;2&quot; style=&quot;padding:0.5em;&quot; | [[{{{image|File:Placeholder item.png}}}|{{{imagewidth|250}}}px]]&lt;br/&gt;''{{{caption| }}}''
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff;&quot; | Vital statistics
|-
| style=&quot;width:50%;&quot; | '''Start'''
| style=&quot;width:50%;&quot; | {{{start}}}
|-
| '''End'''
| {{{end}}}
|-
| '''Prerequisites'''
| {{{prereqs}}}
|-
| '''Level'''
| {{{level}}}
|-
| '''Location'''
| {{{location}}}
|-
| '''Rewards'''
| {{{rewards}}}
|-
! colspan=&quot;2&quot; style=&quot;background-color:#3366CC; color:#ffffff;&quot; | Progression
|- style=&quot;text-align:center&quot;
| '''Previous'''
| '''Next'''
|- style=&quot;text-align:center&quot;
| {{{previous}}}
| {{{next}}}
|}&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox quest/doc</title>
    <ns>10</ns>
    <id>1968</id>
      <sha1>qx2dceduouj1av5ntvojwwbngh56xef</sha1>
    <revision>
      <id>3891</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1006">;Description
:This template is used to create a quest infobox.
;Syntax
:Type &lt;code&gt;{{t|infobox quest|...}}&lt;/code&gt; somewhere, with parameters as shown below.
;Sample output

&lt;pre&gt;{{infobox quest
| name       = Land of Bob [defaults to pagename]
| image      = File:Example.jpg
| imagewidth = [defaults to 250]
| caption    = Bob the Flower
| start      = Quest A
| end        = Quest Z
| prereqs    = Quest 1
| level      = Level 10-20
| location   = Land of Bob
| rewards    = Bob's Petal
| previous   = Quest J
| next       = Quest K
}}&lt;/pre&gt;

Results in...

{{infobox quest
| name       = Land of Bob
| image      = File:Example.jpg
| caption    = Bob the Flower
| start      = Quest A
| end        = Quest Z
| prereqs    = Quest 1
| level      = Level 10-20
| location   = Land of Bob
| rewards    = Bob's Petal
| previous   = Quest J
| next       = Quest K
}}

&lt;includeonly&gt;[[Category:Infobox templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox/doc</title>
    <ns>10</ns>
    <id>1938</id>
      <sha1>13x3wz80dnzbacuryxhppngsen8atrb</sha1>
    <revision>
      <id>3459</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="6525">==Description==
*This template produces a [[Help:Infobox|infobox]]-style template.
*You may want to copy and modify this to create a specific infobox (e.g. character infobox).
*This template requires [[Help:Parser functions|parser functions]] to be enabled (Wikia default: on).

==Syntax==
&lt;pre&gt;
{{infobox
|Box title    = 
|image        = Image:Example.jpg
|imagewidth   = [defaults to 250]
|caption      = Bob the Flower
|Row 1 title  =
|Row 1 info   =
|Row 2 title  =
|Row 2 info   =
|Row 3 title  =
|Row 3 info   =
|Row 4 title  =
|Row 4 info   =
|Row 5 title  =
|Row 5 info   =
|Row 6 title  =
|Row 6 info   =
|Row 7 title  =
|Row 7 info   =
|Row 8 title  =
|Row 8 info   =
|Row 9 title  =
|Row 9 info   =
|Row 10 title =
|Row 10 info  =
}}
&lt;/pre&gt;

===Notes===
* Keeping the '''Box Title''' empty will result in displaying '''No title'''
* If you don't want to display image, just keep '''Image file Name''' and '''Image Size''' empty.
* Keeping the '''Row 1 title''' empty will result in displaying '''No title'''.
* Keeping the '''Row (any row) info''' empty will result in displaying '''No information'''.
* Keeping the '''Row (any below row 1) title''' empty will result in that row and the rest of the rows below it will not be displayed.
* Max row for information: 10 rows.

==Sample output==
{{Infobox
|Box title    = Info Title
|image        = Image:Example.jpg
|imagewidth   = 120
|caption      = A flower
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
|Row 4 title  = Title row 4
|Row 4 info   = Info row 4
|Row 5 title  = Title row 5
|Row 5 info   = Info row 5
|Row 6 title  = Title row 6
|Row 6 info   = Info row 6
|Row 7 title  = Title row 7
|Row 7 info   = Info row 7
|Row 8 title  = Title row 8
|Row 8 info   = Info row 8
|Row 9 title  = Title row 9
|Row 9 info   = Info row 9
|Row 10 title = Title row 10
|Row 10 info  = Info row 10
}}
Complete Infobox:&lt;br /&gt;
&lt;code&gt;
'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''image        = Image:Example.jpg&lt;br /&gt;
'''|'''imagewidth   = 120&lt;br /&gt;
'''|'''caption      = A flower&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''|'''Row 4 title  = Title row 4&lt;br /&gt;
'''|'''Row 4 info   = Info row 4&lt;br /&gt;
'''|'''Row 5 title  = Title row 5&lt;br /&gt;
'''|'''Row 5 info   = Info row 5&lt;br /&gt;
'''|'''Row 6 title  = Title row 6&lt;br /&gt;
'''|'''Row 6 info   = Info row 6&lt;br /&gt;
'''|'''Row 7 title  = Title row 7&lt;br /&gt;
'''|'''Row 7 info   = Info row 7&lt;br /&gt;
'''|'''Row 8 title  = Title row 8&lt;br /&gt;
'''|'''Row 8 info   = Info row 8&lt;br /&gt;
'''|'''Row 9 title  = Title row 9&lt;br /&gt;
'''|'''Row 9 info   = Info row 9&lt;br /&gt;
'''|'''Row 10 title = Title row 10&lt;br /&gt;
'''|'''Row 10 info  = Info row 10&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''
&lt;/code&gt;

&lt;br style=&quot;clear:both; margin-bottom:3em;&quot;/&gt;

{{Infobox
|Box title    = Info Title
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
|Row 4 title  = Title row 4
|Row 4 info   = Info row 4
|Row 5 title  = Title row 5
|Row 5 info   = Info row 5
|Row 6 title  = Title row 6
|Row 6 info   = Info row 6
|Row 7 title  = Title row 7
|Row 7 info   = Info row 7
|Row 8 title  = Title row 8
|Row 8 info   = Info row 8
|Row 9 title  = Title row 9
|Row 9 info   = Info row 9
|Row 10 title = Title row 10
|Row 10 info  = Info row 10
}}
Infobox '''Image''' omitted :&lt;br /&gt;
&lt;code&gt;
'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''|'''Row 4 title  = Title row 4&lt;br /&gt;
'''|'''Row 4 info   = Info row 4&lt;br /&gt;
'''|'''Row 5 title  = Title row 5&lt;br /&gt;
'''|'''Row 5 info   = Info row 5&lt;br /&gt;
'''|'''Row 6 title  = Title row 6&lt;br /&gt;
'''|'''Row 6 info   = Info row 6&lt;br /&gt;
'''|'''Row 7 title  = Title row 7&lt;br /&gt;
'''|'''Row 7 info   = Info row 7&lt;br /&gt;
'''|'''Row 8 title  = Title row 8&lt;br /&gt;
'''|'''Row 8 info   = Info row 8&lt;br /&gt;
'''|'''Row 9 title  = Title row 9&lt;br /&gt;
'''|'''Row 9 info   = Info row 9&lt;br /&gt;
'''|'''Row 10 title = Title row 10&lt;br /&gt;
'''|'''Row 10 info  = Info row 10&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''
&lt;/code&gt;

&lt;br style=&quot;clear:both; margin-bottom:3em;&quot;/&gt;

{{Infobox
|Box title    = Info Title
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
}}
Infobox '''Image''' omitted and displaying only 3 rows of information:&lt;br /&gt;
&lt;code&gt;
'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''
&lt;/code&gt;

&lt;br style=&quot;clear:both; margin-bottom:3em;&quot;/&gt;

{{Infobox
|Box title    = Info Title
|Row 1 title  = Title row 1
|Row 1 info   = Info row 1
|Row 2 title  = Title row 2
|Row 2 info   = Info row 2
|Row 3 title  = Title row 3
|Row 3 info   = Info row 3
|Row 4 info   = Info row 4
|Row 5 title  = Title row 5
|Row 5 info   = Info row 5
|Row 6 title  = Title row 6
|Row 6 info   = Info row 6
}}
Infobox '''Image''' and '''title row 4''' omited:&lt;br /&gt;
Result: Row 4, 5, and 6 will not be displayed.&lt;br /&gt;
&lt;code&gt;
'''&lt;nowiki&gt;{{&lt;/nowiki&gt;Infobox'''&lt;br /&gt;
'''|'''Box title    = Info Title&lt;br /&gt;
'''|'''Row 1 title  = Title row 1&lt;br /&gt;
'''|'''Row 1 info   = Info row 1&lt;br /&gt;
'''|'''Row 2 title  = Title row 2&lt;br /&gt;
'''|'''Row 2 info   = Info row 2&lt;br /&gt;
'''|'''Row 3 title  = Title row 3&lt;br /&gt;
'''|'''Row 3 info   = Info row 3&lt;br /&gt;
'''|'''Row 4 info   = Info row 4&lt;br /&gt;
'''|'''Row 5 title  = Title row 5&lt;br /&gt;
'''|'''Row 5 info   = Info row 5&lt;br /&gt;
'''|'''Row 6 title  = Title row 6&lt;br /&gt;
'''|'''Row 6 info   = Info row 6&lt;br /&gt;
'''&lt;nowiki&gt;}}&lt;/nowiki&gt;'''
&lt;/code&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]][[Category:Infobox templates| ]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Main</title>
    <ns>10</ns>
    <id>1820</id>
      <sha1>e5ls99grbmf7nstk9lzjqfnryrbnhf2</sha1>
    <revision>
      <id>3302</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="71">:''Main article: [[{{{1}}}]]''&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Main/doc</title>
    <ns>10</ns>
    <id>1930</id>
      <sha1>mgou0bvbzc0501rfrlriw926dv19ich</sha1>
    <revision>
      <id>3409</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="405">;Description
:This template is used at the start of a section to link to the main article on that subject. 
;Syntax
:Type &lt;code&gt;{{t|main|page name}}&lt;/code&gt;
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{main|Help:Contents}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{main|Help:Contents}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:MenuRail</title>
    <ns>10</ns>
    <id>2119</id>
      <sha1>f2h3bv8zj8yrwpnqnwgtahwc7buejza</sha1>
    <revision>
      <id>4157</id>
      <timestamp>2011-10-12T21:53:14Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved to MW message so that it will be on every wiki (and is i18nable)</comment>
      <text xml:space="preserve" bytes="897">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:key.png|right|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4158</id>
      <timestamp>2011-10-12T21:55:34Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>moved [[MediaWiki:MenuRail]] to [[MediaWiki:ApiMenuRail]]: it's going to be global so should mention what it's used for</comment>
      <text xml:space="preserve" bytes="897">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:key.png|right|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4161</id>
      <timestamp>2011-10-12T22:08:52Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>moved [[MediaWiki:ApiMenuRail]] to [[Template:MenuRail]]: Message didn't make sense... back to being wiki-specific... makes sense to be a template again.</comment>
      <text xml:space="preserve" bytes="897">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:key.png|right|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4272</id>
      <timestamp>2011-11-02T23:40:39Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="882">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &gt;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:key.png|right|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &gt;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &gt;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4330</id>
      <timestamp>2011-11-12T01:47:00Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="894">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|100px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &gt;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:key.png|right|90px|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &gt;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right|bottom|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &gt;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>5173</id>
      <timestamp>2013-09-18T20:29:25Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="915">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|100px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &gt;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;display:none&quot;&gt;[[File:key.png|right|90px|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &gt;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right|bottom|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &gt;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>5184</id>
      <timestamp>2013-09-20T16:03:32Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="470">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;p&gt;[[File:Wikiaapi-2_01.png|link=Quick Start]]&lt;/p&gt;
&lt;p&gt;[[File:Wikiaapi-2_03.png|link=Documentation]]&lt;/p&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>5185</id>
      <timestamp>2013-09-20T16:03:42Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="470">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;p&gt;[[File:Wikiaapi-2_03.png|link=Quick Start]]&lt;/p&gt;
&lt;p&gt;[[File:Wikiaapi-2_01.png|link=Documentation]]&lt;/p&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>5186</id>
      <timestamp>2013-09-20T16:05:39Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="489">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px; margin: -5px 18px;&quot;&gt;

&lt;p&gt;[[File:Wikiaapi-2_03.png|link=Quick Start]]&lt;/p&gt;
&lt;p&gt;[[File:Wikiaapi-2_01.png|link=Documentation]]&lt;/p&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>5187</id>
      <timestamp>2013-09-20T16:08:58Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="514">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px; margin: -5px 18px;&quot;&gt;

&lt;p style=&quot;margin-top: 8px;&quot;&gt;[[File:Wikiaapi-2_03.png|link=Quick Start]]&lt;/p&gt;
&lt;p&gt;[[File:Wikiaapi-2_01.png|link=Documentation]]&lt;/p&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>5188</id>
      <timestamp>2013-09-20T16:09:37Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="514">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail&quot; style=&quot;padding:0px; margin: -5px 18px;&quot;&gt;

&lt;p&gt;[[File:Wikiaapi-2_03.png|link=Quick Start]]&lt;/p&gt;
&lt;p style=&quot;margin-top: 8px;&quot;&gt;[[File:Wikiaapi-2_01.png|link=Documentation]]&lt;/p&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;&lt;noinclude&gt;
&lt;big&gt;'''Documentation'''&lt;/big&gt;&lt;br/&gt;
This is a custom right-rail-like menu very specific to the API wiki.

Please do not rename this template since it is also used by [[Special:ApiGate]] as the right-rail for those special page subpages. 
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:MenuRail2</title>
    <ns>10</ns>
    <id>2133</id>
      <sha1>g1kb2tt9ho8fhoq3fwn6mej1l7l3iol</sha1>
    <revision>
      <id>4233</id>
      <timestamp>2011-10-28T05:52:30Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt; &lt;div class=&quot;module&quot;&gt; &lt;h1&gt;Toolbox&lt;/h1&gt; &lt;HR size=&quot;1&quot; color=&quot;black&quot;&gt; *[[Quick Start|Quick Start]] *[[link=S...&quot;</comment>
      <text xml:space="preserve" bytes="258">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;h1&gt;Toolbox&lt;/h1&gt;
&lt;HR size=&quot;1&quot; color=&quot;black&quot;&gt;
*[[Quick Start|Quick Start]]
*[[link=Special:ApiGate|API Key Request]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4240</id>
      <timestamp>2011-10-28T06:08:49Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="253">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;h1&gt;Toolbox&lt;/h1&gt;
&lt;hr noshade size=&quot;1&quot;;&gt;
*[[Quick Start|Quick Start]]
*[[link=Special:ApiGate|API Key Request]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4241</id>
      <timestamp>2011-10-28T06:13:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="235">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;h1&gt;Toolbox&lt;/h1&gt;
&lt;hr&gt;
*[[Quick Start|Quick Start]]
*[[link=Special:ApiGate|API Key Request]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4250</id>
      <timestamp>2011-10-28T06:29:34Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="246">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;h1&gt;Toolbox&lt;/h1&gt;
&lt;hr&gt;
*[[Quick Start|Quick Start]]
*[[link=Special:ApiGate|API Key Request]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;

__NOTOC__</text>
    </revision>
    <revision>
      <id>4255</id>
      <timestamp>2011-10-28T06:43:18Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="235">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;h5&gt;Toolbox&lt;/h5&gt;
&lt;hr&gt;
*[[Quick Start|Quick Start]]
*[[link=Special:ApiGate|API Key Request]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4257</id>
      <timestamp>2011-10-28T06:50:41Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="237">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;div&gt;Toolbox&lt;/div&gt;
&lt;hr&gt;
*[[Quick Start|Quick Start]]
*[[link=Special:ApiGate|API Key Request]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4264</id>
      <timestamp>2011-10-31T23:00:43Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>fix link location for getting an API key</comment>
      <text xml:space="preserve" bytes="240">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;div&gt;Toolbox&lt;/div&gt;
&lt;hr&gt;
*[[Quick Start|Quick Start]]
*[[Special:ApiGate/register|Get an API Key]]
*[[Documentation|Documentation]]

&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4265</id>
      <timestamp>2011-11-02T22:13:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="234">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;div&gt;Toolbox&lt;/div&gt;
*[[Quick Start|Quick Start]]
*[[Special:ApiGate/register|Get an API Key]]
*[[Documentation|Documentation]]
&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4276</id>
      <timestamp>2011-11-03T00:03:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="241">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;div&gt;&lt;b&gt;Toolbox&lt;/b&gt;&lt;/div&gt;
*[[Quick Start|Quick Start]]
*[[Special:ApiGate/register|Get an API Key]]
*[[Documentation|Documentation]]
&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>5159</id>
      <timestamp>2013-09-18T20:15:23Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="241">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;div&gt;&lt;b&gt;Toolbox&lt;/b&gt;&lt;/div&gt;
*[[Quick Start|Quick Start]]
*[[Documentation|Documentation]]
*[http://www.wikia.com/api/v1/ API Explorer]
&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>5171</id>
      <timestamp>2013-09-18T20:26:19Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="301">&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail WikiaApiRail2&quot; style=&quot;padding:0px;&quot;&gt;
&lt;div class=&quot;module&quot;&gt;
&lt;div&gt;&lt;b&gt;Toolbox&lt;/b&gt;&lt;/div&gt;
*[[Quick Start|Quick Start]]
*[[Documentation|Content API - Documentation]]
*[[Legacy API|MediaWiki API - Documentation]]
*[http://www.wikia.com/api/v1/ API Explorer]
&lt;/div&gt;
&lt;/div&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Msg</title>
    <ns>10</ns>
    <id>2066</id>
      <sha1>a17yte2nlvu9wpjuqav783rl8k6q15h</sha1>
    <revision>
      <id>4008</id>
      <timestamp>2011-09-28T23:53:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>imported Msg template from [[w:c:lyrics]]</comment>
      <text xml:space="preserve" bytes="269">&lt;div style='width:100%;text-align:center'&gt;&lt;div style='width:70%;background-color:#E0E4F0;padding:0.3em 0.7em;margin:0 auto;'&gt;{{{1}}}&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;
This template is a quick way to place generic messages on pages.
[[Category:Templates|{{PAGENAME}}]]
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Navbox</title>
    <ns>10</ns>
    <id>1907</id>
      <sha1>tsoqn5n1z78sv0c715ghxwenmilqbbm</sha1>
    <revision>
      <id>3335</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="292">{| style=&quot;width:100%; margin-top:1em; border:1px solid #999; font-size:90%; text-align:center;&quot;
|-
! style=&quot;background-color:#3366CC; color:#FFFFFF; padding:0.2em 0.5em;&quot; nowrap=&quot;nowrap&quot; | {{{header}}}
|-
| style=&quot;padding:0.2em 0.5em;&quot; | {{{body}}}
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Navbox/doc</title>
    <ns>10</ns>
    <id>1942</id>
      <sha1>tu4ixu1p30ry5i79izpbbmj276uj92j</sha1>
    <revision>
      <id>3470</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="569">;Description
:This template is used to create a basic [[Help:Navbox|navbox]].
;Syntax
:Type &lt;code&gt;{{t|navbox|...}}&lt;/code&gt; somewhere, with parameters as shown below.
;Sample output

&lt;pre&gt;{{navbox
|header=Land of Bob
|body=This &lt;nowiki&gt;[[place]]&lt;/nowiki&gt; and that &lt;nowiki&gt;[[place]]&lt;/nowiki&gt;.
}}&lt;/pre&gt;

Results in...

{{navbox
|header=Land of Bob
|body=This &lt;nowiki&gt;[[place]]&lt;/nowiki&gt; and that &lt;nowiki&gt;[[place]]&lt;/nowiki&gt;.
}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Newpages</title>
    <ns>10</ns>
    <id>1991</id>
      <sha1>lfywr2c8fbvb7a83jmum3w5yaqwy4og</sha1>
    <revision>
      <id>3808</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="195">&lt;div style=&quot;float:right; clear:right; margin:12px 5px&quot;&gt;&lt;big&gt;'''New pages'''&lt;/big&gt;&lt;widget style=&quot;width:305px&quot;&gt;NewPages&lt;/widget&gt;__NOTOC__&lt;/div&gt;&lt;noinclude&gt;[[Category:Templates|Newpages]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:No</title>
    <ns>10</ns>
    <id>2150</id>
      <sha1>f490ikj01ramiqee4hfmjbhihco0kqr</sha1>
    <revision>
      <id>4354</id>
      <timestamp>2011-11-22T22:41:39Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;No&quot;</comment>
      <text xml:space="preserve" bytes="2">No</text>
    </revision>
    <revision>
      <id>4366</id>
      <timestamp>2011-11-22T23:44:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="24">&lt;div class='no'&gt;No&lt;/div&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:No license</title>
    <ns>10</ns>
    <id>1637</id>
      <sha1>42l3d3ggd47lgkzdq3122rvcpu9jur2</sha1>
    <revision>
      <id>3504</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="265">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file does not have information on its copyright status.'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:No license/doc</title>
    <ns>10</ns>
    <id>1956</id>
      <sha1>qoc0qrmvrle75jsd3qtqsu26vzi9fzt</sha1>
    <revision>
      <id>3523</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="298">;Description
:This template is used to mark images as missing copyright info.
;Syntax
:Type &lt;code&gt;{{t|no license}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Other free</title>
    <ns>10</ns>
    <id>1786</id>
      <sha1>lncfro9oqpuyemr7vp7rjzb09a000u2</sha1>
    <revision>
      <id>3633</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="248">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file is licensed under a free license.'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Other free/doc</title>
    <ns>10</ns>
    <id>1951</id>
      <sha1>arhh8wckyznxvgbrndo9l607uxnbo4w</sha1>
    <revision>
      <id>3513</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="329">;Description
:This template is used to mark images with a free license not covered by other image templates.
;Syntax
:Type &lt;code&gt;{{t|Other free}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:PD</title>
    <ns>10</ns>
    <id>1492</id>
      <sha1>ticbbi0deizsrk81hzs81fd4ctr18nr</sha1>
    <revision>
      <id>3502</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="238">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file is in the public domain'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:PD/doc</title>
    <ns>10</ns>
    <id>1955</id>
      <sha1>7vt7amlicj3bb0dvk0lyygrr62h0xgz</sha1>
    <revision>
      <id>3521</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="294">;Description
:This template is used to mark images as being in the public domain.
;Syntax
:Type &lt;code&gt;{{t|PD}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Partially</title>
    <ns>10</ns>
    <id>2166</id>
      <sha1>kopigzd0tcbc9rfnrlplmaizxdtevx5</sha1>
    <revision>
      <id>4431</id>
      <timestamp>2011-12-07T10:10:02Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;div class='partially'&gt;Partially&lt;/div&gt;&lt;noinclude&gt;  TODO: Use the &quot;done&quot; checkmark from LyricWiki? (it is already on the wiki... used on [[LyricWiki API]])  &lt;/noinclude&gt;&quot;</comment>
      <text xml:space="preserve" bytes="168">&lt;div class='partially'&gt;Partially&lt;/div&gt;&lt;noinclude&gt;

TODO: Use the &quot;done&quot; checkmark from LyricWiki? (it is already on the wiki... used on [[LyricWiki API]])

&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4441</id>
      <timestamp>2011-12-07T11:03:05Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>changed part of speech</comment>
      <text xml:space="preserve" bytes="166">&lt;div class='partially'&gt;Partial&lt;/div&gt;&lt;noinclude&gt;

TODO: Use the &quot;done&quot; checkmark from LyricWiki? (it is already on the wiki... used on [[LyricWiki API]])

&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Performer</title>
    <ns>10</ns>
    <id>2002</id>
      <sha1>fp2ruu5278sww3sbzgnddd6jy63mvvy</sha1>
    <revision>
      <id>3760</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="265">&lt;div style=&quot;width:300px; float:right; clear:right; border:1px solid #aaa; margin:0 0 1em 1em; padding:4px 4px 4px 10px; background:#f9f9f9; color:black;&quot;&gt;
'''Played by:'''&lt;br/&gt;
:'''{{{1}}}'''
&lt;/div&gt;&lt;noinclude&gt;&lt;br style=&quot;clear:both;&quot; /&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Performer/doc</title>
    <ns>10</ns>
    <id>2003</id>
      <sha1>bi2ohppommr9m7k8ra0fme2lz8uv2fw</sha1>
    <revision>
      <id>3761</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="552">;Description
:This template is used to create an small [[Help:Infobox|infobox]] to show who performs a certain character.
;Syntax
:Type &lt;code&gt;{{t|performer|Performer}}&lt;/code&gt; at the top of an article. The name is not automatically linked in case extra information is wanted.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{performer|[[Help:Templates|Bob]]}}&lt;/nowiki&gt;&lt;/code&gt; gives...

{{performer|[[Help:Templates|Bob]]}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Permission</title>
    <ns>10</ns>
    <id>1785</id>
      <sha1>hobwg0zsg058v9lld5z37jkbhbtxehy</sha1>
    <revision>
      <id>3634</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="285">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file is copyrighted. The copyright holder has given permission for its use.'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Permission/doc</title>
    <ns>10</ns>
    <id>1952</id>
      <sha1>ndppynkkz20d1ykhmy4xxq7hohlkagy</sha1>
    <revision>
      <id>3515</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="352">;Description
:This template is used to mark images as being copyrighted, but the copyright holder has given permission for its use.
;Syntax
:Type &lt;code&gt;{{t|permission}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:ProtectedPage</title>
    <ns>10</ns>
    <id>2085</id>
      <sha1>7hq9im3zv3myqzd7xguv3cpkq6uxqpg</sha1>
    <revision>
      <id>4050</id>
      <timestamp>2011-09-29T20:44:07Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;table cellspacing=&quot;5&quot; style=&quot;clear:both; text-align:center; width:100%; background-color:#FBFBEA; border:3px solid #C00;&quot;&gt;&lt;tr&gt;&lt;td style=&quot;width:72px; vertical-align=center;&quot;&gt;[[Im...&quot;</comment>
      <text xml:space="preserve" bytes="744">&lt;table cellspacing=&quot;5&quot; style=&quot;clear:both; text-align:center; width:100%; background-color:#FBFBEA; border:3px solid #C00;&quot;&gt;&lt;tr&gt;&lt;td style=&quot;width:72px; vertical-align=center;&quot;&gt;[[Image:Padlock.png|54px]]&lt;/td&gt;&lt;td&gt;This page has been protected to prevent vandalism and/or spam.  Other than minor syntax, spelling and grammar problems, this page should not be edited without discussion.

''If changes need to be made to this page, leave a message on the [[{{TALKPAGENAME}}|talk page]].''

([{{fullurl:Special:Log|type=protect&amp;page={{FULLPAGENAMEE}}}} protection log])&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;includeonly&gt;[[Category:Protected|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Templates|ProtectedPage]][[Category:Templates/Flagging|ProtectedPage]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Reflist</title>
    <ns>10</ns>
    <id>1910</id>
      <sha1>6m0rg3p111zxterblctj58gbxsddenp</sha1>
    <revision>
      <id>3341</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="337">&lt;div class=&quot;references-small&quot; {{#if: {{{colwidth|}}}| style=&quot;-moz-column-width:{{{colwidth}}}; -webkit-column-width:{{{colwidth}}}; column-width:{{{colwidth}}};&quot; | {{#if: {{{1|}}}| style=&quot;-moz-column-count:{{{1}}}; -webkit-column-count:{{{1}}}; column-count:{{{1}}} }};&quot; |}}&gt;
&lt;references /&gt;&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Reflist/doc</title>
    <ns>10</ns>
    <id>1945</id>
      <sha1>twfal5yeulzac2v1kpwy85495sj0ws4</sha1>
    <revision>
      <id>3649</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1693">==Description==
Use this template to create a reference list in small font for an article.  Note that there is no consensus that small font size should always be used for all references; when normal-sized font is more appropriate on an article, use &lt;code&gt;&lt;nowiki&gt;&lt;references /&gt;&lt;/nowiki&gt;&lt;/code&gt; instead.&lt;ref&gt;I am a reference&lt;/ref&gt;

==Syntax==
Type &lt;code&gt;{{t|reflist|...}}&lt;/code&gt; where you would normally type &lt;code&gt;&lt;nowiki&gt;&lt;references/&gt;&lt;/nowiki&gt;&lt;/code&gt;. If used with no parameters, it will produce a reference list with a single column.

=== Multiple columns ===
Using &lt;code&gt;&lt;nowiki&gt;{{reflist|2}}&lt;/nowiki&gt;&lt;/code&gt; will create a two-column reference list, and &lt;code&gt;&lt;nowiki&gt;{{reflist|3}}&lt;/nowiki&gt;&lt;/code&gt; will create a three-column list.  Three-column lists are inaccessible to users with smaller/laptop monitors and should be avoided.

Using &lt;code&gt;&lt;nowiki&gt;{{reflist|colwidth=30em}}&lt;/nowiki&gt;&lt;/code&gt; will allow the browser to automatically choose the number of columns based on the width of the web browser.  Choose a column width that's appropriate for the average width of the references on the page.

Note: multiple columns currently render properly only in Mozilla Firefox and other Gecko-based browsers and Safari 3, though the feature is included in CSS3 so it should work for a larger number of browsers in the future.

==Sample output==
&lt;code&gt;&lt;nowiki&gt;{{reflist}}&lt;/nowiki&gt;&lt;/code&gt; gives...

{{reflist}}

==CSS used==
&lt;pre&gt;
.references-small { font-size: 90%; }
&lt;/pre&gt;

==See also==
*[[wikipedia:Template:Reflist|Template:Reflist]] on Wikipedia.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Sandbox</title>
    <ns>10</ns>
    <id>1684</id>
      <sha1>cy6njdt015l321a2491q77ys45ttqwi</sha1>
    <revision>
      <id>3268</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="877">&lt;div style=&quot;border:2px dotted darkgray; margin-top:0.5em; margin-bottom:1em; padding:0 0.5em;&quot;&gt;
Welcome to the '''{{SITENAME}} sandbox'''!&lt;br /&gt;
This page exists so that you can practice editing or formatting (see [[Help:Editing]]) without changing any serious content.  Feel free to try wiki editing out here first.&lt;br /&gt;
There is a [[Help:Tutorial 1|tutorial]] on the Central (coordinating) Wikia that will step you through more of the things you can do.  Wiki allow for rather complicated formatting.  It can look overwhelming when you begin, but don't let it worry you.  Just start with the basics... enter some text, and learn the other pieces as you go.  Your content contributions are welcome and important.  The wiki is a collaborative effort and others can help with formatting and other improvements.&lt;br /&gt;
Best wishes!
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4943</id>
      <timestamp>2012-11-07T11:52:40Z</timestamp>
      <contributor>
        <ip>197.123.153.6</ip>
      </contributor>
      <text xml:space="preserve" bytes="2014">{| class=&quot;wikitable&quot;
|-
! Rank
! Metropolitan Area
! Population &lt;br /&gt;(2010 Census)
! Counties
|-
|1
|[[Birmingham-Hoover Metropolitan Area|Birmingham-Hoover]]
|align=center  | 1,128,047
|[[Bibb County, Alabama|Bibb]], [[Blount County, Alabama|Blount]], [[Chilton County, Alabama|Chilton]], [[Jefferson County, Alabama|Jefferson]], [[St. Clair County, Alabama|St. Clair]], [[Shelby County, Alabama|Shelby]], [[Walker County, Alabama|Walker]]
|-
|2
|[[Huntsville Metropolitan Area|Huntsville]]
|align=center  | 417,593
|[[Limestone County, Alabama|Limestone]], [[Madison County, Alabama|Madison]]
|-
|3
|[[Mobile metropolitan area|Mobile]]
|align=center  | 412,992
|[[Mobile County, Alabama|Mobile]]
|-
|4
|[[Montgomery Metropolitan Area|Montgomery]]
|align=center  | 374,536
|[[Autauga County, Alabama|Autauga]], [[Elmore County, Alabama|Elmore]], [[Lowndes County, Alabama|Lowndes]], [[Montgomery County, Alabama|Montgomery]]
|-
|5
|[[Tuscaloosa metropolitan area|Tuscaloosa]]
|align=center  | 219,461
|[[Greene County, Alabama|Greene]], [[Hale County, Alabama|Hale]], [[Tuscaloosa County, Alabama|Tuscaloosa]]
|-
|6
|[[Decatur Metropolitan Area|Decatur]]
|align=center  | 153,829
|[[Lawrence County, Alabama|Lawrence]], [[Morgan County, Alabama|Morgan]]
|-
|7
|[[Florence-Muscle Shoals Metropolitan Area|Florence-Muscle Shoals]]
|align=center  | 147,137
|[[Colbert County, Alabama|Colbert]], [[Lauderdale County, Alabama|Lauderdale]]
|-
|8
|[[Dothan metropolitan area|Dothan]]
|align=center  | 145,639
|[[Geneva County, Alabama|Geneva]], [[Henry County, Alabama|Henry]], [[Houston County, Alabama|Houston]]
|-
|9
|[[Auburn Metropolitan Area|Auburn-Opelika]]
|align=center  | 140,247
|[[Lee County, Alabama|Lee]]
|-
|10
|[[Anniston-Oxford Metropolitan Area|Anniston-Oxford]]
|align=center  | 112,249
|[[Calhoun County, Alabama|Calhoun]]
|-
|11
|[[Gadsden Metropolitan Statistical Area|Gadsden]]
|align=center  | 104,430
|[[Etowah County, Alabama|Etowah]]
|-
|
|align=right  | Total
|align=center  | 3,362,483
|
|}</text>
    </revision>
  </page>
  <page>
    <title>Template:Sandbox/doc</title>
    <ns>10</ns>
    <id>1920</id>
      <sha1>ff3wkds2ajjo9he4a450eb5zs65t2px</sha1>
    <revision>
      <id>3375</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="396">;Description
:This template is placed at the top of [[Help:Sandbox|sandbox]] pages.
:By using a template, it becomes easy to fix if users make a mistake while playing in the sandbox.
;Syntax
:Type &lt;code&gt;{{t|sandbox}}&lt;/code&gt; at the top of a sandbox.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Self</title>
    <ns>10</ns>
    <id>1788</id>
      <sha1>0wg4x2fx3zo96zqsn5b60yty1md633y</sha1>
    <revision>
      <id>3497</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="258">&lt;div class=&quot;boilerplate&quot; id=&quot;c-fairuse&quot; style=&quot;width:90%; margin:0 auto; padding:10px; border:1px solid #A8ACA8; background:#FFFFCC; color:#000;&quot;&gt;
'''''This file was uploaded by the photographer or author.'''''
&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Self/doc</title>
    <ns>10</ns>
    <id>1953</id>
      <sha1>56xwldid082y7fcwsxqh2d518q547ju</sha1>
    <revision>
      <id>3517</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="320">;Description
:This template is used to mark images as having been uploaded by the photographer or author.
;Syntax
:Type &lt;code&gt;{{t|self}}&lt;/code&gt; on the image information page.

&lt;includeonly&gt;[[Category:Image wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Sign</title>
    <ns>10</ns>
    <id>2004</id>
      <sha1>41ud23coxw769uh16c1295176lmte6s</sha1>
    <revision>
      <id>3803</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="600">&lt;small&gt;—This unsigned comment was made by [[User:{{{1}}}|{{{1}}}]] ([[User talk:{{{1}}}|talk]] • [[Special:Contributions/{{{1}}}|contribs]]) {{{2|}}}. Please sign talk pages and forum posts with four tildes: &lt;nowiki&gt;~~~~&lt;/nowiki&gt;. [[Special:userlogin|Log in]] to keep track of your comments and maintain your identity on the wiki.&lt;/small&gt;&lt;noinclude&gt;&lt;br&gt;
'''Usage:''' (replace highlighted items)

 &lt;nowiki&gt;{{subst:sign|&lt;/nowiki&gt;&lt;font color=&quot;blue&quot;&gt;username or IP&lt;/font&gt;&lt;nowiki&gt;|&lt;/nowiki&gt;&lt;font color=&quot;blue&quot;&gt;date&lt;/font&gt;&lt;nowiki&gt;}}&lt;/nowiki&gt;&lt;/noinclude&gt;&lt;noinclude&gt;[[Category:Templates|Sign]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Speedydelete</title>
    <ns>10</ns>
    <id>1881</id>
    <redirect title="Template:Delete" />
      <sha1>2iaip0k2kcll5ahaerjw4w6esz93tva</sha1>
    <revision>
      <id>3814</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="29">#REDIRECT [[Template:Delete]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Spoiler</title>
    <ns>10</ns>
    <id>2005</id>
      <sha1>te36re35qsnvmzyvwcnywv128pm128n</sha1>
    <revision>
      <id>3763</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="256">{| style=&quot;text-align:center; background:#D3E1F2; color:#000; border:1px solid #AAA; margin-bottom:10px;&quot; cellpadding=8
|-
| '''Spoiler warning!'''&lt;br/&gt;This article contains plot details about an upcoming episode.
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Spoiler/doc</title>
    <ns>10</ns>
    <id>2006</id>
      <sha1>2nlp9g5eof2kkjdycvsnedl6zdkxqq9</sha1>
    <revision>
      <id>3764</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="427">;Description
:This template is used to mark a page as having major spoilers. This should only be used on a wiki if most users wish to see it.
;Syntax
:Type &lt;code&gt;{{t|spoiler}}&lt;/code&gt; somewhere.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{spoiler}}&lt;/nowiki&gt;&lt;/code&gt; gives...

{{spoiler}}

&lt;includeonly&gt;[[Category:Article management templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Stub</title>
    <ns>10</ns>
    <id>1775</id>
      <sha1>qd181f2fh4mj2rwlyn6qhamoldna6k7</sha1>
    <revision>
      <id>3128</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="293">:&lt;div class=&quot;notice metadata plainlinks&quot; id=&quot;stub&quot;&gt;''This article is a [[:Category:Article stubs|stub]]. You can help {{SITENAME}} by  [{{fullurl:{{FULLPAGENAME}}|action=edit}} expanding it].''&lt;/div&gt;&lt;includeonly&gt;[[Category:Article stubs]]&lt;/includeonly&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Stub/doc</title>
    <ns>10</ns>
    <id>1898</id>
      <sha1>l4phzf7rk6e7s90sjysrx5j4izd305c</sha1>
    <revision>
      <id>3198</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="363">;Description
:This template will categorize articles that include it into [[:Category:Article stubs]], and mark it with a stub template.
;Syntax
:Type &lt;code&gt;{{t|stub}}&lt;/code&gt; at the start or end of an article.

&lt;includeonly&gt;[[Category:Article management templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:T</title>
    <ns>10</ns>
    <id>1808</id>
      <sha1>d49se9v498od26tkx7br49dfrf6ywnj</sha1>
    <revision>
      <id>3179</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="579">&lt;nowiki&gt;{{&lt;/nowiki&gt;[[Template:{{{1}}}|{{{1}}}]]{{t/piece|{{{2|---}}}}}{{t/piece|{{{3|---}}}}}{{t/piece|{{{4|---}}}}}{{t/piece|{{{5|---}}}}}{{t/piece|{{{6|---}}}}}{{t/piece|{{{7|---}}}}}{{t/piece|{{{8|---}}}}}{{t/piece|{{{9|---}}}}}{{t/piece|{{{10|---}}}}}{{t/piece|{{{11|---}}}}}{{t/piece|{{{12|---}}}}}{{t/piece|{{{13|---}}}}}{{t/piece|{{{14|---}}}}}{{t/piece|{{{15|---}}}}}{{t/piece|{{{16|---}}}}}{{t/piece|{{{17|---}}}}}{{t/piece|{{{18|---}}}}}{{t/piece|{{{19|---}}}}}{{t/piece|{{{20|---}}}}}{{t/piece|{{{21|---}}}}}&lt;nowiki&gt;}}&lt;/nowiki&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:T/doc</title>
    <ns>10</ns>
    <id>1936</id>
      <sha1>trznb5zu0qkahiej544uc26um3271t0</sha1>
    <revision>
      <id>3439</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="656">;Description
:A template link with a variable number of example parameters (0-20), which can be used to show example inputs.
:Utilises [[Template:T/piece]].
;Syntax
:{{t|t|parameter1|parameter2|parameter3|parameter4|...|parameter20}}
;Sample code
:&lt;code&gt;&lt;nowiki&gt;{{t|welcome}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{t|welcome}}
:&lt;code&gt;&lt;nowiki&gt;{{t|welcome|Item1|Item2|Item3|Item4|Item5|...}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{t|welcome|Item1|Item2|Item3|Item4|Item5|...}}
;See also
:[[w:c:wow:Template:T|Template:T]] on WoWWiki

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:T/piece</title>
    <ns>10</ns>
    <id>1809</id>
      <sha1>0nlvv42vk9pm1aj0vzrprgsdclrzhsu</sha1>
    <revision>
      <id>3181</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="120">{{#ifeq: {{{1|---}}}|---||&amp;#124;&lt;font color=&quot;gray&quot;&gt;''&amp;lt;{{{1}}}&amp;gt;''&lt;/font&gt;}}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:T/piece/doc</title>
    <ns>10</ns>
    <id>1937</id>
      <sha1>sqg7b26j4fufgsrttf95v2mnueva1ch</sha1>
    <revision>
      <id>3444</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="307">;Description
:Parameter piece for {{t|t}}, controls styling/showing of parameter fragments.
;See also
:[[w:c:wow:Template:T/piece|Template:T/piece]] on WoWWiki

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:TODO</title>
    <ns>10</ns>
    <id>2049</id>
      <sha1>boipmr9fuahcqz65hdfhla0onlss9er</sha1>
    <revision>
      <id>3923</id>
      <timestamp>2011-09-13T22:46:53Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>simple formatting plus a categorization</comment>
      <text xml:space="preserve" bytes="63">'''TODO: {{{1}}}'''&lt;includeonly&gt;[[Category:TODO]]&lt;/includeonly&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Talk</title>
    <ns>10</ns>
    <id>2007</id>
      <sha1>fyp9nufr15kyw6tr9vxh2vc7by6e183</sha1>
    <revision>
      <id>3765</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="433">&lt;div style=&quot;text-align: center; margin: 0 10%; padding-bottom: 10px;&quot;&gt;
{| style=&quot;background: #D3E1F2; border: 1px solid #aaa; margin: 0 auto;&quot; cellpadding=8
|-
| This discussion is listed as an [[:Category:Active Talk Pages|Active Talk Page]].&lt;br&gt;Please remove this template when the question has been answered.
|}&lt;/div&gt;

&lt;includeonly&gt;
[[Category:Active Talk Pages| ]]
&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Templates|Talk]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Talkcreate</title>
    <ns>10</ns>
    <id>1912</id>
      <sha1>fe3gaw3jsl6t5mducpeh422ps5nle2h</sha1>
    <revision>
      <id>3349</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="209">&lt;span style=&quot;font-weight:bold; font-size:120%; border-bottom:1px dotted;&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|action=edit&amp;section=new}} {{{1|Start a new discussion!}}}]&lt;/span&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Talkcreate/doc</title>
    <ns>10</ns>
    <id>1947</id>
      <sha1>r8hlk5ompxtfy33ij7qf6ht0gy28vy7</sha1>
    <revision>
      <id>3484</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="633">;Description
:This template is used to create a link to start a new discussion. It is especially useful in areas that newbies commonly frequent.
;Syntax
:Type &lt;code&gt;{{t|talkcreate}}&lt;/code&gt; wherever you wish the link to appear. You can add an optional second parameter to change the link text.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{talkcreate}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{talkcreate}}
:&lt;code&gt;&lt;nowiki&gt;{{talkcreate|Spout your views!}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{talkcreate|Spout your views!}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Talkheader</title>
    <ns>10</ns>
    <id>1909</id>
      <sha1>fx3v3qvotgcizjrx2yhpe0qkzpm57xo</sha1>
    <revision>
      <id>3339</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="975">{| style=&quot;width:80%; margin:0 auto 1em auto; border: 1px solid #aaaaaa; background-color:#f9f9f9; color:#000;&quot; align=&quot;center&quot; cellpadding=&quot;4&quot;
|-
! colspan=&quot;2&quot; style=&quot;text-align:center; font-size:120%; background-color:#3366CC; color:#ffffff;&quot; |
{{#ifeq:{{NAMESPACE}}|User talk|
This is [[{{SUBJECTPAGENAME}}|{{PAGENAME}}]]'s talk page, where you can leave messages and comments for {{PAGENAME}}. 
|
This is the talk page for discussing {{{1|improvements to the [[:{{SUBJECTPAGENAME}}]] article}}}.
}}
|-
| 
* '''[[Help:Signature|Please sign and date your posts]]''' by typing four tildes  (&lt;tt&gt;&lt;nowiki&gt;~~~~&lt;/nowiki&gt;&lt;/tt&gt;).
* '''Put new text under old text.''' [{{fullurl:{{TALKPAGENAMEE}}|action=edit&amp;section=new}} Click here to start a new topic].
* If you're new to the wiki, please take a look at the '''[[Help:Talk page|talk page help]]'''.
| class=&quot;title&quot; style=&quot;text-align:left;&quot; |
*Be polite
*Assume good faith
*Be welcoming
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Talkheader/doc</title>
    <ns>10</ns>
    <id>1944</id>
      <sha1>ouo3449m5lrjl5g5zvlh37w90ik1pcv</sha1>
    <revision>
      <id>3475</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="449">;Description
:This template is used at the top of popular talk pages to aid new users and to ensure that topics don't go too far off-topic.
;Syntax
:Type &lt;code&gt;{{t|talkheader}}&lt;/code&gt; at the very top of a talk page.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{talkheader}}&lt;/nowiki&gt;&lt;/code&gt; gives...

{{talkheader}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Templatecategory</title>
    <ns>10</ns>
    <id>1803</id>
      <sha1>er86wj0fizrd9pa29wwukyld8nm7ody</sha1>
    <revision>
      <id>3637</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="1017">==Using this category==
To put a template in '''Category:{{PAGENAME}}''':

* Use &lt;code&gt;&lt;nowiki&gt;&lt;includeonly&gt;[[Category:&lt;/nowiki&gt;{{PAGENAME}}&lt;nowiki&gt;|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;/nowiki&gt;&lt;/code&gt; on the documentation page (see [[Template:Documentation]] for more info). The &quot;&amp;lt;includeonly&amp;gt;&quot; tags are necessary to prevent categorizing all pages using the template (and the documentation page) in the template category! Please also note the &lt;tt style=&quot;border-bottom: 1px dotted; cursor: help;&quot; title=&quot;Makes it sort on the actual template name rather than 'T' as in 'Template:'.&quot;&gt;&lt;nowiki&gt;|{{PAGENAME}}&lt;/nowiki&gt;&lt;/tt&gt;.
* If your template is meant to be '''used in-line''', try and make sure that there are as few line feeds (breaks, whitespace, etc.) as possible.
* Remember that a template can be put in multiple categories if it belongs to them all!
* Or, if this is not quite the right category, go back to [[:Category:Templates]] and try to find a better suited subcategory.&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Templatecategory/doc</title>
    <ns>10</ns>
    <id>1903</id>
      <sha1>ibslfy3ls6zwp457l5eq79mroljy43u</sha1>
    <revision>
      <id>3233</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="353">;Description
:This template is used in subcategories of [[:Category:Templates]].
;Syntax
:To use the template, type a short description of the template category followed by &lt;code&gt;{{t|templatecategory}}&lt;/code&gt;.

&lt;includeonly&gt;[[Category:Category templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tocright</title>
    <ns>10</ns>
    <id>1860</id>
      <sha1>5kzj5sbeg732yvt806r9aetctcvs8qk</sha1>
    <revision>
      <id>3183</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="192">&lt;div style=&quot;float:right; clear:{{{clear|right}}}; margin-bottom:.5em; padding:.5em 0 .8em 1.4em; background:transparent; max-width:20em;&quot;&gt;__TOC__&lt;/div&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Tocright/doc</title>
    <ns>10</ns>
    <id>1931</id>
      <sha1>qtkn2hau54lnqg3ypdbwr7q7o882qhn</sha1>
    <revision>
      <id>3411</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="368">;Description
:This template will float the article's table of contents to the right. It will also force a ToC when/where it would not normally be found.
:Use it only when needed.
;Syntax
:Type &lt;code&gt;{{t|tocright}}&lt;/code&gt;

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Unknown</title>
    <ns>10</ns>
    <id>2151</id>
      <sha1>aphl6pusqgmv2qcu14b5erpjl2g0t5p</sha1>
    <revision>
      <id>4355</id>
      <timestamp>2011-11-22T22:41:44Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;?&quot;</comment>
      <text xml:space="preserve" bytes="1">?</text>
    </revision>
    <revision>
      <id>4367</id>
      <timestamp>2011-11-22T23:44:21Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="28">&lt;div class='unknown'&gt;?&lt;/div&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Unsigned</title>
    <ns>10</ns>
    <id>1799</id>
      <sha1>0wkd6h5fd8hhnteenehgmogrmlms108</sha1>
    <revision>
      <id>3287</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="204">&lt;small&gt;—Preceding unsigned comment added by [[User:{{{1}}}|{{{1}}}]] ([[User talk:{{{1}}}|talk]] • [[Special:Contributions/{{{1}}}|contribs]]) {{{2|}}}&lt;/small&gt;&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Unsigned/doc</title>
    <ns>10</ns>
    <id>1926</id>
      <sha1>ehvz599fu2uyovrtcibsesuf7mdt092</sha1>
    <revision>
      <id>3847</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="621">;Description
:This is for use when users do not sign their posts in talk pages.
;Syntax
:Type &lt;code&gt;{{t|unsigned|username}}&lt;/code&gt; where &quot;username&quot; is the name of the user who did not sign their post. You can also add the current date via a third parameter.
;Sample output
:&lt;code&gt;&lt;nowiki&gt;{{unsigned|Default}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{unsigned|Default}}
:&lt;code&gt;&lt;nowiki&gt;{{unsigned|Default|~~~~~}}&lt;/nowiki&gt;&lt;/code&gt; gives...
:{{unsigned|Default|12:01, 01 January 2010 (UTC)}}

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:User</title>
    <ns>10</ns>
    <id>2091</id>
      <sha1>q2k47bl2taeqz0497g8u04bvbpd7kry</sha1>
    <revision>
      <id>4066</id>
      <timestamp>2011-09-29T21:48:50Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Imported from LyricWiki</comment>
      <text xml:space="preserve" bytes="265">[[User:{{{1}}}|{{{1}}}]] ([[User talk:{{{1}}}|talk]] &lt;small&gt;•&lt;/small&gt; [[Special:Contributions/{{{1}}}|contribs]])&lt;noinclude&gt;

==Example==
; Code
&lt;code&gt;&lt;nowiki&gt;{{User|Sean Colombo}}&lt;/nowiki&gt;&lt;/code&gt;
; Result
{{User|Sean Colombo}}
[[category:Templates]]
&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:WelcIP</title>
    <ns>10</ns>
    <id>1872</id>
    <redirect title="Template:WelcomeIP" />
      <sha1>jdf8fyi8esz7mlezn4hot6ofi4ftyzi</sha1>
    <revision>
      <id>2964</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="88">#REDIRECT [[template:welcomeIP]]

&lt;!-- this shorter version is for people in a hurry --&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Welcome</title>
    <ns>10</ns>
    <id>1673</id>
      <sha1>okqgnr0b2pdi45g9432fey5pcgxd0rj</sha1>
    <revision>
      <id>3645</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="970">&lt;h2&gt;Hi there!&lt;/h2&gt;
[[Image:Example.jpg|thumb|Welcome!]]
'''Welcome to our wiki, and thank you for your contributions! There's a lot to do around here, so I hope you'll stay with us and make many more improvements.'''

:'''[[Special:Recentchanges|Recent changes]]''' is a great first stop, because you can see what pages other people have been editing, and where you can help.

:'''Questions?'''  You can ask at the [[Forum:Help desk|Help desk]] or on the [[Help:Talk pages|&quot;discussion&quot; page]] associated with each article, or post a message on [[User talk:{{{1}}}|my talk page]]!

:'''Need more help?'''  The [[Project:Community Portal|Community Portal]] has an outline of the site and links to pages to help you learn how to edit.

:'''Please [[Special:UserLogin|sign in]] every time you edit''', so that we can recognise an established user. 
 
I'm really happy to have you here, and look forward to working with you!

{{{2|}}}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Welcome/doc</title>
    <ns>10</ns>
    <id>1927</id>
      <sha1>t8o3oiesfljzchvzke157lm1xvl5vlv</sha1>
    <revision>
      <id>3398</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="2961">;Description
:To welcome a new contributor who has a user name, add this to the user's talk page.
:''For an &quot;anonymous&quot; contributor, you may wish to use {{t|welcomeIP}} instead.''
;Syntax
:Type &lt;code&gt;&lt;nowiki&gt;{{subst:welcome|&lt;/nowiki&gt;''Your user name''|''&lt;nowiki&gt;~~~~&lt;/nowiki&gt;''}}&lt;/code&gt; or &lt;code&gt;&lt;nowiki&gt;{{subst:welcome|&lt;/nowiki&gt;''Your user name''}}&lt;/code&gt; on a user's talk page.
:Use the second version if you want to add a personal message after the template, but before your [[Help:Signature|signature]] (or if you have a complex signature).
:As soon as you Save, the entry will lose its link to the template and become ordinary text, which you can edit to personalise it.

==Further advice==
===Use of &quot;subst:&quot; prefix===
Using the prefix before any template name copies the template then cuts the connection. If you omit the &quot;subst:&quot; the result copies just the same but will not be editable and will always show the current version of the template - probably not a good idea for a one-off welcoming message, although it is useful for many other templates.

===Edit it to make it more specific to this wiki===
For example, it could say &quot;Welcome to the '''&lt;font color=blue&gt;XYZWV Wiki&lt;/font&gt;'''&quot;.    You could add a link to a page you particularly want new users to look at.   You could use the &quot;upload file&quot; link to add a new picture that is meaningful (or funny!) to your visitors, and change the code &lt;nowiki&gt;[[Image:Example.jpg]]&lt;/nowiki&gt; to the name of your new picture.

===Make another one just for you to use===
On your user page you could create a link to something like &lt;nowiki&gt;[[Template:welcJG]]&lt;/nowiki&gt; then make the resulting page a copy of [[Template:Welcome]] and modify it any way you like. Then you can type or paste &lt;nowiki&gt;{{subst:welcJG}}&lt;/nowiki&gt; on a newcomer's page and not need further personalising.

===Auto sign===
You can get the template to automatically include the user's signature, but it will only work when it's substituted. If it's transcluded the four tildes will show. I guess you have to weigh up the advantages and disadvantages; you can easily include the subst: code in [[MediaWiki:Newarticletext]], but you run the risk of experienced users just transcluding it.

===PAGENAME===
A good idea is to include the &lt;code&gt;&lt;nowiki&gt;{{PAGENAME}}&lt;/nowiki&gt;&lt;/code&gt; magic word, that way the user feels like it's more of a personal welcome. This can be either directly transcluded, or substituted. There are problems with both options. For direct transclusion, the welcome will show the full pagename (e.g. User talk:Name/Archive2), if it's ever archived. For substitution, the whole template needs to be substituted for it to work. Otherwise, the pagename magic word will show. The same problem is faced as with auto signing; more experienced users are likely to just transclude it.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:WelcomeIP</title>
    <ns>10</ns>
    <id>1782</id>
      <sha1>6siir02fmb7ixzbi54iuyc8rtztukp0</sha1>
    <revision>
      <id>3646</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1100">&lt;h2&gt;Hi there!&lt;/h2&gt;
[[Image:Example.jpg|thumb|Welcome!]]
'''Welcome to this Wikia, and thank you for your contributions! [[Special:UserLogin|We invite you to log in and create a user name.]]'''

[[Help:Why create an account|Creating a user name]] is free and takes only a minute ''and'' it gives you greater '''anonymity''' if that is your wish. In addition, it is easier for other contributors to ask you questions and help you.

*Of course, we hope you continue to make contributions, even if not logged in.
*If you are new to Wikia or wikis in general, please visit the [[Project:Community Portal|Community portal]] for an outline of some of the main parts of the site and links to pages that show you how to edit.
*Discussion of any aspect of the site, and enquiries, can be made at the [[Forum:Index|Forum]] or on the [[Help:Talk pages|&quot;discussion&quot; page]] associated with each article. Please [[Help:Signature|sign and date]] your contributions there, so that readers know &quot;who to talk to&quot; and whether your message is probably still of current interest.

&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:WelcomeIP/doc</title>
    <ns>10</ns>
    <id>1928</id>
      <sha1>ngvcfuavbh9olgo38ert5ci82gc2y3k</sha1>
    <revision>
      <id>3400</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="580">;Description
:The above template is for adding to the [[help:Talk page|Talk page]] of any contributor who is identified only by an IP number.
:Note: as user IPs can change regularly, the earlier this is posted after the user's last edit, the better.
;Syntax
:Just type or paste &lt;code&gt;&lt;nowiki&gt;{{subst:welcomeIP}}&lt;/nowiki&gt;&lt;/code&gt; to the IP's talk page and add your timestamp (four tildes: &lt;code&gt;&lt;nowiki&gt;~~~~&lt;/nowiki&gt;&lt;/code&gt;) below it.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Wikipedia</title>
    <ns>10</ns>
    <id>1520</id>
      <sha1>i7mvmrbot6igbdi267bkyu1dv2k23j2</sha1>
    <revision>
      <id>3815</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="442">{| align=center border=0 cellpadding=3 cellspacing=3 style=&quot;border: 1px solid #E0E0E0; background-color: #F8F8F8; color:black;&quot;
|- 
| style=&quot;font-size: 90%&quot; | This page uses [[w:Wikia:Licensing|Creative Commons Licensed]] content from [[Wikipedia:{{{1|{{FULLPAGENAME}}}}}|Wikipedia]] ([http://en.wikipedia.org/w/index.php?title={{urlencode:{{{1|{{FULLPAGENAME}}}}}}}&amp;action=history view authors)]. 
|}&lt;noinclude&gt;
{{documentation}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Wikipedia-deleted/doc</title>
    <ns>10</ns>
    <id>1922</id>
      <sha1>bl183ye254jpt2auzmhvoo9lx942wsc</sha1>
    <revision>
      <id>3380</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="500">;Description
:Use this on pages which directly use [[wikipedia:|Wikipedia]] content (that has since been deleted from Wikipedia).
;Syntax
:Type &lt;code&gt;{{t|wikipedia-deleted|usernames}}&lt;/code&gt; as the last item of the page text.
:Note that &quot;&lt;code&gt;usernames&lt;/code&gt;&quot; should be the known user names of the main people who edited the article ''on Wikipedia''.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Wikipedia/doc</title>
    <ns>10</ns>
    <id>1921</id>
      <sha1>s06jci0kcihqge5psp9zttxq2o1ymnn</sha1>
    <revision>
      <id>3377</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="406">;Description
:Use this on pages which directly use [[wikipedia:|Wikipedia]] content.
;Syntax
:Type &lt;code&gt;{{t|wikipedia|page name}}&lt;/code&gt; as the last item of the page text.
:Note that &quot;&lt;code&gt;page name&lt;/code&gt;&quot; should be the title of the page ''on Wikipedia''.

&lt;includeonly&gt;[[Category:General wiki templates|{{PAGENAME}}]]&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Wp</title>
    <ns>10</ns>
    <id>2076</id>
      <sha1>4fz539h3kcu1oeastkj2vbfmcaihytv</sha1>
    <revision>
      <id>4030</id>
      <timestamp>2009-09-05T14:07:52Z</timestamp>
      <contributor>
        <username>6 times 9</username>
        <id>0</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="288">&lt;includeonly&gt;{{wplink|{{{Article|{{{1|{{PAGENAMEE}}}}}}}}|{{{Title|{{{2|{{{Article|{{{1|{{PAGENAME}}}}}}}}}}}}}}}}{{#if:{{{3|}}}{{{Type|}}}|[[Category:Old-style section link]]|}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4020</id>
      <timestamp>2011-09-29T00:18:19Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;&lt;includeonly&gt;&lt;div class=noprint style=&quot;clear:both; border:solid #AAA 1px; margin:0 0 4px 4px; font-size:90%; background:#F9F9F9; width:242px; padding:4px; spacing:0px; text-align...&quot;</comment>
      <text xml:space="preserve" bytes="769">&lt;includeonly&gt;&lt;div class=noprint style=&quot;clear:both; border:solid #AAA 1px; margin:0 0 4px 4px; font-size:90%; background:#F9F9F9; width:242px; padding:4px; spacing:0px; text-align:left; float:right&quot;&gt;&lt;div style=&quot;float:left&quot;&gt;[[Image:Wikipedia.png|50px|link=|Wikipedia]]&lt;/div&gt;&lt;div style=&quot;margin-left: 60px;&quot;&gt;Wikipedia has an article on&lt;div style=&quot;margin-left:10px&quot;&gt;'''''{{wplink|{{{Article|{{{1|{{PAGENAMEE}}}}}}}}|{{{Title|{{{2|{{{Article|{{{1|{{PAGENAME}}}}}}}}}}}}}}}}'''''&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;{{#if:{{{3|}}}{{{Type|}}}|[[Category:Old-style section link]]|}}{{#ifeq:{{NAMESPACE}}|Category|[[Category:Wikipedia articles/Category]]|[[Category:Wikipedia articles]]}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4021</id>
      <timestamp>2011-09-29T00:20:03Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="288">&lt;includeonly&gt;{{wplink|{{{Article|{{{1|{{PAGENAMEE}}}}}}}}|{{{Title|{{{2|{{{Article|{{{1|{{PAGENAME}}}}}}}}}}}}}}}}{{#if:{{{3|}}}{{{Type|}}}|[[Category:Old-style section link]]|}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4031</id>
      <timestamp>2011-09-29T17:55:23Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>1 revision: import WP template from LyricWiki</comment>
      <text xml:space="preserve" bytes="288">&lt;includeonly&gt;{{wplink|{{{Article|{{{1|{{PAGENAMEE}}}}}}}}|{{{Title|{{{2|{{{Article|{{{1|{{PAGENAME}}}}}}}}}}}}}}}}{{#if:{{{3|}}}{{{Type|}}}|[[Category:Old-style section link]]|}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Wp/doc</title>
    <ns>10</ns>
    <id>2080</id>
      <sha1>05q2sq606b0l1ccnc4j13c4ai5123p0</sha1>
    <revision>
      <id>4036</id>
      <timestamp>2009-09-05T14:14:08Z</timestamp>
      <contributor>
        <username>6 times 9</username>
        <id>0</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1355">'''This template produces a simple text link to an article on {{wp|Wikipedia}}.'''

{{H4|Usage:}}
&lt;pre&gt;{{wp|Article Name|Link Text}}&lt;/pre&gt;
* '''Article Name''' is the title of the Wikipedia article.
* '''Link Text''' is the text to be displayed as the link. If none is specified, it defaults to Article Name.
* To link to an article on a non-English Wikipedia, prefix '''Article Name''' with the country's code and a colon.
-----
{{H4|Examples:}}
&lt;pre&gt;Read about {{wp|Tool (band)|Tool}} on Wikipedia.&lt;/pre&gt;
''...would produce the following result:''

Read about {{wp|Tool (band)|Tool}} on Wikipedia.

&lt;pre&gt;Read about {{wp|Pink Floyd}} on Wikipedia.&lt;/pre&gt;
''...would produce:''

Read about {{wp|Pink Floyd}} on Wikipedia.

&lt;pre&gt;Read about {{wp|es:Pink Floyd|Pink Floyd}} on la enciclopedia libre.&lt;/pre&gt;
''...would produce:''

Read about {{wp|es:Pink Floyd|Pink Floyd}} on la enciclopedia libre.

&lt;pre&gt;{{wp|Pink Floyd#Breakthrough era (1970–1975)|Breakthrough era: 1970–1975}}&lt;/pre&gt;
''...would produce:''

{{wp|Pink Floyd#Breakthrough era (1970–1975)|Breakthrough era: 1970–1975}}

'''''NOTE:''''' Section titles on Wikipedia often change, thereby breaking the link.

&lt;includeonly&gt;[[Category:Templates|Wp]][[Category:Templates/External Links|Wp]]{{DISPLAYTITLE:Template:wp}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|Wp]]&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4037</id>
      <timestamp>2011-09-29T17:55:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>1 revision: import WP template from LyricWiki</comment>
      <text xml:space="preserve" bytes="1355">'''This template produces a simple text link to an article on {{wp|Wikipedia}}.'''

{{H4|Usage:}}
&lt;pre&gt;{{wp|Article Name|Link Text}}&lt;/pre&gt;
* '''Article Name''' is the title of the Wikipedia article.
* '''Link Text''' is the text to be displayed as the link. If none is specified, it defaults to Article Name.
* To link to an article on a non-English Wikipedia, prefix '''Article Name''' with the country's code and a colon.
-----
{{H4|Examples:}}
&lt;pre&gt;Read about {{wp|Tool (band)|Tool}} on Wikipedia.&lt;/pre&gt;
''...would produce the following result:''

Read about {{wp|Tool (band)|Tool}} on Wikipedia.

&lt;pre&gt;Read about {{wp|Pink Floyd}} on Wikipedia.&lt;/pre&gt;
''...would produce:''

Read about {{wp|Pink Floyd}} on Wikipedia.

&lt;pre&gt;Read about {{wp|es:Pink Floyd|Pink Floyd}} on la enciclopedia libre.&lt;/pre&gt;
''...would produce:''

Read about {{wp|es:Pink Floyd|Pink Floyd}} on la enciclopedia libre.

&lt;pre&gt;{{wp|Pink Floyd#Breakthrough era (1970–1975)|Breakthrough era: 1970–1975}}&lt;/pre&gt;
''...would produce:''

{{wp|Pink Floyd#Breakthrough era (1970–1975)|Breakthrough era: 1970–1975}}

'''''NOTE:''''' Section titles on Wikipedia often change, thereby breaking the link.

&lt;includeonly&gt;[[Category:Templates|Wp]][[Category:Templates/External Links|Wp]]{{DISPLAYTITLE:Template:wp}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Template documentation|Wp]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Wplink</title>
    <ns>10</ns>
    <id>2081</id>
      <sha1>t1wrxy0igh26gxek7w9rzngzcvt6pxe</sha1>
    <revision>
      <id>4038</id>
      <timestamp>2010-12-13T19:36:19Z</timestamp>
      <contributor>
        <username>6 times 9</username>
        <id>0</id>
      </contributor>
      <minor/>
      <comment>additional check</comment>
      <text xml:space="preserve" bytes="422">&lt;includeonly&gt;[[Wikipedia:{{{1}}}|{{#if:{{{2|}}}|{{{2}}}|{{#if:{{#explode:{{{1}}}|:|1}}|{{#ifeq:{{#explode:{{{1}}}|:|0}}|{{#language:{{#explode:{{{1}}}|:|0}}}}||{{language|{{#explode:{{{1}}}|:|0}}}}&amp;#32;}}|}}Wikipedia article}}]]{{#ifeq:{{lc:{{#explode:{{{1}}}|/|0}}}}|http:|[[Category:Invalid Wikipedia Link]]|}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4039</id>
      <timestamp>2011-09-29T17:55:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <minor/>
      <comment>1 revision: import WP template from LyricWiki</comment>
      <text xml:space="preserve" bytes="422">&lt;includeonly&gt;[[Wikipedia:{{{1}}}|{{#if:{{{2|}}}|{{{2}}}|{{#if:{{#explode:{{{1}}}|:|1}}|{{#ifeq:{{#explode:{{{1}}}|:|0}}|{{#language:{{#explode:{{{1}}}|:|0}}}}||{{language|{{#explode:{{{1}}}|:|0}}}}&amp;#32;}}|}}Wikipedia article}}]]{{#ifeq:{{lc:{{#explode:{{{1}}}|/|0}}}}|http:|[[Category:Invalid Wikipedia Link]]|}}&lt;/includeonly&gt;&lt;noinclude&gt;{{H1Fake|[[{{FULLPAGENAME}}/doc|Documentation]]}}{{{{FULLPAGENAME}}/doc}}&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Yes</title>
    <ns>10</ns>
    <id>2149</id>
      <sha1>2fwzwadzvqrrored7ab2hgkk1i68c1j</sha1>
    <revision>
      <id>4353</id>
      <timestamp>2011-11-22T22:41:33Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Created page with &quot;Yes&lt;noinclude&gt;  TODO: Import the &quot;done&quot; checkmark from LyricWiki  &lt;/noinclude&gt;&quot;</comment>
      <text xml:space="preserve" bytes="78">Yes&lt;noinclude&gt;

TODO: Import the &quot;done&quot; checkmark from LyricWiki

&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4356</id>
      <timestamp>2011-11-22T22:42:55Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="142">&lt;div style='width:100%;height:100%;background-color:#cfc'&gt;Yes&lt;/div&gt;&lt;noinclude&gt;

TODO: Import the &quot;done&quot; checkmark from LyricWiki

&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4357</id>
      <timestamp>2011-11-22T22:44:02Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="171">&lt;div style='width:100%;height:100%;background-color:#cfc;font-weight:bold;color:green'&gt;Yes&lt;/div&gt;&lt;noinclude&gt;

TODO: Import the &quot;done&quot; checkmark from LyricWiki

&lt;/noinclude&gt;</text>
    </revision>
    <revision>
      <id>4359</id>
      <timestamp>2011-11-22T22:45:55Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>switch to using a class (instead of including the same style a dozen times on the support matrix</comment>
      <text xml:space="preserve" bytes="101">&lt;div class='yes'&gt;Yes&lt;/div&gt;&lt;noinclude&gt;

TODO: Import the &quot;done&quot; checkmark from LyricWiki

&lt;/noinclude&gt;</text>
    </revision>
  </page>
  <page>
    <title>Terms of Use</title>
    <ns>0</ns>
    <id>2659</id>
      <sha1>40t2s77s22kygvfqgj1e3wunjlfhtdi</sha1>
    <revision>
      <id>5083</id>
      <timestamp>2013-09-17T13:20:36Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>Created page with &quot;#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. ...&quot;</comment>
      <text xml:space="preserve" bytes="1383">#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>5084</id>
      <timestamp>2013-09-17T13:21:22Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="1385">

#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>5085</id>
      <timestamp>2013-09-17T13:21:41Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="1388">&lt;br&gt;
#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>5086</id>
      <timestamp>2013-09-17T13:21:49Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="1383">#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
    <revision>
      <id>5087</id>
      <timestamp>2013-09-17T13:27:34Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Terms of Use]]&quot; (‎[edit=sysop] (indefinite) ‎[move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="1383">#If you intend to use our API methods for commercial use, you need prior written approval. Please contact us at [mailto:api@wikia.com api@wikia.com] to get the ball rolling. 
#Except where otherwise specified, Wikia's content is licensed under the Creative Commons Attribution-Share Alike License Unported (CC BY-SA 3.0). It is your responsibility to understand and adhere to the [http://community.wikia.com/wiki/Community_Central:Licensing license].
#Do not use our APIs in a manner that impacts the stability of Wikia's servers or impacts the behavior of other applications using our APIs.
#We reserve the right, in our sole discretion and at any time without notice to you, to change, suspend, or discontinue the APIs, or terminate your rights to access them.
#Our APIs are being provided free of charge, so Wikia will have no liability arising from or based on your access to and use of the APIs.
#Although you are free to make public statements regarding your use of the API, you may not imply that you and Wikia have some sort of special relationship (employer-employee, partnership, or joint venture) without Wikia's prior written consent.
#And last but not least, please don't use our APIs to violate any laws or regulations.
&lt;br /&gt;
So go on, play nice, and of course, have fun! If you have any questions about Wikia's APIs, email us at [mailto:api@wikia.com api@wikia.com].</text>
    </revision>
  </page>
  <page>
    <title>User talk:108.177.220.25</title>
    <ns>3</ns>
    <id>2413</id>
      <sha1>5r8yw0vjrttpb9x4o7hm2uqq56xnqdr</sha1>
    <revision>
      <id>4776</id>
      <timestamp>2012-06-05T05:52:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="461">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Quick Start''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:52, June 5, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:109.230.217.166</title>
    <ns>3</ns>
    <id>2111</id>
      <sha1>mi5audttz7sx5bp24mqn9qin0k2hgzp</sha1>
    <revision>
      <id>4144</id>
      <timestamp>2011-10-12T08:12:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="709">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:LyricWiki API/SOAP/Java &amp; Axis]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:110.54.184.62</title>
    <ns>3</ns>
    <id>2484</id>
      <sha1>oz6l4j3nym36zniagys13atf1hxzuvt</sha1>
    <revision>
      <id>4847</id>
      <timestamp>2012-06-30T05:20:23Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:20, June 30, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:113.193.113.98</title>
    <ns>3</ns>
    <id>2702</id>
      <sha1>7htvvb5yw46raadm33glg15fh18jpqo</sha1>
    <revision>
      <id>5228</id>
      <timestamp>2013-11-09T08:51:51Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="470">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Category:Browse''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 08:51, November 9, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:117.211.120.161</title>
    <ns>3</ns>
    <id>2355</id>
      <sha1>l8q6g5s3dy3g78ehiucue2bpa2gypr5</sha1>
    <revision>
      <id>4714</id>
      <timestamp>2012-04-26T11:31:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:31, April 26, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:117.239.225.2</title>
    <ns>3</ns>
    <id>2467</id>
      <sha1>hmdrty179wgnb5on67v5ye1lk7dwoa0</sha1>
    <revision>
      <id>4830</id>
      <timestamp>2012-06-28T02:02:37Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki Apps''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 02:02, June 28, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:118.85.207.2</title>
    <ns>3</ns>
    <id>2276</id>
      <sha1>i8v7k7r3m7fh274ezv30fr5wth2py65</sha1>
    <revision>
      <id>4625</id>
      <timestamp>2012-03-01T22:40:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:40, March 1, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:118.96.150.130</title>
    <ns>3</ns>
    <id>2494</id>
      <sha1>j7wqu9zbp4fgf0jmkiherv1lm5tsywa</sha1>
    <revision>
      <id>4857</id>
      <timestamp>2012-07-04T04:11:09Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:11, July 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:119.46.110.5</title>
    <ns>3</ns>
    <id>2347</id>
      <sha1>n3xmgtgt1wef71wcv33dnj0lmitbsea</sha1>
    <revision>
      <id>4702</id>
      <timestamp>2012-04-05T03:22:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:22, April 5, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:120.128.6.211</title>
    <ns>3</ns>
    <id>2513</id>
      <sha1>nuugzt8qi3httg6cpa003x8uzjketti</sha1>
    <revision>
      <id>4879</id>
      <timestamp>2012-07-31T18:34:45Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="479">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/Support Matrix''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:34, July 31, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:121.110.15.100</title>
    <ns>3</ns>
    <id>2492</id>
      <sha1>mig6h9hksihvdyx3zaxp3i6oadzpjx8</sha1>
    <revision>
      <id>4855</id>
      <timestamp>2012-06-30T09:50:22Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 09:50, June 30, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:121.241.123.43</title>
    <ns>3</ns>
    <id>2631</id>
      <sha1>e75j5lrlc6mvsgle2fripld1frgj3h6</sha1>
    <revision>
      <id>5046</id>
      <timestamp>2013-06-12T09:57:44Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:57, June 12, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:121.244.161.200</title>
    <ns>3</ns>
    <id>2429</id>
      <sha1>93cei66joy7s5zc3yujdmfazl2vvn2e</sha1>
    <revision>
      <id>4792</id>
      <timestamp>2012-06-27T13:04:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 13:04, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:123.237.52.119</title>
    <ns>3</ns>
    <id>2700</id>
      <sha1>pd6n2hvi9bhwtlnnfqtcx9idctferpk</sha1>
    <revision>
      <id>5220</id>
      <timestamp>2013-10-26T06:24:43Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Wikia Content API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 06:24, October 26, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:124.153.103.194</title>
    <ns>3</ns>
    <id>2511</id>
      <sha1>iyvbbl1jp1u2fx4dtot39qi5629vbe6</sha1>
    <revision>
      <id>4877</id>
      <timestamp>2012-07-31T13:49:56Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="474">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Category talk:Resources''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 13:49, July 31, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:128.111.220.50</title>
    <ns>3</ns>
    <id>2304</id>
      <sha1>lb01xc1sas1vf14gfnqedaod3aw0o0w</sha1>
    <revision>
      <id>4653</id>
      <timestamp>2012-03-02T18:32:25Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP/Java &amp; Axis''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:32, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:129.174.93.192</title>
    <ns>3</ns>
    <id>2390</id>
      <sha1>88viohpnkxmfn86fczi1h49b6zpjivz</sha1>
    <revision>
      <id>4752</id>
      <timestamp>2012-05-21T05:05:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''User:JahnNash''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:05, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:130.94.246.4</title>
    <ns>3</ns>
    <id>2443</id>
      <sha1>pd6zctivxzkg0vuxnxwn09x9pyrpor1</sha1>
    <revision>
      <id>4806</id>
      <timestamp>2012-06-27T19:26:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 19:26, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:14.47.253.44</title>
    <ns>3</ns>
    <id>2507</id>
      <sha1>3yrf8wbwkazgb4obxhamo4i08o9crz3</sha1>
    <revision>
      <id>4873</id>
      <timestamp>2012-07-31T09:18:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="459">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Zafesoft''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 09:18, July 31, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:141.0.8.142</title>
    <ns>3</ns>
    <id>2369</id>
      <sha1>6g6pifru49t1hyne9wc8s6qtn5vwdz9</sha1>
    <revision>
      <id>4731</id>
      <timestamp>2012-05-11T01:33:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="501">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia API Template:DepositaryO Systems Architecture''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 01:33, May 11, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:141.84.65.114</title>
    <ns>3</ns>
    <id>2342</id>
      <sha1>7o498c88wofzenezx7lu97tukmj7jbx</sha1>
    <revision>
      <id>4697</id>
      <timestamp>2012-04-03T06:13:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:13, April 3, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:143.225.63.120</title>
    <ns>3</ns>
    <id>2278</id>
      <sha1>mkdkxtboz082cn4t34bvmbpiycacar1</sha1>
    <revision>
      <id>4627</id>
      <timestamp>2012-03-02T01:54:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 01:54, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:143.50.153.50</title>
    <ns>3</ns>
    <id>2435</id>
      <sha1>14ystue5grmgjrpfuotp55up8jy8brz</sha1>
    <revision>
      <id>4798</id>
      <timestamp>2012-06-27T15:45:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 15:45, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:144.122.98.14</title>
    <ns>3</ns>
    <id>2282</id>
      <sha1>chf3k8mb9h4gab6yigjwp61jx3ss17l</sha1>
    <revision>
      <id>4631</id>
      <timestamp>2012-03-02T08:38:15Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 08:38, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:147.175.64.200</title>
    <ns>3</ns>
    <id>2449</id>
      <sha1>piv766tsat60ddi2o6t1adcu7god6xm</sha1>
    <revision>
      <id>4812</id>
      <timestamp>2012-06-27T20:38:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:38, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:151.27.83.25</title>
    <ns>3</ns>
    <id>2722</id>
      <sha1>swl1wzs4tva51dduvecpqupiz96dsy8</sha1>
    <revision>
      <id>5254</id>
      <timestamp>2013-12-20T15:17:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="473">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Wikia Content API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 15:17, December 20, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:160.83.30.148</title>
    <ns>3</ns>
    <id>2421</id>
      <sha1>hj3fo0l73n55w66irb78wccr445qm5b</sha1>
    <revision>
      <id>4783</id>
      <timestamp>2012-06-21T14:20:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 14:20, June 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:168.230.161.101</title>
    <ns>3</ns>
    <id>2461</id>
      <sha1>g8q5mls8mfbyg103v4s0icl85m54ieg</sha1>
    <revision>
      <id>4824</id>
      <timestamp>2012-06-27T22:28:16Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/REST''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:28, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:173.13.135.107</title>
    <ns>3</ns>
    <id>2329</id>
      <sha1>mgfb7i7zayuiqrjey1raq2haiqdb1f3</sha1>
    <revision>
      <id>4683</id>
      <timestamp>2012-03-15T22:36:23Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:36, March 15, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:173.52.211.59</title>
    <ns>3</ns>
    <id>2707</id>
      <sha1>qawldtzc4sso4f47co7eosxk7nchgyq</sha1>
    <revision>
      <id>5236</id>
      <timestamp>2013-12-07T18:41:32Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="461">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Thomas''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 18:41, December 7, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:174.111.230.108</title>
    <ns>3</ns>
    <id>2685</id>
      <sha1>i755kkv2g06e6rbq9pnzznn2v9mgmm3</sha1>
    <revision>
      <id>5201</id>
      <timestamp>2013-09-24T06:29:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="470">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 06:29, September 24, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:174.129.11.185</title>
    <ns>3</ns>
    <id>2457</id>
      <sha1>fbifbsixtk3sikq0x6y9gf84zfrdwou</sha1>
    <revision>
      <id>4820</id>
      <timestamp>2012-06-27T21:41:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki:SOAP/client''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 21:41, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:174.252.153.30</title>
    <ns>3</ns>
    <id>2356</id>
      <sha1>notgfisn9tdp80aygunsb5vok7kd387</sha1>
    <revision>
      <id>4716</id>
      <timestamp>2012-04-26T11:41:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:41, April 26, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:174.253.233.34</title>
    <ns>3</ns>
    <id>2093</id>
      <sha1>kp0qocgqleqkme97icdivgbnf4ik2m3</sha1>
    <revision>
      <id>4102</id>
      <timestamp>2011-10-05T00:38:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="690">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:Quick Start]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:174.254.164.211</title>
    <ns>3</ns>
    <id>2192</id>
      <sha1>oul2j0qvzsuyznixi2astcbvdkc7l77</sha1>
    <revision>
      <id>4524</id>
      <timestamp>2011-12-26T20:07:27Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Category:Files''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:07, December 26, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:174.37.130.11</title>
    <ns>3</ns>
    <id>2262</id>
      <sha1>j0au2jhkgaqbz86k55tqslyzdg40v16</sha1>
    <revision>
      <id>4608</id>
      <timestamp>2012-02-24T05:07:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="488">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/Wikia Custom API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:07, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:176.31.240.158</title>
    <ns>3</ns>
    <id>2233</id>
      <sha1>ti0svutz5i0fmgvawiir3423i53onem</sha1>
    <revision>
      <id>4577</id>
      <timestamp>2012-02-22T04:00:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="483">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/Support Matrix''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:00, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:177.36.192.38</title>
    <ns>3</ns>
    <id>2112</id>
      <sha1>kp0qocgqleqkme97icdivgbnf4ik2m3</sha1>
    <revision>
      <id>4145</id>
      <timestamp>2011-10-12T08:12:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="690">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:Quick Start]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:177.67.224.4</title>
    <ns>3</ns>
    <id>2110</id>
      <sha1>hdhdlvumo653ewwmmi08f0vdn42e4zp</sha1>
    <revision>
      <id>4143</id>
      <timestamp>2011-10-12T08:12:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="692">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:Documentation]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:177.71.179.150</title>
    <ns>3</ns>
    <id>2254</id>
      <sha1>7dnqz7bl2110r11x5lnp9exwu0tmlbu</sha1>
    <revision>
      <id>4600</id>
      <timestamp>2012-02-24T04:11:43Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="485">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:11, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:178.33.176.153</title>
    <ns>3</ns>
    <id>2300</id>
      <sha1>b7qsapgcqhv3k86h06hfvom3oeo4cwk</sha1>
    <revision>
      <id>4649</id>
      <timestamp>2012-03-02T17:22:15Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:22, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:178.33.176.235</title>
    <ns>3</ns>
    <id>2251</id>
      <sha1>fjiq1v54k3w9cjojxddl8waenc3koxg</sha1>
    <revision>
      <id>4597</id>
      <timestamp>2012-02-24T03:50:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="466">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Quick Start''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:50, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:180.153.146.102</title>
    <ns>3</ns>
    <id>2127</id>
      <sha1>kp0qocgqleqkme97icdivgbnf4ik2m3</sha1>
    <revision>
      <id>4210</id>
      <timestamp>2011-10-14T00:13:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="690">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:Quick Start]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:180.252.243.37</title>
    <ns>3</ns>
    <id>2648</id>
      <sha1>9dfo0cvb2xw3b1lp0l9ivoqgsih7qk3</sha1>
    <revision>
      <id>5063</id>
      <timestamp>2013-08-24T01:53:44Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 01:53, August 24, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:182.71.107.234</title>
    <ns>3</ns>
    <id>2529</id>
      <sha1>6ty9a5q4d57zn3snanv9nm4q0fs1012</sha1>
    <revision>
      <id>4907</id>
      <timestamp>2012-09-10T10:46:34Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="474">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/REST''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 10:46, September 10, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:182.71.109.14</title>
    <ns>3</ns>
    <id>2170</id>
      <sha1>ikq03iznaumh132v0ynvzy5pxxx53mu</sha1>
    <revision>
      <id>4460</id>
      <timestamp>2011-12-09T12:28:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 12:28, December 9, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.106.220.249</title>
    <ns>3</ns>
    <id>2295</id>
      <sha1>a3ihjabpwlxcb6o0pyz0x1trjtg1gly</sha1>
    <revision>
      <id>4644</id>
      <timestamp>2012-03-02T13:51:13Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="462">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Quick Start''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 13:51, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.175.99.151</title>
    <ns>3</ns>
    <id>2238</id>
      <sha1>05mpyv863bpev2wkh5yr20443tixiui</sha1>
    <revision>
      <id>4583</id>
      <timestamp>2012-02-22T06:02:28Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''RiehlRoss440''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:02, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.183.148.126</title>
    <ns>3</ns>
    <id>2264</id>
      <sha1>6fcjdeskugld3fh634cbdx8h7w3530j</sha1>
    <revision>
      <id>4610</id>
      <timestamp>2012-02-24T05:19:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="458">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''FAQ''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:19, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.56.129.165</title>
    <ns>3</ns>
    <id>2557</id>
      <sha1>92isdinoq7woe01mrozizwuh9rcg1sm</sha1>
    <revision>
      <id>4946</id>
      <timestamp>2012-11-09T22:05:34Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''LyricWiki lyrics''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:05, November 9, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.58.173.168</title>
    <ns>3</ns>
    <id>2497</id>
      <sha1>lwm80i6ctdcz81srrvc2n6jff0o5wst</sha1>
    <revision>
      <id>4861</id>
      <timestamp>2012-07-08T22:56:36Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki Apps''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:56, July 8, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.73.183.198</title>
    <ns>3</ns>
    <id>2479</id>
      <sha1>7o39mb2gexoarcq5le1tpy4yjb8vjut</sha1>
    <revision>
      <id>4842</id>
      <timestamp>2012-06-28T13:14:09Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 13:14, June 28, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:184.75.208.34</title>
    <ns>3</ns>
    <id>2605</id>
      <sha1>0ucxjyktb8r4gy3tjdvtfx712nmu5k6</sha1>
    <revision>
      <id>5015</id>
      <timestamp>2013-05-01T20:31:36Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''BoyesHamrick544''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:31, May 1, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:186.125.219.52</title>
    <ns>3</ns>
    <id>2256</id>
      <sha1>s9ucau4twdnc0louxkbhvjku9p5nlsa</sha1>
    <revision>
      <id>4602</id>
      <timestamp>2012-02-24T04:22:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''ULALA! social''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:22, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:186.209.41.240</title>
    <ns>3</ns>
    <id>2441</id>
      <sha1>duoqbs119yq5gnueqjyk9og7kn8hi6t</sha1>
    <revision>
      <id>4804</id>
      <timestamp>2012-06-27T18:55:26Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:55, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:188.227.181.136</title>
    <ns>3</ns>
    <id>2222</id>
      <sha1>cjyh5v5dz1ic4s01aj0yqkbnkztkbzx</sha1>
    <revision>
      <id>4566</id>
      <timestamp>2012-02-21T21:22:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 21:22, February 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:189.126.110.32</title>
    <ns>3</ns>
    <id>2486</id>
      <sha1>6wibm8u40hw1ik7xymfic1jtdzpx5tm</sha1>
    <revision>
      <id>4849</id>
      <timestamp>2012-06-30T06:10:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:10, June 30, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:189.85.29.110</title>
    <ns>3</ns>
    <id>2716</id>
      <sha1>4zatkt5wd74io632t7vwi28r79dqqdy</sha1>
    <revision>
      <id>5245</id>
      <timestamp>2013-12-08T13:51:12Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="470">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''GoochGrigsby342''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 13:51, December 8, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:190.224.160.217</title>
    <ns>3</ns>
    <id>2245</id>
      <sha1>6l7bfbne46taxdqmzxws9ovxv2soset</sha1>
    <revision>
      <id>4590</id>
      <timestamp>2012-02-22T09:27:59Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="474">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''JS MediaWiki Client''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 09:27, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:190.228.103.254</title>
    <ns>3</ns>
    <id>2272</id>
      <sha1>fvkb0b1up97ic6vzjtfdetx9llo0886</sha1>
    <revision>
      <id>4621</id>
      <timestamp>2012-03-01T19:44:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="476">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 19:44, March 1, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:192.114.170.10</title>
    <ns>3</ns>
    <id>2350</id>
      <sha1>4av4y2pip9kogghqw1v4owd84m1c52j</sha1>
    <revision>
      <id>4706</id>
      <timestamp>2012-04-05T11:39:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:39, April 5, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:193.138.133.80</title>
    <ns>3</ns>
    <id>2268</id>
      <sha1>qnrqyvl8cm9j4sb74nchkzvh4d75zzh</sha1>
    <revision>
      <id>4614</id>
      <timestamp>2012-02-24T06:51:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="485">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:51, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:194.199.22.117</title>
    <ns>3</ns>
    <id>2425</id>
      <sha1>6a0jnq8mm5n0yqvqpaowgkdycy33c8t</sha1>
    <revision>
      <id>4788</id>
      <timestamp>2012-06-27T10:43:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 10:43, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:195.60.77.209</title>
    <ns>3</ns>
    <id>2230</id>
      <sha1>nrvbo7n0d2kbwkcac42t9j6qlf5h5ak</sha1>
    <revision>
      <id>4574</id>
      <timestamp>2012-02-22T03:27:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''ULALA! social''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:27, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:195.71.103.35</title>
    <ns>3</ns>
    <id>2431</id>
      <sha1>k6h5o33y487opzzpjsaj3vjorm8ohop</sha1>
    <revision>
      <id>4794</id>
      <timestamp>2012-06-27T14:50:15Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 14:50, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:195.71.109.248</title>
    <ns>3</ns>
    <id>2439</id>
      <sha1>qr0uzhklzcfbm5zua0fmijm8adp3f28</sha1>
    <revision>
      <id>4802</id>
      <timestamp>2012-06-27T18:40:42Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="479">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/Support Matrix''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:40, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:195.74.38.118</title>
    <ns>3</ns>
    <id>2291</id>
      <sha1>1fcw1qvf2oix5qsh74hw1i4eziy7av1</sha1>
    <revision>
      <id>4640</id>
      <timestamp>2012-03-02T12:44:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/REST''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 12:44, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:197.123.153.6</title>
    <ns>3</ns>
    <id>2556</id>
      <sha1>ry437304z86pl5bmrkz55g5uw5oj1oz</sha1>
    <revision>
      <id>4944</id>
      <timestamp>2012-11-07T11:53:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Template:Sandbox''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:53, November 7, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:199.16.205.133</title>
    <ns>3</ns>
    <id>2241</id>
      <sha1>k2fhrplnph3lwqfu4kwvp7gvi5ypqxv</sha1>
    <revision>
      <id>4586</id>
      <timestamp>2012-02-22T06:52:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="485">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:52, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:2.30.52.230</title>
    <ns>3</ns>
    <id>2653</id>
      <sha1>hq7j132713zs6yglponk25cnr5rb3aw</sha1>
    <revision>
      <id>5071</id>
      <timestamp>2013-09-06T06:52:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 06:52, September 6, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:2.93.106.236</title>
    <ns>3</ns>
    <id>2198</id>
      <sha1>l8eui7eyktpyncmwk5lvlpmnpqq9n3h</sha1>
    <revision>
      <id>4534</id>
      <timestamp>2012-01-09T23:09:20Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="466">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 23:09, January 9, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:200.111.164.29</title>
    <ns>3</ns>
    <id>2249</id>
      <sha1>hqxs049a2d31u5tces7fys283oz20kh</sha1>
    <revision>
      <id>4595</id>
      <timestamp>2012-02-24T03:28:09Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="485">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:28, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:201.76.186.70</title>
    <ns>3</ns>
    <id>2147</id>
      <sha1>gjrooem9sj705rfim89rrhwpctbchxm</sha1>
    <revision>
      <id>4346</id>
      <timestamp>2011-11-18T15:13:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="473">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 15:13, November 18, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:202.28.180.202</title>
    <ns>3</ns>
    <id>2537</id>
      <sha1>dmcb9j15to27b6tiips18mwefthyj8u</sha1>
    <revision>
      <id>4916</id>
      <timestamp>2012-09-30T08:29:39Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Quick Start''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 08:29, September 30, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:208.80.65.32</title>
    <ns>3</ns>
    <id>2360</id>
      <sha1>kec4y9wzokzlbos05jnowu0gzt9q6k6</sha1>
    <revision>
      <id>4720</id>
      <timestamp>2012-05-06T18:22:47Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="462">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:22, May 6, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:208.80.65.50</title>
    <ns>3</ns>
    <id>2215</id>
      <sha1>1d8iln6r5wv9h2a7h3xgm0ndi629v3j</sha1>
    <revision>
      <id>4557</id>
      <timestamp>2012-02-04T17:30:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/REST''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:30, February 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:210.170.35.21</title>
    <ns>3</ns>
    <id>2220</id>
      <sha1>n4euic4g6z6q8spvtl1pzazmd8pxyt1</sha1>
    <revision>
      <id>4564</id>
      <timestamp>2012-02-21T18:52:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:52, February 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:211.47.206.94</title>
    <ns>3</ns>
    <id>2280</id>
      <sha1>3cqxyppaslpt75gqvjtentvx0vkgngo</sha1>
    <revision>
      <id>4629</id>
      <timestamp>2012-03-02T06:45:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="458">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Support''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:45, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:212.159.86.132</title>
    <ns>3</ns>
    <id>2597</id>
      <sha1>0cjdwzhapebhzdwp68m2t27mpmdi539</sha1>
    <revision>
      <id>5003</id>
      <timestamp>2013-03-27T04:23:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1121">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:Documentation]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:DaNASCAT|DaNASCAT]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:213.186.174.192</title>
    <ns>3</ns>
    <id>2402</id>
      <sha1>jhp6kl53rt5pp5zknupnd62ll11o4kh</sha1>
    <revision>
      <id>4764</id>
      <timestamp>2012-05-23T06:34:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:34, May 23, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:216.66.153.168</title>
    <ns>3</ns>
    <id>2523</id>
      <sha1>3hurb3zmuy92wok6yjon5x97t7eaw3f</sha1>
    <revision>
      <id>4895</id>
      <timestamp>2012-09-04T17:15:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''User:TyA''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:15, September 4, 2012</text>
    </revision>
    <revision>
      <id>4898</id>
      <timestamp>2012-09-04T17:15:27Z</timestamp>
      <contributor>
        <ip>216.66.153.168</ip>
      </contributor>
      <comment>Replaced content with &quot;==.==&quot;</comment>
      <text xml:space="preserve" bytes="5">==.==</text>
    </revision>
    <revision>
      <id>4899</id>
      <timestamp>2012-09-04T17:15:29Z</timestamp>
      <contributor>
        <username>VSTF Bot</username>
        <id>1907256</id>
      </contributor>
      <minor/>
      <comment>Automatically reverted revisions marked as vandalism to User talk:216.66.153.168 by [[Special:Contributions/216.66.153.168|216.66.153.168]] (Bot action)</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''User:TyA''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:15, September 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:217.218.31.162</title>
    <ns>3</ns>
    <id>2274</id>
      <sha1>fq8gd8ipovk1awntufb5w65uy6esc81</sha1>
    <revision>
      <id>4623</id>
      <timestamp>2012-03-01T20:55:38Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:55, March 1, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:219.232.35.10</title>
    <ns>3</ns>
    <id>2451</id>
      <sha1>d4veoerb4fjyietk26pgpgdlv1fj804</sha1>
    <revision>
      <id>4814</id>
      <timestamp>2012-06-27T21:12:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 21:12, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:222.92.145.162</title>
    <ns>3</ns>
    <id>2258</id>
      <sha1>4h6h2p3aoskys8ihrhojwyl1h3nlhr8</sha1>
    <revision>
      <id>4604</id>
      <timestamp>2012-02-24T05:03:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="480">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:03, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:23.20.83.35</title>
    <ns>3</ns>
    <id>2380</id>
      <sha1>lfb06yuok9q7vi68mjym8j1hhrtvf5q</sha1>
    <revision>
      <id>4742</id>
      <timestamp>2012-05-21T02:20:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 02:20, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:23.21.189.47</title>
    <ns>3</ns>
    <id>2490</id>
      <sha1>nzm0kfmngqgud92e7lk6fd7scs9b1os</sha1>
    <revision>
      <id>4853</id>
      <timestamp>2012-06-30T07:49:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="481">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 07:49, June 30, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:23.23.208.204</title>
    <ns>3</ns>
    <id>2406</id>
      <sha1>7i9nbhb433fsc7qisycsj0zk1rnpesm</sha1>
    <revision>
      <id>4768</id>
      <timestamp>2012-05-23T08:14:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="470">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Help:Log in problems''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 08:14, May 23, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:24.115.157.239</title>
    <ns>3</ns>
    <id>2132</id>
      <sha1>hdhdlvumo653ewwmmi08f0vdn42e4zp</sha1>
    <revision>
      <id>4224</id>
      <timestamp>2011-10-28T01:26:23Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="692">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:Documentation]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:24.136.126.19</title>
    <ns>3</ns>
    <id>2394</id>
      <sha1>hq5d9fbrm1t6fw86h1c478xqho5yrvh</sha1>
    <revision>
      <id>4756</id>
      <timestamp>2012-05-21T05:28:09Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:28, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:24.14.16.215</title>
    <ns>3</ns>
    <id>2231</id>
      <sha1>nrvbo7n0d2kbwkcac42t9j6qlf5h5ak</sha1>
    <revision>
      <id>4575</id>
      <timestamp>2012-02-22T03:27:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''ULALA! social''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:27, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:24.237.227.198</title>
    <ns>3</ns>
    <id>2459</id>
      <sha1>4tyj0nk0q21uje52h8tj6zuapja19lr</sha1>
    <revision>
      <id>4822</id>
      <timestamp>2012-06-27T22:11:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="458">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Support''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:11, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:24.39.229.130</title>
    <ns>3</ns>
    <id>2535</id>
      <sha1>h2f35o0vryoj0jh2yexd0wijlloeqmj</sha1>
    <revision>
      <id>4914</id>
      <timestamp>2012-09-28T20:55:01Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="479">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP/Ruby''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:55, September 28, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:24.7.244.79</title>
    <ns>3</ns>
    <id>2713</id>
      <sha1>ntur1ueywcztv7oqdl8yc7th6dzqhh2</sha1>
    <revision>
      <id>5242</id>
      <timestamp>2013-12-08T11:54:25Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="460">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''James''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 11:54, December 8, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:31.128.162.109</title>
    <ns>3</ns>
    <id>2218</id>
      <sha1>ld5ffiv3ffrsc7v4q239ysu27e97y3t</sha1>
    <revision>
      <id>4562</id>
      <timestamp>2012-02-21T18:23:43Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="480">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP/Python''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:23, February 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:36.75.181.25</title>
    <ns>3</ns>
    <id>2564</id>
      <sha1>328ixvgffuho6apnwah9672hb7g9ncq</sha1>
    <revision>
      <id>4958</id>
      <timestamp>2012-12-17T14:19:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1117">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:Documentation]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Sannse|Sannse]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:37.201.121.197</title>
    <ns>3</ns>
    <id>2705</id>
      <sha1>987jnonsjxx6keem54o37hg6kq9zegy</sha1>
    <revision>
      <id>5234</id>
      <timestamp>2013-11-28T20:25:37Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="466">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Legacy API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:25, November 28, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:38.127.199.123</title>
    <ns>3</ns>
    <id>2046</id>
      <sha1>ameztkik6z9wc0gkjs35zd4xrtsupeq</sha1>
    <revision>
      <id>3914</id>
      <timestamp>2011-09-09T22:46:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="441">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia API Wiki''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Wikia|my talk page]] if I can help with anything! -- [[User:Wikia|Wikia]] ([[User_talk:Wikia|Talk]]) 22:46, September 9, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:39.32.90.92</title>
    <ns>3</ns>
    <id>2634</id>
      <sha1>kplfvhx3t85gtr64r9xlyybq7o0enj4</sha1>
    <revision>
      <id>5050</id>
      <timestamp>2013-07-01T18:47:33Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 18:47, July 1, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:46.137.230.254</title>
    <ns>3</ns>
    <id>2247</id>
      <sha1>4tks5yl58bhnx6gje8avdhgoc96wlew</sha1>
    <revision>
      <id>4592</id>
      <timestamp>2012-02-22T13:51:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="485">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/MediaWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 13:51, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:46.166.145.88</title>
    <ns>3</ns>
    <id>2471</id>
      <sha1>pxzpmcko6cfgy65y7n9awhdxws4vdza</sha1>
    <revision>
      <id>4834</id>
      <timestamp>2012-06-28T10:15:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 10:15, June 28, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:46.176.235.42</title>
    <ns>3</ns>
    <id>2327</id>
      <sha1>qet5pnsvsuueu6e46ox4m3kd3eg693l</sha1>
    <revision>
      <id>4681</id>
      <timestamp>2012-03-12T18:58:12Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="473">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki:Integration''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:58, March 12, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:46.53.144.128</title>
    <ns>3</ns>
    <id>2608</id>
      <sha1>5vdjgg4nhckp0410xzbdsfry7om8y9u</sha1>
    <revision>
      <id>5020</id>
      <timestamp>2013-05-06T13:25:23Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 13:25, May 6, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:49.248.181.136</title>
    <ns>3</ns>
    <id>2599</id>
      <sha1>hx0kz33ery4y01k8b6xjabmckmb0x41</sha1>
    <revision>
      <id>5005</id>
      <timestamp>2013-04-04T09:45:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1119">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:Documentation]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:49.248.84.100</title>
    <ns>3</ns>
    <id>2622</id>
      <sha1>r2ke8anez6pqi57qegokjt0gt8otmvq</sha1>
    <revision>
      <id>5036</id>
      <timestamp>2013-05-28T12:49:48Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:49, May 28, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:5.149.104.81</title>
    <ns>3</ns>
    <id>2586</id>
      <sha1>lkrvdjwujfsnzodlzoxgmmgokngogtk</sha1>
    <revision>
      <id>4987</id>
      <timestamp>2013-02-17T08:21:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1132">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki lyrics]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Sarah Manley|Sarah Manley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:50.116.40.184</title>
    <ns>3</ns>
    <id>2517</id>
      <sha1>i8y5z775p8da7b7mp9wt1sdqe38w59r</sha1>
    <revision>
      <id>4883</id>
      <timestamp>2012-08-02T04:03:24Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="485">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries/Wikia Custom API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:03, August 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:50.57.136.164</title>
    <ns>3</ns>
    <id>2129</id>
      <sha1>tezarm2z6nueh86n9lnftmhi808b4xn</sha1>
    <revision>
      <id>4213</id>
      <timestamp>2011-10-14T01:57:43Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 01:57, October 14, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:58.241.130.206</title>
    <ns>3</ns>
    <id>2386</id>
      <sha1>gyeni5016odeeqb20guwc1p4g3b4lad</sha1>
    <revision>
      <id>4748</id>
      <timestamp>2012-05-21T04:16:14Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:16, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:58.8.74.97</title>
    <ns>3</ns>
    <id>2437</id>
      <sha1>gced1m5ypmceil8fbju0i4dsoc4bgxa</sha1>
    <revision>
      <id>4800</id>
      <timestamp>2012-06-27T17:52:13Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:52, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:61.16.146.180</title>
    <ns>3</ns>
    <id>2591</id>
      <sha1>46j8kxagpnnb62trr3bzsofc71j0xxs</sha1>
    <revision>
      <id>4993</id>
      <timestamp>2013-03-07T12:23:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1113">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:Support]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:61.234.121.35</title>
    <ns>3</ns>
    <id>2376</id>
      <sha1>ln4cmavih9vmxblw5p9mrd1joq7hx7y</sha1>
    <revision>
      <id>4738</id>
      <timestamp>2012-05-21T00:00:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 00:00, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:61.4.122.101</title>
    <ns>3</ns>
    <id>2200</id>
      <sha1>5nyo7c2572jn55ra9uhc5n6et5ws2a9</sha1>
    <revision>
      <id>4538</id>
      <timestamp>2012-01-11T20:42:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:42, January 11, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:62.149.194.166</title>
    <ns>3</ns>
    <id>2384</id>
      <sha1>t1h57z3yrvpdngia9ry8artai628fk5</sha1>
    <revision>
      <id>4746</id>
      <timestamp>2012-05-21T02:23:31Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="475">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 02:23, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:62.157.245.100</title>
    <ns>3</ns>
    <id>2572</id>
      <sha1>6ekwsy5u1ej7knb56yem8y6u846knfu</sha1>
    <revision>
      <id>4968</id>
      <timestamp>2012-12-23T09:31:54Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1122">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki lyrics]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:62.240.76.163</title>
    <ns>3</ns>
    <id>2226</id>
      <sha1>4eby84mj8qf8sga1avp9od3espzvr2c</sha1>
    <revision>
      <id>4570</id>
      <timestamp>2012-02-21T23:54:31Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="476">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki:SOAP/client''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 23:54, February 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:64.222.144.169</title>
    <ns>3</ns>
    <id>2602</id>
      <sha1>cdgzqwqw9oke9vc63abbkdfodc7ifch</sha1>
    <revision>
      <id>5009</id>
      <timestamp>2013-04-09T03:05:27Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1119">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki API]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:64.237.59.148</title>
    <ns>3</ns>
    <id>2235</id>
      <sha1>rt70jzx0hwqjnotfxsw6xjaw3vsd5pm</sha1>
    <revision>
      <id>4579</id>
      <timestamp>2012-02-22T04:28:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="473">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/REST''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:28, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:64.5.53.165</title>
    <ns>3</ns>
    <id>2289</id>
      <sha1>73p1trtrip0hylh0adkmtba00u4fc7y</sha1>
    <revision>
      <id>4638</id>
      <timestamp>2012-03-02T12:23:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="462">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Quick Start''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 12:23, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:65.255.37.181</title>
    <ns>3</ns>
    <id>2418</id>
      <sha1>7ca3lra7jfpkzuqd28ku34ufr601ozy</sha1>
    <revision>
      <id>4780</id>
      <timestamp>2012-06-12T04:59:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki lyrics''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:59, June 12, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:65.30.144.222</title>
    <ns>3</ns>
    <id>2566</id>
      <sha1>ny2cs7ydjrc6p465c3m035q9h5js5gn</sha1>
    <revision>
      <id>4960</id>
      <timestamp>2012-12-19T23:37:20Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1134">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:Young D.T.-Whatever he Likes]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:67.228.164.226</title>
    <ns>3</ns>
    <id>2113</id>
      <sha1>s7iolnph0aigxhxrzsb1ww4rks5o3f0</sha1>
    <revision>
      <id>4146</id>
      <timestamp>2011-10-12T08:12:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="700">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:User talk:TranStanley]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:68.118.156.132</title>
    <ns>3</ns>
    <id>2382</id>
      <sha1>t1h57z3yrvpdngia9ry8artai628fk5</sha1>
    <revision>
      <id>4744</id>
      <timestamp>2012-05-21T02:23:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="475">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 02:23, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:68.68.31.106</title>
    <ns>3</ns>
    <id>2285</id>
      <sha1>ctzufb1a82sjlhweet181hmdfn126c7</sha1>
    <revision>
      <id>4634</id>
      <timestamp>2012-03-02T09:11:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 09:11, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:70.99.206.242</title>
    <ns>3</ns>
    <id>2580</id>
      <sha1>6kvw5buoc4qxrgfal9nyxqnuzuft3tf</sha1>
    <revision>
      <id>4979</id>
      <timestamp>2013-02-03T15:37:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1157">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:\&quot;http://community.wikia.com/wiki/Wikia:Licensing\&quot;]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:71.198.136.170</title>
    <ns>3</ns>
    <id>2055</id>
      <sha1>mdi98gplwwqi7yctzinhl1bup29uxrh</sha1>
    <revision>
      <id>3945</id>
      <timestamp>2011-09-28T01:23:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Quick Start''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 01:23, September 28, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:71.215.147.118</title>
    <ns>3</ns>
    <id>2388</id>
      <sha1>laes2sfltqdyecmjaukjjg1b4gqljar</sha1>
    <revision>
      <id>4750</id>
      <timestamp>2012-05-21T04:58:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="475">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:58, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:71.251.93.149</title>
    <ns>3</ns>
    <id>2118</id>
      <sha1>kp0qocgqleqkme97icdivgbnf4ik2m3</sha1>
    <revision>
      <id>4151</id>
      <timestamp>2011-10-12T13:11:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="690">==Welcome==

Hi, welcome to Wikia API Wiki. Thanks for your edit to the [[:Quick Start]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, and there are no local admins here, you may want to visit the [[wikia:Forum:Community Central Forum|forums on the Community Central Wiki]]. You can also check our [[w:c:community:Blog:Wikia Staff Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. 

Happy editing, [[User:TranStanley|TranStanley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:74.105.118.14</title>
    <ns>3</ns>
    <id>2548</id>
      <sha1>rvq5k3y6ftgy7kucisi79hakecj3bbg</sha1>
    <revision>
      <id>4933</id>
      <timestamp>2012-11-05T22:46:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Category:Browse''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:46, November 5, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:74.120.190.9</title>
    <ns>3</ns>
    <id>2674</id>
      <sha1>87ut6qg7il2ni4oktbm02rhzva07t1p</sha1>
    <revision>
      <id>5151</id>
      <timestamp>2013-09-18T19:59:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="474">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Wikia Content API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 19:59, September 18, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:74.52.221.50</title>
    <ns>3</ns>
    <id>2473</id>
      <sha1>ob2dzn6gcrq3jypun968fwb4fmlbqss</sha1>
    <revision>
      <id>4836</id>
      <timestamp>2012-06-28T11:03:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki lyrics''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:03, June 28, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:74.85.27.254</title>
    <ns>3</ns>
    <id>2202</id>
      <sha1>anze4auk987os0v4z352zof55fd8zte</sha1>
    <revision>
      <id>4540</id>
      <timestamp>2012-01-11T20:45:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="462">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Zafesoft''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:45, January 11, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:74.93.189.161</title>
    <ns>3</ns>
    <id>2349</id>
      <sha1>at3w8ru18npgtv0kv8hpqgdbtpoar63</sha1>
    <revision>
      <id>4704</id>
      <timestamp>2012-04-05T04:30:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="476">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:30, April 5, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:75.99.185.2</title>
    <ns>3</ns>
    <id>2266</id>
      <sha1>3at86lkmmch050hgd9bmyr8erghtgbq</sha1>
    <revision>
      <id>4612</id>
      <timestamp>2012-02-24T06:20:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:20, February 24, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:78.12.150.172</title>
    <ns>3</ns>
    <id>2333</id>
      <sha1>oy1ddok45ygabvi8fhjuebg5m8s7brs</sha1>
    <revision>
      <id>4688</id>
      <timestamp>2012-03-18T21:28:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 21:28, March 18, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:78.12.179.143</title>
    <ns>3</ns>
    <id>2358</id>
      <sha1>gzqztfkspkyi77osb2n5ygd1vgqpx9i</sha1>
    <revision>
      <id>4718</id>
      <timestamp>2012-05-06T16:15:27Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="462">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 16:15, May 6, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:79.19.170.139</title>
    <ns>3</ns>
    <id>2184</id>
      <sha1>l5hsnhp9xpdi3l7jdk8ghgb5oz3bn5d</sha1>
    <revision>
      <id>4503</id>
      <timestamp>2011-12-19T17:35:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki Apps''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:35, December 19, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:81.88.255.51</title>
    <ns>3</ns>
    <id>2400</id>
      <sha1>er6zoph6ie0fn7i0kjkhs9vdup9ignm</sha1>
    <revision>
      <id>4762</id>
      <timestamp>2012-05-23T06:20:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="475">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:20, May 23, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:82.80.135.128</title>
    <ns>3</ns>
    <id>2718</id>
      <sha1>r6c64cy3h98pgb5b6jm6fgwjnks6xol</sha1>
    <revision>
      <id>5247</id>
      <timestamp>2013-12-11T16:59:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="474">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''LyricWiki API/REST''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 16:59, December 11, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:83.109.187.123</title>
    <ns>3</ns>
    <id>2191</id>
      <sha1>2ad928aqh7zf3ihsz8h2czjid58bj67</sha1>
    <revision>
      <id>4522</id>
      <timestamp>2011-12-26T18:17:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="469">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Category:Files''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:17, December 26, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:83.110.234.180</title>
    <ns>3</ns>
    <id>2398</id>
      <sha1>7dyfjrcm2any22po1a2lih6jmr9uqwd</sha1>
    <revision>
      <id>4760</id>
      <timestamp>2012-05-23T04:28:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:28, May 23, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:84.124.4.90</title>
    <ns>3</ns>
    <id>2243</id>
      <sha1>kjeu6lepzyr6u4h3qhm3urzmanlrx8r</sha1>
    <revision>
      <id>4588</id>
      <timestamp>2012-02-22T06:54:01Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:54, February 22, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:84.40.236.1</title>
    <ns>3</ns>
    <id>2519</id>
      <sha1>mapta9lx4fz26oebzejoq4rtvt44ci7</sha1>
    <revision>
      <id>4885</id>
      <timestamp>2012-08-02T05:11:59Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="470">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:11, August 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:85.120.9.196</title>
    <ns>3</ns>
    <id>2378</id>
      <sha1>ifqva1qolnz9my71rt8asdv4yeawyn8</sha1>
    <revision>
      <id>4740</id>
      <timestamp>2012-05-21T00:19:39Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="463">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 00:19, May 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:85.230.4.177</title>
    <ns>3</ns>
    <id>2657</id>
      <sha1>0x5m7mu6mx2jr5kbsk3jfw0zgzj2i8t</sha1>
    <revision>
      <id>5078</id>
      <timestamp>2013-09-10T10:57:24Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="461">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Sala''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 10:57, September 10, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:85.248.229.112</title>
    <ns>3</ns>
    <id>2311</id>
      <sha1>haaks67nmt8y01qyzjzisql9dd7e1q7</sha1>
    <revision>
      <id>4660</id>
      <timestamp>2012-03-04T04:50:34Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="476">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:50, March 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:87.1.38.145</title>
    <ns>3</ns>
    <id>2207</id>
      <sha1>oc1zu3g2uu6yp4thv11vi8i621cbf1n</sha1>
    <revision>
      <id>4548</id>
      <timestamp>2012-01-31T20:16:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="472">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API/SOAP''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:16, January 31, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:87.11.16.106</title>
    <ns>3</ns>
    <id>2730</id>
      <sha1>209rk5qv6gmn33cusqny2luzyhjj4w4</sha1>
    <revision>
      <id>5264</id>
      <timestamp>2013-12-30T21:20:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1143">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:Wikia Content API]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, Brandon Rhea &lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt; 21:20, December 30, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:87.229.24.240</title>
    <ns>3</ns>
    <id>2315</id>
      <sha1>4kc2y93yojnca6nv1wo44ft7kc9uwq1</sha1>
    <revision>
      <id>4664</id>
      <timestamp>2012-03-04T05:26:53Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="464">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 05:26, March 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:89.207.106.13</title>
    <ns>3</ns>
    <id>2317</id>
      <sha1>e1dzylecjly8dqj6bkksla542icj0kk</sha1>
    <revision>
      <id>4666</id>
      <timestamp>2012-03-04T11:01:51Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="476">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:01, March 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:90.194.17.115</title>
    <ns>3</ns>
    <id>2455</id>
      <sha1>0ep9cxnbreo6ox0dz5mi7t0qzqmafwr</sha1>
    <revision>
      <id>4818</id>
      <timestamp>2012-06-27T21:28:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Client libraries''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 21:28, June 27, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:91.224.161.250</title>
    <ns>3</ns>
    <id>2287</id>
      <sha1>7dm7t3zh79h8gdwzqxjm6cg9m6uvyz3</sha1>
    <revision>
      <id>4636</id>
      <timestamp>2012-03-02T10:29:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="476">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 10:29, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:91.82.250.74</title>
    <ns>3</ns>
    <id>2309</id>
      <sha1>m8z9l8fnux9rwe3cf5iqn4khhnyal2x</sha1>
    <revision>
      <id>4658</id>
      <timestamp>2012-03-04T04:14:09Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Wikia Game Guides''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:14, March 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:92.240.190.14</title>
    <ns>3</ns>
    <id>2678</id>
      <sha1>1pck6vmjddntwu4jhljzlj7ramk666y</sha1>
    <revision>
      <id>5194</id>
      <timestamp>2013-09-20T20:16:57Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="474">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Wikia Content API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:16, September 20, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:94.210.78.146</title>
    <ns>3</ns>
    <id>2632</id>
      <sha1>p8dc0qsho4f20e6vwmio5tstnd6iz62</sha1>
    <revision>
      <id>5048</id>
      <timestamp>2013-06-15T06:53:55Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="465">==Welcome==
Hi, welcome to {{SITENAME}}. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 06:53, June 15, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:94.36.184.6</title>
    <ns>3</ns>
    <id>2526</id>
      <sha1>4dcido98j2z9lsb40gx5b63qsrv9pp0</sha1>
    <revision>
      <id>4902</id>
      <timestamp>2012-09-05T23:19:22Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="468">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 23:19, September 5, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:94.36.194.147</title>
    <ns>3</ns>
    <id>2522</id>
      <sha1>jbgxhcvs0756x141vgmzxye9ge08h6w</sha1>
    <revision>
      <id>4888</id>
      <timestamp>2012-08-11T22:34:30Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="466">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''LyricWiki API''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:34, August 11, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:95.236.32.27</title>
    <ns>3</ns>
    <id>2584</id>
      <sha1>b7d1d6g152w7hesvd9bt0dwl5mv7ua9</sha1>
    <revision>
      <id>4984</id>
      <timestamp>2013-02-16T12:36:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1130">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki Apps]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Sarah Manley|Sarah Manley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:96.27.11.195</title>
    <ns>3</ns>
    <id>2594</id>
      <sha1>mzalfx08yz55nq94hidq5ilcrwkwft6</sha1>
    <revision>
      <id>4998</id>
      <timestamp>2013-03-21T05:34:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1121">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki API]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:DaNASCAT|DaNASCAT]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:98.100.219.130</title>
    <ns>3</ns>
    <id>2587</id>
      <sha1>8lnvjnf2j00d1pyqobm5nivbsnnzudx</sha1>
    <revision>
      <id>4990</id>
      <timestamp>2013-02-28T16:22:52Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1134">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki API/SOAP]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:Sarah Manley|Sarah Manley]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:98.214.34.181</title>
    <ns>3</ns>
    <id>2210</id>
      <sha1>ovb85j5xoh8iua2n8pr7hnlltrthe04</sha1>
    <revision>
      <id>4551</id>
      <timestamp>2012-02-01T04:23:54Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="467">==Welcome==
Hi, welcome to Wikia API Wiki. Thanks for your edit to the '''Documentation''' page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:23, February 1, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:98.215.39.6</title>
    <ns>3</ns>
    <id>2596</id>
      <sha1>acns6svmv130db5ha57rtxphhy0lw9r</sha1>
    <revision>
      <id>5001</id>
      <timestamp>2013-03-21T21:47:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1138">==Welcome==

Hi, welcome to {{SITENAME}}. Thanks for your edit to the [[:LyricWiki API/SOAP/Java &amp; Axis]] page.

'''[[Special:Userlogin|Please sign in and create a user name]]'''. It's an easy way to keep track of your contributions and helps you communicate with the rest of the community.

If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 


Happy editing, [[User:DaNASCAT|DaNASCAT]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Angela</title>
    <ns>3</ns>
    <id>1696</id>
      <sha1>6pcs35pmcinsbupcyfpfccrwn9exsf5</sha1>
    <revision>
      <id>2567</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="26">{{wikia:User talk:Angela}}</text>
    </revision>
  </page>
  <page>
    <title>User talk:Arteku</title>
    <ns>3</ns>
    <id>2212</id>
      <sha1>oyczjvwn83ir31u0y14zdex3n7vbm20</sha1>
    <revision>
      <id>4554</id>
      <timestamp>2012-02-04T16:56:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="293">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''LyricWiki API/SOAP''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 16:56, February 4, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Asl970</title>
    <ns>3</ns>
    <id>2699</id>
      <sha1>pm5skb3rq1pu4yzz45jmptolnfd8qdd</sha1>
    <revision>
      <id>5218</id>
      <timestamp>2013-10-25T20:50:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="293">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''Wikia Content API''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:50, October 25, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Avish1</title>
    <ns>3</ns>
    <id>2720</id>
      <sha1>fhen8uogr8t5phhu3ikt23zo3uhfblx</sha1>
    <revision>
      <id>5250</id>
      <timestamp>2013-12-11T17:58:19Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="299">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User talk:Sean Colombo''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 17:58, December 11, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Batorhos</title>
    <ns>3</ns>
    <id>2372</id>
      <sha1>dftlhsb1o55em6s5zajt5j8b8r2k1hc</sha1>
    <revision>
      <id>4734</id>
      <timestamp>2012-05-14T22:09:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="282">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Quick Start''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 22:09, May 14, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Benna100</title>
    <ns>3</ns>
    <id>2611</id>
      <sha1>pjc2qzykr8uhpv20ogfknawjlhh91p3</sha1>
    <revision>
      <id>5023</id>
      <timestamp>2013-05-07T09:04:53Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="296">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''LyricWiki API/SOAP/Python''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Bigdaddysdomain</title>
    <ns>3</ns>
    <id>2156</id>
      <sha1>cghi74nfuvwcnwjlhcuxn04m6crqm5t</sha1>
    <revision>
      <id>4391</id>
      <timestamp>2011-12-01T15:17:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''SHAUN'S PAGE''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 15:17, December 1, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:Bilal.dar</title>
    <ns>3</ns>
    <id>2614</id>
      <sha1>9dx37o3sb0n88t9i7umxe6ot8qcuo3j</sha1>
    <revision>
      <id>5027</id>
      <timestamp>2013-05-21T12:51:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="290">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''LyricWiki API/REST''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Bluecreststudios</title>
    <ns>3</ns>
    <id>2131</id>
      <sha1>pu0761p761agyclr4r9pt1s0myl3fq0</sha1>
    <revision>
      <id>4217</id>
      <timestamp>2011-10-22T01:19:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;   &lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;Hi Bluecreststudios!&lt;/p&gt;  &lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;Welcome to the Wikia API Wiki! I'...&quot;</comment>
      <text xml:space="preserve" bytes="1253">


&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;Hi Bluecreststudios!&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;Welcome to the Wikia API Wiki! I'm Stan, a member of the API team at Wikia. We're just getting the engine started and are extremely excited for what we're rolling out in the very near future.&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;If you created a Wikia account to request an API key, please sit tight--this feature will be available shortly (and I'll notify you when it's ready). If not, feel free to simply look around or drop by my [http://api.wikia.com/index.php?title=User_talk:TranStanley&amp;action=edit&amp;redlink=1 talk page] to say hello. You also might want to meet [http://api.wikia.com/wiki/User:Sean_Colombo Sean], the tech-lead on our API team (he's a cool guy, I promise). Both of us are happy to answer any of your questions.&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;By the way, we checked out '''Coffee or Beer'''--sweet concept! Catch you later.&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial; &quot;&gt;--[[User:TranStanley|Stanley]] http://images2.wikia.nocookie.net/__cb32675/wikia/images/e/e9/WikiaStaff.png 01:19, October 22, 2011 (UTC)&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4218</id>
      <timestamp>2011-10-22T01:19:55Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1185">
Hi Bluecreststudios!

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;Welcome to the Wikia API Wiki! I'm Stan, a member of the API team at Wikia. We're just getting the engine started and are extremely excited for what we're rolling out in the very near future.&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;If you created a Wikia account to request an API key, please sit tight--this feature will be available shortly (and I'll notify you when it's ready). If not, feel free to simply look around or drop by my [http://api.wikia.com/index.php?title=User_talk:TranStanley&amp;action=edit&amp;redlink=1 talk page] to say hello. You also might want to meet [http://api.wikia.com/wiki/User:Sean_Colombo Sean], the tech-lead on our API team (he's a cool guy, I promise). Both of us are happy to answer any of your questions.&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;By the way, we checked out '''Coffee or Beer'''--sweet concept! Catch you later.&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;--[[User:TranStanley|Stanley]] http://images2.wikia.nocookie.net/__cb32675/wikia/images/e/e9/WikiaStaff.png 01:19, October 22, 2011 (UTC)&lt;/p&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Cebotari.roman</title>
    <ns>3</ns>
    <id>2628</id>
      <sha1>7za3kwrmp6mtlu5vy0tusz5bfaq1rzx</sha1>
    <revision>
      <id>5042</id>
      <timestamp>2013-06-10T12:50:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="316">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''File:Chevrolet-Camaro-Full-HD-Wallpaper.jpg''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:50, June 10, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Chinhodado</title>
    <ns>3</ns>
    <id>2724</id>
      <sha1>h0rqajk5vqib4h5o3fypgkvi0ldwpk7</sha1>
    <revision>
      <id>5257</id>
      <timestamp>2013-12-21T02:46:46Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="294">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''Wikia Content API''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 02:46, December 21, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Dak47922</title>
    <ns>3</ns>
    <id>2298</id>
      <sha1>otgc7h7nxsq8fscr6hjlmnk9dk2353b</sha1>
    <revision>
      <id>4647</id>
      <timestamp>2012-03-02T15:58:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="289">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Wikia Game Guides''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 15:58, March 2, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Danzaver</title>
    <ns>3</ns>
    <id>2533</id>
      <sha1>tff7vw4xpvatce7pzmpo8qjwykxybwq</sha1>
    <revision>
      <id>4912</id>
      <timestamp>2012-09-28T17:23:57Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="295">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''LyricWiki API/SOAP''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:23, September 28, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Dellibovi</title>
    <ns>3</ns>
    <id>2095</id>
      <sha1>7yn4i7d73be0904urzyucmfzpvnirqm</sha1>
    <revision>
      <id>4111</id>
      <timestamp>2011-10-07T18:14:59Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Hello!</comment>
      <text xml:space="preserve" bytes="740">Hi Dellibovi!

Welcome to the Wikia API Wiki! I'm Stan, a member of the API team at Wikia. We're just getting the engine started and are extremely excited for what we're rolling out in the very near future. 

If you created a Wikia account to request an API key, please sit tight--this feature will be available shortly (and I'll notify you when it's ready). If not, feel free to simply look around or drop by my [http://api.wikia.com/index.php?title=User_talk:TranStanley&amp;action=edit&amp;redlink=1 talk page] to say hello. You also might want to meet [[User:Sean_Colombo|Sean]], the tech-lead on our API team (he's a cool guy, I promise).

Anyhow, happy browsing! Catch you later.

[[User:TranStanley|TranStanley]] 18:14, October 7, 2011 (UTC)</text>
    </revision>
    <revision>
      <id>4136</id>
      <timestamp>2011-10-12T00:02:09Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="815">Hi Dellibovi!

Welcome to the Wikia API Wiki! I'm Stan, a member of the API team at Wikia. We're just getting the engine started and are extremely excited for what we're rolling out in the very near future.

If you created a Wikia account to request an API key, please sit tight--this feature will be available shortly (and I'll notify you when it's ready). If not, feel free to simply look around or drop by my [http://api.wikia.com/index.php?title=User_talk:TranStanley&amp;action=edit&amp;redlink=1 talk page] to say hello. You also might want to meet [[User:Sean_Colombo|Sean]], the tech-lead on our API team (he's a cool guy, I promise).

Anyhow, happy browsing! Catch you later.

--[[User:TranStanley|Stanley]] http://images2.wikia.nocookie.net/__cb32675/wikia/images/e/e9/WikiaStaff.png 00:02, October 12, 2011 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Ecouteapp</title>
    <ns>3</ns>
    <id>2555</id>
      <sha1>9fwd948m46lc1fjlues3dlbn4u9otvk</sha1>
    <revision>
      <id>4941</id>
      <timestamp>2012-11-06T19:35:14Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="286">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''LyricWiki API''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 19:35, November 6, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:ElsbridgeStationFan1995</title>
    <ns>3</ns>
    <id>2680</id>
      <sha1>6y01lfng79lnghhsham9av6x9i9gehk</sha1>
    <revision>
      <id>5196</id>
      <timestamp>2013-09-20T20:49:28Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="306">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:ElsbridgeStationFan1995''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:49, September 20, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Faith1324</title>
    <ns>3</ns>
    <id>2336</id>
      <sha1>m4xvwhflxaron4c1etvvw4s39igv887</sha1>
    <revision>
      <id>4691</id>
      <timestamp>2012-03-26T19:10:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="286">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''LyricWiki API''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 19:10, March 26, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Fassbrause</title>
    <ns>3</ns>
    <id>2593</id>
      <sha1>58iccm34tdsjxduzf50ovj57mn3rbls</sha1>
    <revision>
      <id>4996</id>
      <timestamp>2013-03-21T02:16:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="940">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:LyricWiki Apps]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:DaNASCAT|DaNASCAT]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Foyleburns</title>
    <ns>3</ns>
    <id>2363</id>
      <sha1>knbf2vwwgl0woupwzgb4y2d8r1d1i5k</sha1>
    <revision>
      <id>4723</id>
      <timestamp>2012-05-08T04:42:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="285">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:Foyleburns''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:42, May 8, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Ghhghgh</title>
    <ns>3</ns>
    <id>2726</id>
      <sha1>tlbkdf3hxzwr5dd7lqmky0rngx4qdk5</sha1>
    <revision>
      <id>5260</id>
      <timestamp>2013-12-23T01:13:25Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="961">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:Wikia Content API]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, Brandon Rhea &lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt; 01:13, December 23, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Iggyvolz</title>
    <ns>3</ns>
    <id>2650</id>
      <sha1>mhcnj1g0tfj1p0phldzectr818vor6e</sha1>
    <revision>
      <id>5067</id>
      <timestamp>2013-08-27T23:40:57Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="288">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''Documentation''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 23:40, August 27, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Jbrower95</title>
    <ns>3</ns>
    <id>2502</id>
      <sha1>infs70ezfcv3o9rg26s0thleldcciom</sha1>
    <revision>
      <id>4867</id>
      <timestamp>2012-07-09T17:10:41Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="284">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''LyricWiki API''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 17:10, July 9, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Jimbo Wales</title>
    <ns>3</ns>
    <id>1682</id>
      <sha1>jwmogq242qr31y4xmxvjn34rwxouzwt</sha1>
    <revision>
      <id>2449</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="57">:''Please leave messages for me at the end of this page''</text>
    </revision>
  </page>
  <page>
    <title>User talk:Joeyaa</title>
    <ns>3</ns>
    <id>2187</id>
      <sha1>69nymyghg0q8602ygya8cdbsv30f0z2</sha1>
    <revision>
      <id>4515</id>
      <timestamp>2011-12-25T12:12:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="301">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 12:12, December 25, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:KORNiUX</title>
    <ns>3</ns>
    <id>2736</id>
      <sha1>bpqidvqfqjvq3qbx3mi6tc12kka6vg0</sha1>
    <revision>
      <id>5271</id>
      <timestamp>2014-01-05T21:56:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="954">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:Wikia Content API]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, DaNASCAT&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt; 21:56, January 5, 2014 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Kangaroopower</title>
    <ns>3</ns>
    <id>2499</id>
      <sha1>jyni79s5iti5bfnm3fs90p6t8mt56xi</sha1>
    <revision>
      <id>4864</id>
      <timestamp>2012-07-09T04:37:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="282">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Quick Start''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 04:37, July 9, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Katai.phraoorchids</title>
    <ns>3</ns>
    <id>2181</id>
      <sha1>9pyixb1ceji8wxzgg3pt59293xdc5y4</sha1>
    <revision>
      <id>4497</id>
      <timestamp>2011-12-13T11:05:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="299">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:Katai.phraoorchids''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 11:05, December 13, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:Kentasan</title>
    <ns>3</ns>
    <id>2578</id>
      <sha1>0vds8w7bniihfty3l6c0iplel8g3m91</sha1>
    <revision>
      <id>4977</id>
      <timestamp>2013-01-10T21:30:41Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="937">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:User:Kentasan]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:LPMissy</title>
    <ns>3</ns>
    <id>2411</id>
      <sha1>hfsfktkrtdb466ykpgpev6enyrh4ssd</sha1>
    <revision>
      <id>4774</id>
      <timestamp>2012-06-03T06:54:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="283">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:LPMissy''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 06:54, June 3, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Lordxeen46</title>
    <ns>3</ns>
    <id>2544</id>
      <sha1>9g3rkury6t04clxsk83r6j9yl4f64js</sha1>
    <revision>
      <id>4928</id>
      <timestamp>2012-10-12T09:08:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="292">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Wikia Game Guides''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 09:08, October 12, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:LyleArgabright</title>
    <ns>3</ns>
    <id>2353</id>
      <sha1>9gwevia84ssdnfy099m0z7b94vowa7m</sha1>
    <revision>
      <id>4709</id>
      <timestamp>2012-04-21T07:29:07Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="286">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Documentation''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 07:29, April 21, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Pandora069</title>
    <ns>3</ns>
    <id>2560</id>
      <sha1>727s9bgtbahszpys92nx5dl3uegwxw1</sha1>
    <revision>
      <id>4953</id>
      <timestamp>2012-12-12T03:21:26Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="942">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:Help:Wiki activity]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Penguin-Pal</title>
    <ns>3</ns>
    <id>2738</id>
      <sha1>al4nedu1tetlnh0gng8kp7xmqls2xwq</sha1>
    <revision>
      <id>5274</id>
      <timestamp>2014-01-07T13:27:53Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="956">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:FedericoThoma230]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, Rappy 4187 &lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt; 13:27, January 7, 2014 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:PinkiePiefan</title>
    <ns>3</ns>
    <id>2205</id>
      <sha1>913wjzv8fs9ssbkdk7j5npz0rr22ha1</sha1>
    <revision>
      <id>4545</id>
      <timestamp>2012-01-16T13:32:21Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="292">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:PinkiePiefan''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 13:32, January 16, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Potassium19</title>
    <ns>3</ns>
    <id>2688</id>
      <sha1>al4p18umnt6c6lp5mokqmrojtb3zpql</sha1>
    <revision>
      <id>5207</id>
      <timestamp>2013-09-30T22:28:12Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="297">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''JS MediaWiki Client''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 22:28, September 30, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Pvagare</title>
    <ns>3</ns>
    <id>2625</id>
      <sha1>2cp9y1fr84pr58taeo6yby842d04sgn</sha1>
    <revision>
      <id>5039</id>
      <timestamp>2013-05-29T14:40:50Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="293">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''File:Ajax-loader1.gif''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 14:40, May 29, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Razorgirl</title>
    <ns>3</ns>
    <id>2683</id>
      <sha1>6vbch4ubp8cnuod4dkdu0ywu2ue4upx</sha1>
    <revision>
      <id>5199</id>
      <timestamp>2013-09-22T20:28:37Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="295">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''Wikia Game Guides''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:28, September 22, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Razorruss</title>
    <ns>3</ns>
    <id>2545</id>
      <sha1>ez0xz2u77plphlryduvodykcnuqflrv</sha1>
    <revision>
      <id>4929</id>
      <timestamp>2012-10-21T15:31:33Z</timestamp>
      <contributor>
        <username>Razorruss</username>
        <id>5646477</id>
      </contributor>
      <comment>Russ's Wiki API Page</comment>
      <text xml:space="preserve" bytes="191">[http://turntable.fm/genre_gems_top_tier_playlists Genre Gem Top Tier Playists - TT.fm Radio Station] [[User:Razorruss|Razorruss]] ([[User talk:Razorruss|talk]]) 15:31, October 21, 2012 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:SVG</title>
    <ns>3</ns>
    <id>2041</id>
      <sha1>6x8cx9ddihnz4f0rag0bwrfz1iq02ui</sha1>
    <revision>
      <id>3899</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="19">{{w:User talk:SVG}}</text>
    </revision>
  </page>
  <page>
    <title>User talk:Samma89</title>
    <ns>3</ns>
    <id>2667</id>
      <sha1>o5hk5hnb8as3rix90le1om0fwll1n2b</sha1>
    <revision>
      <id>5104</id>
      <timestamp>2013-09-18T18:22:59Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="294">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''File:Cgoerge.jpg''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 18:22, September 18, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Sashankgogula</title>
    <ns>3</ns>
    <id>2655</id>
      <sha1>9roolv3njjqmb166cm0w7m3gff66iy7</sha1>
    <revision>
      <id>5074</id>
      <timestamp>2013-09-08T00:25:39Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="290">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''Documentation''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 00:25, September 8, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Sbluen</title>
    <ns>3</ns>
    <id>2570</id>
      <sha1>omjye7npilf9g52bclv5sklwfrgx5zo</sha1>
    <revision>
      <id>4966</id>
      <timestamp>2012-12-21T18:20:57Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="937">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:Documentation]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Sean Colombo</title>
    <ns>3</ns>
    <id>2044</id>
      <sha1>l426kh5he9295h3yq8fnuuue7e3n778</sha1>
    <revision>
      <id>3904</id>
      <timestamp>2011-08-16T19:58:36Z</timestamp>
      <contributor>
        <username>Sannse</username>
        <id>8</id>
      </contributor>
      <minor/>
      <comment>Welcome Message</comment>
      <text xml:space="preserve" bytes="2145">== Welcome! ==
&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes. 

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time. 

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page. 

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- [[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4668</id>
      <timestamp>2012-03-09T14:45:55Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <text xml:space="preserve" bytes="3939">== Welcome! ==
&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes. 

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time. 

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page. 

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- [[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;Hi Sean,&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I've been experimenting with using the lyricwiki API in an iPhone application. Everything seems to be working well, and I even managed to get lyrics submission working so that users can correct / add lyrics.&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;But I just noticed the FAQ on the API documentation page that says we must open the lyricswiki page inside a browser-panel with javascript enabled. Would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (&lt;/span&gt;http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;)&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I definitely want to abide by the lyricwiki license terms, but am hoping there's a way to do so that fits better with the visual design of my app. I could show you a screenshot if that would help you decide.&lt;/span&gt;

Thanks!

[[User:Arteku|Arteku]] 14:45, March 9, 2012 (UTC)</text>
    </revision>
    <revision>
      <id>4676</id>
      <timestamp>2012-03-09T19:56:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>link to reply</comment>
      <text xml:space="preserve" bytes="4198">== Welcome! ==
&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes. 

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time. 

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page. 

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- [[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;Hi Sean,&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I've been experimenting with using the lyricwiki API in an iPhone application. Everything seems to be working well, and I even managed to get lyrics submission working so that users can correct / add lyrics.&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;But I just noticed the FAQ on the API documentation page that says we must open the lyricswiki page inside a browser-panel with javascript enabled. Would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (&lt;/span&gt;http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;)&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I definitely want to abide by the lyricwiki license terms, but am hoping there's a way to do so that fits better with the visual design of my app. I could show you a screenshot if that would help you decide.&lt;/span&gt;

Thanks!

[[User:Arteku|Arteku]] 14:45, March 9, 2012 (UTC)

:Hi Arteku,
:Sorry for the delay in responding.  I answered this below your comment on the FAQ so that others can see the answer if they have the same question: [[LyricWiki_API#FAQs]]. Thanks!
: -[[User:Sean Colombo|Sean Colombo]] 19:56, March 9, 2012 (UTC)</text>
    </revision>
    <revision>
      <id>4921</id>
      <timestamp>2012-10-08T18:23:57Z</timestamp>
      <contributor>
        <username>VicVal</username>
        <id>1786536</id>
      </contributor>
      <text xml:space="preserve" bytes="4365">== Welcome! ==
&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes. 

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time. 

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page. 

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- [[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;Hi Sean,&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I've been experimenting with using the lyricwiki API in an iPhone application. Everything seems to be working well, and I even managed to get lyrics submission working so that users can correct / add lyrics.&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;But I just noticed the FAQ on the API documentation page that says we must open the lyricswiki page inside a browser-panel with javascript enabled. Would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (&lt;/span&gt;http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;)&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I definitely want to abide by the lyricwiki license terms, but am hoping there's a way to do so that fits better with the visual design of my app. I could show you a screenshot if that would help you decide.&lt;/span&gt;

Thanks!

[[User:Arteku|Arteku]] 14:45, March 9, 2012 (UTC)

:Hi Arteku,
:Sorry for the delay in responding.  I answered this below your comment on the FAQ so that others can see the answer if they have the same question: [[LyricWiki_API#FAQs]]. Thanks!
: -[[User:Sean Colombo|Sean Colombo]] 19:56, March 9, 2012 (UTC)

Hi Sean!

I left a question on the [[Quick start]] page, hope that you can help :-) --[[User:VicVal|VicVal]] ([[User talk:VicVal|talk]]) 18:23, October 8, 2012 (UTC)</text>
    </revision>
    <revision>
      <id>4922</id>
      <timestamp>2012-10-08T19:23:13Z</timestamp>
      <contributor>
        <username>VicVal</username>
        <id>1786536</id>
      </contributor>
      <minor/>
      <comment>Linkfix and subhead</comment>
      <text xml:space="preserve" bytes="4391">== Welcome! ==

&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes.

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time.

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page.

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- 
[[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;Hi Sean,&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I've been experimenting with using the lyricwiki API in an iPhone application. Everything seems to be working well, and I even managed to get lyrics submission working so that users can correct / add lyrics.&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;But I just noticed the FAQ on the API documentation page that says we must open the lyricswiki page inside a browser-panel with javascript enabled. Would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (&lt;/span&gt;http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;)&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I definitely want to abide by the lyricwiki license terms, but am hoping there's a way to do so that fits better with the visual design of my app. I could show you a screenshot if that would help you decide.&lt;/span&gt;

Thanks!

[[User:Arteku|Arteku]] 14:45, March 9, 2012 (UTC)

:Hi Arteku,
:Sorry for the delay in responding. I answered this below your comment on the FAQ so that others can see the answer if they have the same question: [[LyricWiki_API#FAQs]]. Thanks!
: -[[User:Sean Colombo|Sean Colombo]] 19:56, March 9, 2012 (UTC)

==Help with API key usage==
Hi Sean!

I left a question on the [[Quick Start]] page, hope that you can help :-) --[[User:VicVal|VicVal]] ([[User talk:VicVal|talk]]) 18:23, October 8, 2012 (UTC)</text>
    </revision>
    <revision>
      <id>4925</id>
      <timestamp>2012-10-08T20:21:31Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* Help with API key usage */</comment>
      <text xml:space="preserve" bytes="4710">== Welcome! ==

&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes.

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time.

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page.

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- 
[[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;Hi Sean,&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I've been experimenting with using the lyricwiki API in an iPhone application. Everything seems to be working well, and I even managed to get lyrics submission working so that users can correct / add lyrics.&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;But I just noticed the FAQ on the API documentation page that says we must open the lyricswiki page inside a browser-panel with javascript enabled. Would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (&lt;/span&gt;http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;)&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I definitely want to abide by the lyricwiki license terms, but am hoping there's a way to do so that fits better with the visual design of my app. I could show you a screenshot if that would help you decide.&lt;/span&gt;

Thanks!

[[User:Arteku|Arteku]] 14:45, March 9, 2012 (UTC)

:Hi Arteku,
:Sorry for the delay in responding. I answered this below your comment on the FAQ so that others can see the answer if they have the same question: [[LyricWiki_API#FAQs]]. Thanks!
: -[[User:Sean Colombo|Sean Colombo]] 19:56, March 9, 2012 (UTC)

==Help with API key usage==
Hi Sean!

I left a question on the [[Quick Start]] page, hope that you can help :-) --[[User:VicVal|VicVal]] ([[User talk:VicVal|talk]]) 18:23, October 8, 2012 (UTC)

: Answered. As a side-note, I don't work at Wikia anymore (switch to [http://twitter.com/bluelinegames game development] just a couple of weeks ago).  Fixed my userpage now ;)
: Good luck w/whatever you're making! :)
: -[[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:21, October 8, 2012 (UTC)</text>
    </revision>
    <revision>
      <id>5248</id>
      <timestamp>2013-12-11T17:57:05Z</timestamp>
      <contributor>
        <username>Avish1</username>
        <id>24280388</id>
      </contributor>
      <text xml:space="preserve" bytes="5079">== Welcome! ==

&lt;div style=&quot;font-size:120%; line-height:1.4em;&quot;&gt;Congratulations on starting '''Wikia API Wiki'''! It's a brand new project, so it needs a lot of love. Here are five tips to make your wiki great.

* '''It's all yours right now -- enjoy it!''' Once your wiki takes off, lots of people will read what you write. Right now, nobody's looking over your shoulder yet, so feel free to try things out and make mistakes.

* '''Make lots of short pages!''' The hardest thing about writing is looking at a blank page and not knowing where to start. It's a lot easier once you write down your first couple sentences. So take a deep breath, and jump in -- make ten really short pages, one right after another. Once you've started, you can build the pages up slowly, adding a little bit at a time.

* '''Link your pages together!''' Links help you and your readers get from one page to another, so whenever you mention the subject of another page, use the &quot;Add a Link&quot; button to make a link to that page. You should also use the front page to link to all of the most important pages on your wiki. Describe what your wiki is about on the main page, and include links to help your readers find their way around.

* '''Add pictures!''' A well-chosen picture can make a bland wiki page come to life. When you're writing a page, use the &quot;Add a Picture&quot; button to upload a picture from your computer onto the page.

* '''When you're ready -- tell your friends!''' Once you've started a bunch of pages, linked them together and added some pictures, you'll be ready to start showing off your wiki to the world. You probably know people who are interested in the same thing that you are, so tell your friends to check out your new site. Those are your first readers and potential contributors, so give them lots of encouragement.

A good way to stay up-to-date with the latest news and events around Wikia is to visit our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]]. If at any time you get stuck, feel free to write to us through our [[Special:Contact|contact form]] -- we're happy to help!

Have fun!

-- 
[[User:Sannse|Sannse]] &lt;staff /&gt;&lt;/div&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;Hi Sean,&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I've been experimenting with using the lyricwiki API in an iPhone application. Everything seems to be working well, and I even managed to get lyrics submission working so that users can correct / add lyrics.&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;But I just noticed the FAQ on the API documentation page that says we must open the lyricswiki page inside a browser-panel with javascript enabled. Would it be okay to show the lyrics in a UITextView object so long as I also show the ad in the rtMatcher div and load the page offscreen to execute the javascript tracking pixels? That seems to be similar to the approach taken by the lyricswiki app (&lt;/span&gt;http://itunes.apple.com/us/app/lyricwiki-lyrics/id447519370?mt=8&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;)&lt;/span&gt;

&lt;span style=&quot;color: rgb(34, 34, 34); font-family: arial, sans-serif; font-style: normal; line-height: normal; background-color: rgba(255, 255, 255, 0.917969); &quot;&gt;I definitely want to abide by the lyricwiki license terms, but am hoping there's a way to do so that fits better with the visual design of my app. I could show you a screenshot if that would help you decide.&lt;/span&gt;

Thanks!

[[User:Arteku|Arteku]] 14:45, March 9, 2012 (UTC)

:Hi Arteku,
:Sorry for the delay in responding. I answered this below your comment on the FAQ so that others can see the answer if they have the same question: [[LyricWiki_API#FAQs]]. Thanks!
: -[[User:Sean Colombo|Sean Colombo]] 19:56, March 9, 2012 (UTC)

==Help with API key usage==
Hi Sean!

I left a question on the [[Quick Start]] page, hope that you can help :-) --[[User:VicVal|VicVal]] ([[User talk:VicVal|talk]]) 18:23, October 8, 2012 (UTC)

: Answered. As a side-note, I don't work at Wikia anymore (switch to [http://twitter.com/bluelinegames game development] just a couple of weeks ago).  Fixed my userpage now ;)
: Good luck w/whatever you're making! :)
: -[[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 20:21, October 8, 2012 (UTC)

Hi Sean,

I have a question about LyricWiki.

I'm interested to get lyrics by a youtube title so it can be, let's say: &quot;Nirvana - In Bloom&quot;.

Since there are 2 arguments I need to send to get the lyrics which are the Artist and Song I need to divide the youtube title to 2 parts.

Is there an option to just send the &quot;Nirvana - In Bloom&quot; and get the lyrics ?

Thanks.</text>
    </revision>
  </page>
  <page>
    <title>User talk:SouthParkfan098</title>
    <ns>3</ns>
    <id>2416</id>
      <sha1>szjahm7mqoti61ask4p2c35u7qwta3i</sha1>
    <revision>
      <id>4778</id>
      <timestamp>2012-06-11T00:05:15Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="292">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:SouthParkfan098''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 00:05, June 11, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Steriousman</title>
    <ns>3</ns>
    <id>2563</id>
      <sha1>5ptlodipg2f2rdd22bymf356cmjj573</sha1>
    <revision>
      <id>4956</id>
      <timestamp>2012-12-14T09:33:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="938">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:User:Steriousman]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:Sannse|Sannse]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Talhaaah</title>
    <ns>3</ns>
    <id>2176</id>
      <sha1>lrgeh0lkk5zn2yizriz6rdg5fahip41</sha1>
    <revision>
      <id>4470</id>
      <timestamp>2011-12-12T19:41:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="289">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:Talhaaah''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 19:41, December 12, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:Tharindu DG</title>
    <ns>3</ns>
    <id>2321</id>
      <sha1>iw7y9l7o1tg4h1fmxvt4nxulutcmh2l</sha1>
    <revision>
      <id>4673</id>
      <timestamp>2012-03-09T18:50:39Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="290">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''LyricWiki API/REST''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 18:50, March 9, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:The Milkman</title>
    <ns>3</ns>
    <id>2646</id>
      <sha1>1c3emf34urifr6w8vctfx21ic1jexbe</sha1>
    <revision>
      <id>5059</id>
      <timestamp>2013-08-11T19:50:29Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="292">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''Wikia Game Guides''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 19:50, August 11, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:Themech</title>
    <ns>3</ns>
    <id>2169</id>
      <sha1>pfxrtunrlbs84iq33svi3xnm1jzy7q9</sha1>
    <revision>
      <id>4458</id>
      <timestamp>2011-12-09T10:42:03Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''User:Themech''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 10:42, December 9, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:Tm T</title>
    <ns>3</ns>
    <id>2153</id>
      <sha1>7vidlr9pic4opxd5xj8utlf0gp2zk3r</sha1>
    <revision>
      <id>4388</id>
      <timestamp>2011-11-30T20:14:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="293">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Wikia Game Guides''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:14, November 30, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:ToaMeiko</title>
    <ns>3</ns>
    <id>2616</id>
      <sha1>dpsesxk2f3p0jpt2h4466pk4nx77tjf</sha1>
    <revision>
      <id>5030</id>
      <timestamp>2013-05-22T15:58:24Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="285">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:ToaMeiko''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 15:58, May 22, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:TyA</title>
    <ns>3</ns>
    <id>2158</id>
      <sha1>0hfnl2ydb13gvrsy435etvja6k2mqz8</sha1>
    <revision>
      <id>4394</id>
      <timestamp>2011-12-02T03:17:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>welcoming new contributor</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''SHAUN'S PAGE''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:17, December 2, 2011</text>
    </revision>
    <revision>
      <id>4618</id>
      <timestamp>2012-03-01T00:12:20Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <minor/>
      <comment>moved [[User talk:ZamorakO o]] to [[User talk:TyA]]: Automatically moved page while renaming the user &quot;[[User:ZamorakO o|ZamorakO o]]&quot; to &quot;[[User:TyA|TyA]]&quot;</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''SHAUN'S PAGE''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:17, December 2, 2011</text>
    </revision>
    <revision>
      <id>4891</id>
      <timestamp>2012-09-04T17:14:39Z</timestamp>
      <contributor>
        <ip>216.66.153.168</ip>
      </contributor>
      <comment>Replaced content with &quot;==.==&quot;</comment>
      <text xml:space="preserve" bytes="5">==.==</text>
    </revision>
    <revision>
      <id>4892</id>
      <timestamp>2012-09-04T17:14:40Z</timestamp>
      <contributor>
        <username>VSTF Bot</username>
        <id>1907256</id>
      </contributor>
      <minor/>
      <comment>Automatically reverted revisions marked as vandalism to User talk:TyA by [[Special:Contributions/216.66.153.168|216.66.153.168]] (Bot action)</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''SHAUN'S PAGE''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:17, December 2, 2011</text>
    </revision>
    <revision>
      <id>4893</id>
      <timestamp>2012-09-04T17:14:55Z</timestamp>
      <contributor>
        <ip>216.66.153.168</ip>
      </contributor>
      <comment>/* Welcome */</comment>
      <text xml:space="preserve" bytes="1">.</text>
    </revision>
    <revision>
      <id>4894</id>
      <timestamp>2012-09-04T17:14:57Z</timestamp>
      <contributor>
        <username>VSTF Bot</username>
        <id>1907256</id>
      </contributor>
      <minor/>
      <comment>Automatically reverted revisions marked as vandalism to User talk:TyA by [[Special:Contributions/216.66.153.168|216.66.153.168]] (Bot action)</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''SHAUN'S PAGE''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:17, December 2, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:ULALA!social</title>
    <ns>3</ns>
    <id>2190</id>
      <sha1>fur2uvx23731s17wlur0gxazf8x5i9m</sha1>
    <revision>
      <id>4518</id>
      <timestamp>2011-12-26T12:04:02Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="289">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''ULALA! social''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 12:04, December 26, 2011</text>
    </revision>
  </page>
  <page>
    <title>User talk:Uberfuzzy</title>
    <ns>3</ns>
    <id>1981</id>
      <sha1>qy3unk3x8v9pfaicy7vdtckk4g01l4m</sha1>
    <revision>
      <id>3673</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="238">Welcome to my talk page. If you have a problem with the content of this wiki, please try to contact [[Special:ListUsers/sysop|admins]] of this wiki first. If you require general assistance from Wikia Staff, please use [[Special:Contact]].</text>
    </revision>
  </page>
  <page>
    <title>User talk:UltimateSupreme</title>
    <ns>3</ns>
    <id>2576</id>
      <sha1>fsr9l40ysy70e2tfbqk18zuhi23usz9</sha1>
    <revision>
      <id>4975</id>
      <timestamp>2012-12-31T16:48:14Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="927">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:Sss]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:Trellar|Trellar]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:VampiresAndWerewolfsareAwesomeAsHell23</title>
    <ns>3</ns>
    <id>2704</id>
      <sha1>j8rkphpyux485xubmgi6u9e4jzbe2sk</sha1>
    <revision>
      <id>5231</id>
      <timestamp>2013-11-25T11:35:29Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="293">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''LyricWiki lyrics''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 11:35, November 25, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:VicVal</title>
    <ns>3</ns>
    <id>2541</id>
      <sha1>tnqzwqggxi0dlhmtc9lufr60oykcnay</sha1>
    <revision>
      <id>4920</id>
      <timestamp>2012-10-08T17:00:01Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="285">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Quick Start''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 16:59, October 8, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:Wayndsouza</title>
    <ns>3</ns>
    <id>2583</id>
      <sha1>gluvp5tpe2pplvaxgbun31e6qyke4x4</sha1>
    <revision>
      <id>4982</id>
      <timestamp>2013-02-11T19:24:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="941">==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the [[:User:Wayndsouza]] page. If you need help, read through our [[w:c:community:Help:Contents|help pages]] or contact a [[Special:Listusers/sysop|local admin]]. If there are no active admins here, stop by [[w:c:community:main page|Community Central]] and check out our [[w:c:community:Forum:Index|forums]]. 

Looking for live help? Then join us for an upcoming [[w:c:community:Webinars|webinar]] to chat with staff and other Wikia editors. You can also check our [[w:c:community:Blog:Wikia_Staff_Blog|Staff blog]] to keep up-to-date with the latest news and events around Wikia. Lastly, check out the [[w:c:video|Wikia Video Library]], where you can find premium licensed videos to add to the wiki. 

All of these links are a great way to start exploring Wikia. 

Happy editing, [[User:DaNASCAT|DaNASCAT]]&lt;staff /&gt; &lt;small&gt;([[w:forums|help forum]] | [[w:sblog|blog]])&lt;/small&gt;</text>
    </revision>
  </page>
  <page>
    <title>User talk:Wikia</title>
    <ns>3</ns>
    <id>1978</id>
      <sha1>523y32wlrciw94v7se887e8h7ugsauc</sha1>
    <revision>
      <id>3687</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="18">{{int:User Wikia}}</text>
    </revision>
    <revision>
      <id>5024</id>
      <timestamp>2013-05-07T09:04:54Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="303">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)</text>
    </revision>
    <revision>
      <id>5028</id>
      <timestamp>2013-05-21T12:51:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="590">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Bilal.dar''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)</text>
    </revision>
    <revision>
      <id>5043</id>
      <timestamp>2013-06-10T12:50:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="883">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Bilal.dar''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Cebotari.roman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:50, June 10, 2013 (UTC)</text>
    </revision>
    <revision>
      <id>5060</id>
      <timestamp>2013-08-11T19:50:29Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1175">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Bilal.dar''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Cebotari.roman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:50, June 10, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:The Milkman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 19:50, August 11, 2013 (UTC)</text>
    </revision>
    <revision>
      <id>5068</id>
      <timestamp>2013-08-27T23:40:58Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1464">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Bilal.dar''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Cebotari.roman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:50, June 10, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:The Milkman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 19:50, August 11, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Iggyvolz''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 23:40, August 27, 2013 (UTC)</text>
    </revision>
    <revision>
      <id>5105</id>
      <timestamp>2013-09-18T18:23:00Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="1755">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Bilal.dar''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Cebotari.roman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:50, June 10, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:The Milkman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 19:50, August 11, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Iggyvolz''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 23:40, August 27, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Samma89''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 18:23, September 18, 2013 (UTC)</text>
    </revision>
    <revision>
      <id>5232</id>
      <timestamp>2013-11-25T11:35:29Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="2076">{{int:User Wikia}}
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Benna100''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 09:04, May 7, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Bilal.dar''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:51, May 21, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Cebotari.roman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 12:50, June 10, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:The Milkman''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 19:50, August 11, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Iggyvolz''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 23:40, August 27, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:Samma89''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 18:23, September 18, 2013 (UTC)
==Welcome==
Hi, welcome to {{SITENAME}}! Thanks for your edit to the '''User:VampiresAndWerewolfsareAwesomeAsHell23''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! [[User:Sean Colombo|Sean Colombo]] ([[User talk:Sean Colombo|talk]]) 11:35, November 25, 2013 (UTC)</text>
    </revision>
  </page>
  <page>
    <title>User talk:XxTimberlakexx</title>
    <ns>3</ns>
    <id>2408</id>
      <sha1>gp5zqtp5ylgqj0q1n6r4vggwk7syl56</sha1>
    <revision>
      <id>4771</id>
      <timestamp>2012-05-26T03:32:13Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="287">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''LyricWiki lyrics''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 03:32, May 26, 2012</text>
    </revision>
  </page>
  <page>
    <title>User talk:ZamorakO o</title>
    <ns>3</ns>
    <id>2270</id>
    <redirect title="User talk:TyA" />
      <sha1>ovihansq4dygnucock8whtqk8qgv5xd</sha1>
    <revision>
      <id>4619</id>
      <timestamp>2012-03-01T00:12:20Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>moved [[User talk:ZamorakO o]] to [[User talk:TyA]]: Automatically moved page while renaming the user &quot;[[User:ZamorakO o|ZamorakO o]]&quot; to &quot;[[User:TyA|TyA]]&quot;</comment>
      <text xml:space="preserve" bytes="27">#REDIRECT [[User talk:TyA]]</text>
    </revision>
  </page>
  <page>
    <title>User talk:Zanimum</title>
    <ns>3</ns>
    <id>2196</id>
      <sha1>smjr4f4jwu30nde5mki6jsh5dzcx0to</sha1>
    <revision>
      <id>4528</id>
      <timestamp>2012-01-07T20:38:14Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>Welcome to Wikia API Wiki!</comment>
      <text xml:space="preserve" bytes="299">==Welcome==
Hi, welcome to Wikia API Wiki! Thanks for your edit to the '''Wikia Challenge: PhotoPop''' page.

Please leave a message on [[User talk:Sean Colombo|my talk page]] if I can help with anything! -- [[User:Sean Colombo|Sean Colombo]] ([[User_talk:Sean Colombo|Talk]]) 20:38, January 7, 2012</text>
    </revision>
  </page>
  <page>
    <title>User:Angela</title>
    <ns>2</ns>
    <id>1297</id>
      <sha1>6jdaft9qjgxl1gl2qu6e1ja6ok6kqp2</sha1>
    <revision>
      <id>3714</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="21">{{wikia:User:Angela}}</text>
    </revision>
  </page>
  <page>
    <title>User:Arteku</title>
    <ns>2</ns>
    <id>2211</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4553</id>
      <timestamp>2012-02-04T16:55:25Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
    <revision>
      <id>4669</id>
      <timestamp>2012-03-09T14:48:05Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <text xml:space="preserve" bytes="150">[[File:Placeholder|thumb|220px]]

I'm developing an iPhone music player app that uses Lyric Wiki.

==App info page==

* [http://arteku.com arteku.com]</text>
    </revision>
    <revision>
      <id>4670</id>
      <timestamp>2012-03-09T14:49:07Z</timestamp>
      <contributor>
        <username>Arteku</username>
        <id>4800611</id>
      </contributor>
      <text xml:space="preserve" bytes="158">[[File:Placeholder|thumb|220px]]

I'm developing an iPhone music player app that uses the Lyric Wiki API.

==App info page==

* [http://arteku.com arteku.com]</text>
    </revision>
  </page>
  <page>
    <title>User:Asl970</title>
    <ns>2</ns>
    <id>2698</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5217</id>
      <timestamp>2013-10-25T20:48:17Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Avatar</title>
    <ns>2</ns>
    <id>1861</id>
      <sha1>49t6bl2rahj9nuum2m37xrgu52ao2i8</sha1>
    <revision>
      <id>2927</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="17">{{w:User:Avatar}}</text>
    </revision>
  </page>
  <page>
    <title>User:Avish1</title>
    <ns>2</ns>
    <id>2719</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5249</id>
      <timestamp>2013-12-11T17:57:05Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Batorhos</title>
    <ns>2</ns>
    <id>2371</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4733</id>
      <timestamp>2012-05-14T22:08:58Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Benna100</title>
    <ns>2</ns>
    <id>2610</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5022</id>
      <timestamp>2013-05-07T09:03:53Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Bigdaddysdomain</title>
    <ns>2</ns>
    <id>2155</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4390</id>
      <timestamp>2011-12-01T15:16:42Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Bilal.dar</title>
    <ns>2</ns>
    <id>2613</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5026</id>
      <timestamp>2013-05-21T12:50:06Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Callofduty4</title>
    <ns>2</ns>
    <id>2520</id>
      <sha1>ppbi9dpqmorjigt135nc0b51p80fusm</sha1>
    <revision>
      <id>4886</id>
      <timestamp>2012-08-05T17:13:40Z</timestamp>
      <contributor>
        <username>URL</username>
        <id>3288694</id>
      </contributor>
      <minor/>
      <comment>Creating userpage for Callofduty4 (Bot action, see [[w:User:URL|this page]] for info)</comment>
      <text xml:space="preserve" bytes="22">{{w:User:Callofduty4}}</text>
    </revision>
  </page>
  <page>
    <title>User:Cebotari.roman</title>
    <ns>2</ns>
    <id>2627</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5041</id>
      <timestamp>2013-06-10T12:49:58Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Chinhodado</title>
    <ns>2</ns>
    <id>2723</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5256</id>
      <timestamp>2013-12-21T02:45:38Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:CreateWiki script</title>
    <ns>2</ns>
    <id>1975</id>
      <sha1>5lc03nsu8f432u8tf169f79aeb5flzl</sha1>
    <revision>
      <id>3811</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="161">The '''CreateWiki script''' sets up pages on newly [[w:special:createwiki|created wikis]]. For [[help:contents|help]], you can [[Special:Contact|contact Wikia]].</text>
    </revision>
  </page>
  <page>
    <title>User:Dak47922</title>
    <ns>2</ns>
    <id>2297</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4646</id>
      <timestamp>2012-03-02T15:57:24Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Danzaver</title>
    <ns>2</ns>
    <id>2532</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4911</id>
      <timestamp>2012-09-26T13:26:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Default</title>
    <ns>2</ns>
    <id>1745</id>
      <sha1>9e57efucz2nl5wo9w4ybttrwhd66k5j</sha1>
    <revision>
      <id>2695</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="243">This account was used by '''[[Wikia:Wikia, Inc.|Wikia, Inc.]]''' to import the starter content to this wiki in an automated way (some templates, MediaWiki messages, and other essentials). 

* ''[[Special:Contributions/Default|Contributions]]''</text>
    </revision>
  </page>
  <page>
    <title>User:Deltaneos</title>
    <ns>2</ns>
    <id>2505</id>
      <sha1>7ctfqb6e92zqbl2efhc2ou9toypqlzu</sha1>
    <revision>
      <id>4870</id>
      <timestamp>2012-07-12T21:25:39Z</timestamp>
      <contributor>
        <username>URL</username>
        <id>3288694</id>
      </contributor>
      <minor/>
      <comment>Creating userpage for Deltaneos (Bot action, see [[w:User:URL|this page]] for info)</comment>
      <text xml:space="preserve" bytes="24">{{w::User:Deltaneos/en}}</text>
    </revision>
  </page>
  <page>
    <title>User:Dopp</title>
    <ns>2</ns>
    <id>2030</id>
      <sha1>85xqim5ryvo8wm1cm5zlqovnv42ewjp</sha1>
    <revision>
      <id>3868</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="19">{{Wikia:User:Dopp}}</text>
    </revision>
  </page>
  <page>
    <title>User:Dvdrtrgn</title>
    <ns>2</ns>
    <id>2173</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4465</id>
      <timestamp>2011-12-10T15:41:47Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
    <revision>
      <id>4466</id>
      <timestamp>2011-12-10T15:44:11Z</timestamp>
      <contributor>
        <username>Dvdrtrgn</username>
        <id>1294429</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="91">

[[File:6131356874_1e123fc437_z.jpg|thumb|236px|Bromance....]]






Come on!{{WelcomeIP}}</text>
    </revision>
    <revision>
      <id>4467</id>
      <timestamp>2011-12-10T15:45:35Z</timestamp>
      <contributor>
        <username>Dvdrtrgn</username>
        <id>1294429</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="90">Come on!

[[File:6131356874_1e123fc437_z.jpg|thumb|236px|Bromance....]]





{{WelcomeIP}}</text>
    </revision>
  </page>
  <page>
    <title>User:Ecouteapp</title>
    <ns>2</ns>
    <id>2554</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4940</id>
      <timestamp>2012-11-06T19:35:08Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Edit page script</title>
    <ns>2</ns>
    <id>1779</id>
      <sha1>or5m76lk8c9vyosfaq46s6520myvkng</sha1>
    <revision>
      <id>2826</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="338">The '''Edit page script''' account is used by Wikia Staff to make automated edits across multiple pages or multiple wikis.

If there is a problem with the content of any pages edited by this script, please inform the [[Wikia:Community Team|Community Team]].

* ''[[Special:Contributions/Edit page script|Edit page script contributions]]''</text>
    </revision>
  </page>
  <page>
    <title>User:ElsbridgeStationFan1995</title>
    <ns>2</ns>
    <id>2679</id>
      <sha1>m6189sghc0sjy6kuehbd3zqht17desp</sha1>
    <revision>
      <id>5195</id>
      <timestamp>2013-09-20T20:29:18Z</timestamp>
      <contributor>
        <username>ElsbridgeStationFan1995</username>
        <id>11038986</id>
      </contributor>
      <comment>Created page with &quot;Hellomim Michael and I'm a passionate wiki developer and hope to learn all there is know about it,&quot;</comment>
      <text xml:space="preserve" bytes="98">Hellomim Michael and I'm a passionate wiki developer and hope to learn all there is know about it,</text>
    </revision>
  </page>
  <page>
    <title>User:Eulalia459678</title>
    <ns>2</ns>
    <id>2504</id>
      <sha1>bkomdqef5gz3p93s3q6rrbsbm650vs9</sha1>
    <revision>
      <id>4869</id>
      <timestamp>2012-07-12T20:42:01Z</timestamp>
      <contributor>
        <username>URL</username>
        <id>3288694</id>
      </contributor>
      <minor/>
      <comment>Creating userpage for Eulalia459678 (Bot action, see [[w:User:URL|this page]] for info)</comment>
      <text xml:space="preserve" bytes="33">{{w:Template:Eulalia459678wikis}}</text>
    </revision>
  </page>
  <page>
    <title>User:Faith1324</title>
    <ns>2</ns>
    <id>2335</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4690</id>
      <timestamp>2012-03-26T19:10:01Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Fassbrause</title>
    <ns>2</ns>
    <id>2592</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4995</id>
      <timestamp>2013-03-21T02:15:51Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Foyleburns</title>
    <ns>2</ns>
    <id>2362</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4722</id>
      <timestamp>2012-05-08T04:41:47Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Ghhghgh</title>
    <ns>2</ns>
    <id>2725</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5259</id>
      <timestamp>2013-12-23T01:11:54Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Grunny</title>
    <ns>2</ns>
    <id>2146</id>
      <sha1>njjx7usppz1tpmlutvzzew1nlf7lr10</sha1>
    <revision>
      <id>4343</id>
      <timestamp>2011-11-14T07:33:51Z</timestamp>
      <contributor>
        <username>Grunny</username>
        <id>11536</id>
      </contributor>
      <comment>Creating user page</comment>
      <text xml:space="preserve" bytes="17">{{w:User:Grunny}}</text>
    </revision>
  </page>
  <page>
    <title>User:Iggyvolz</title>
    <ns>2</ns>
    <id>2649</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5066</id>
      <timestamp>2013-08-27T23:40:12Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Jbrower95</title>
    <ns>2</ns>
    <id>2501</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4866</id>
      <timestamp>2012-07-09T17:10:18Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Jimbo Wales</title>
    <ns>2</ns>
    <id>1681</id>
      <sha1>sljhreuyx2qb0cwniskr93xixyhk5gz</sha1>
    <revision>
      <id>2418</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="156">Hi, I am Jimbo, the founder, along with Angela, of Wikia, and the founder of Wikipedia.


Leave me a message on [[User_talk:Jimbo Wales]] my user talk page.</text>
    </revision>
  </page>
  <page>
    <title>User:Joeyaa</title>
    <ns>2</ns>
    <id>2186</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4514</id>
      <timestamp>2011-12-25T12:11:54Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:KORNiUX</title>
    <ns>2</ns>
    <id>2735</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5270</id>
      <timestamp>2014-01-05T20:55:47Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Kangaroopower</title>
    <ns>2</ns>
    <id>2183</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4501</id>
      <timestamp>2011-12-18T05:34:14Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Katai.phraoorchids</title>
    <ns>2</ns>
    <id>2178</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4494</id>
      <timestamp>2011-12-13T11:03:39Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Kentasan</title>
    <ns>2</ns>
    <id>2577</id>
      <sha1>5kcvotmag4fzomll57xoepkgrpde8ck</sha1>
    <revision>
      <id>4976</id>
      <timestamp>2013-01-10T21:29:50Z</timestamp>
      <contributor>
        <username>Kentasan</username>
        <id>3254734</id>
      </contributor>
      <comment>Created page with &quot; Ich bin ein Technisch interessierter Wikia Benutzer und immer für Neue Techniken zu begeistern. Wiki-Technisch bin ich im Inazuma Eleven-Wiki (deutsche Version) und im Nicke...&quot;</comment>
      <text xml:space="preserve" bytes="193">
Ich bin ein Technisch interessierter Wikia Benutzer und immer für Neue Techniken zu begeistern. Wiki-Technisch bin ich im Inazuma Eleven-Wiki (deutsche Version) und im Nickelodeon Wiki aktiv.</text>
    </revision>
  </page>
  <page>
    <title>User:Kirkburn</title>
    <ns>2</ns>
    <id>1890</id>
      <sha1>7zrmkhq9gvf1e11uou3hupc2frglebv</sha1>
    <revision>
      <id>3632</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="24">{{:w:User:Kirkburn/Who}}</text>
    </revision>
  </page>
  <page>
    <title>User:LPMissy</title>
    <ns>2</ns>
    <id>2410</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4773</id>
      <timestamp>2012-06-03T06:53:14Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Leviathan 89</title>
    <ns>2</ns>
    <id>2606</id>
      <sha1>qxdsc75r7u40ioo8bt7r0zq1nmpirjr</sha1>
    <revision>
      <id>5016</id>
      <timestamp>2013-05-01T21:51:44Z</timestamp>
      <contributor>
        <username>Userpage Bot</username>
        <id>5639829</id>
      </contributor>
      <comment>Creating userpage for Leviathan 89 (Bot action, see [[w:User:Userpage Bot|this page]] for info)</comment>
      <text xml:space="preserve" bytes="23">{{w:User:Leviathan_89}}</text>
    </revision>
  </page>
  <page>
    <title>User:Lordxeen46</title>
    <ns>2</ns>
    <id>2543</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4927</id>
      <timestamp>2012-10-12T09:06:30Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:LyleArgabright</title>
    <ns>2</ns>
    <id>2352</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4708</id>
      <timestamp>2012-04-21T07:29:04Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Maintenance script</title>
    <ns>2</ns>
    <id>1780</id>
      <sha1>nffsx6w5db5f0jrp1kpjvuzapf1si1j</sha1>
    <revision>
      <id>3871</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="500">The '''Maintenance script''' account is used by [[Help:Community Team|Wikia Staff]] or [[Help:SpamTaskForce|VSTF]] to make automated deletions across multiple pages or multiple wikis.

If you feel the script deleted a page it should not have deleted, any [[Special:ListAdmins|admin]] on this wiki can undelete that page. Please inform the [[Wikia:Community Team|Community Team]] about any problems with this script.

* ''[[Special:Contributions/Maintenance_script|Maintenance script contributions]]''</text>
    </revision>
  </page>
  <page>
    <title>User:MediaWiki default</title>
    <ns>2</ns>
    <id>1746</id>
      <sha1>gmyjk94p2cwrthgpvffkyupzvcr0n41</sha1>
    <revision>
      <id>2698</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="464">This account is used by Wikia Staff when they run the maintenance script &lt;code&gt;rebuildMessages.php&lt;/code&gt;. This updates or rebuilds the interface messages to be the same as the MediaWiki default on the Central Wikia wiki.

This account is not a bot and cannot be blocked. If there is a problem with the text of the default messages, please inform the [[Wikia:Community Team|Community Support Team]].

* ''[[Special:Contributions/MediaWiki default|Contributions]]''</text>
    </revision>
  </page>
  <page>
    <title>User:Meighan</title>
    <ns>2</ns>
    <id>2039</id>
      <sha1>q9qy05sfuavb89e95cst6wgv0cddnsh</sha1>
    <revision>
      <id>3897</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="22">{{Wikia:User:meighan}}</text>
    </revision>
  </page>
  <page>
    <title>User:Pandora069</title>
    <ns>2</ns>
    <id>2559</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4952</id>
      <timestamp>2012-12-12T03:19:51Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Penguin-Pal</title>
    <ns>2</ns>
    <id>2737</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5273</id>
      <timestamp>2014-01-07T13:26:49Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:PinkiePiefan</title>
    <ns>2</ns>
    <id>2204</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4544</id>
      <timestamp>2012-01-16T13:31:51Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
    <revision>
      <id>4546</id>
      <timestamp>2012-01-16T13:34:53Z</timestamp>
      <contributor>
        <username>PinkiePiefan</username>
        <id>4763456</id>
      </contributor>
      <comment>File added via photo placeholder</comment>
      <text xml:space="preserve" bytes="272">[[File:Pinkie1.jpg|thumb|400px|right|Pinkie Pie was always my fav pony]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Potassium19</title>
    <ns>2</ns>
    <id>2687</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5206</id>
      <timestamp>2013-09-30T13:51:13Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Pseudobread</title>
    <ns>2</ns>
    <id>2643</id>
      <sha1>fxjmr1ubmi755u5in94jjwreyjgf342</sha1>
    <revision>
      <id>5055</id>
      <timestamp>2013-08-08T00:33:39Z</timestamp>
      <contributor>
        <username>Userpage Bot</username>
        <id>5639829</id>
      </contributor>
      <comment>Creating userpage for Pseudobread (Bot action, see [[w:User:Userpage Bot|this page]] for info)</comment>
      <text xml:space="preserve" bytes="23">{{w::User:Pseudobread}}</text>
    </revision>
  </page>
  <page>
    <title>User:Pvagare</title>
    <ns>2</ns>
    <id>2624</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5038</id>
      <timestamp>2013-05-29T14:40:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:RansomTime</title>
    <ns>2</ns>
    <id>2620</id>
      <sha1>37oc8q2cjx5mrfqa4b61revh1dixtu7</sha1>
    <revision>
      <id>5034</id>
      <timestamp>2013-05-24T12:01:04Z</timestamp>
      <contributor>
        <username>Userpage Bot</username>
        <id>5639829</id>
      </contributor>
      <comment>Creating userpage for RansomTime (Bot action, see [[w:User:Userpage Bot|this page]] for info)</comment>
      <text xml:space="preserve" bytes="21">{{w:User:RansomTime}}</text>
    </revision>
  </page>
  <page>
    <title>User:Rappy 4187</title>
    <ns>2</ns>
    <id>2419</id>
      <sha1>fq3cm7v6al51ekmngorg20zhglcorev</sha1>
    <revision>
      <id>4781</id>
      <timestamp>2012-06-20T16:50:46Z</timestamp>
      <contributor>
        <username>URL</username>
        <id>3288694</id>
      </contributor>
      <minor/>
      <comment>Creating userpage for Rappy 4187 (Bot action, see [[w:User:URL|this page]] for info)</comment>
      <text xml:space="preserve" bytes="21">{{w:User:Rappy 4187}}</text>
    </revision>
  </page>
  <page>
    <title>User:Razorgirl</title>
    <ns>2</ns>
    <id>2682</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5198</id>
      <timestamp>2013-09-22T06:24:10Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Razorruss</title>
    <ns>2</ns>
    <id>2546</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4930</id>
      <timestamp>2012-10-21T15:31:33Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:RiehlRoss440</title>
    <ns>2</ns>
    <id>2239</id>
      <sha1>cqc5aa3xjlq1nzrkwthzj1pq45wr6te</sha1>
    <revision>
      <id>4584</id>
      <timestamp>2012-02-22T06:02:29Z</timestamp>
      <contributor>
        <ip>184.175.99.151</ip>
      </contributor>
      <comment>Created page with &quot;Have you ever had new programs installed on your computer, but yet - you didn't install them yourself? You had internet connection a half hour ago, but now you don't after you op...&quot;</comment>
      <text xml:space="preserve" bytes="3112">Have you ever had new programs installed on your computer, but yet - you didn't install them yourself? You had internet connection a half hour ago, but now you don't after you opened up that new email that was sitting in your inbox for awhile?

Sounds like spyware to me.

A lot of the computer viruses are the same, messing up your computer, taking away or adding programs, not giving you an internet connection - spyware is also one to do things that are listed to your computer.

Spyware is normally not seen by the computer user. Computer viruses like to work behind the scenes. Also like other computer viruses, it strives to collect different types of personal information. It's not very easy to detect spyware. Sometimes keyloggers are installed by the owner of a computer on purpose, so they can secretly monitor other users. They can track the internet surfing habits of a user and keep track of the sites that have been past visited.

Other things that are monitored may be keystroke captures, chat logging, snapshots, email logging, website logging and anything else that you can think of where it would be useful to other companies. Sometimes spyware can redirect web browser activity also.

The programs are usually meant for parents, businesses and similar places, but they can easily be abused if used without your knowledge.

It's not a computer virus that you install yourself. It is a bunch of add-ons that are rather small that you might or might not disable during the install of a program. In many instances, the EULA provides a couple of lines about privacy matters, but most users of a program or download don't stop to read the fine print. Thus, they have no idea that they have a computer virus on their computer.

You would think that anything that uses your information in a way that you don't want would be illegal, but spyware is not an illegal software. There are usually a bunch of different reasons why a user may not agree with and why they may not want to use the product.

Usually this involves the tracking and sending of data that was mentioned before.

Another possibility of getting it would be peer to peer sharing. Someone may install some spyware as part of their standard installation process that will be sent to you and if you don't read the installation list, you may notice that you are getting more then what you bargained for.

Another way to get Spyware into your computer is by the broswer add ons that you see a lot of. Those tacky search bars that fit across the top of your browser. They can be the hardest things to get rid of. Some are riddled with computer viruses, and cause the website to copy what you were searching for and where you went on the internet, and could possibly copy your username, passwords and emails.

Some signs that you may have a computer virus include having ads pop up even when you are offline, you want to go to one website, but instead end up on another website, your computer is dialing up phone numbers by itself, when you search another site handles the search instead of the original and your bookmarks change on their own.</text>
    </revision>
  </page>
  <page>
    <title>User:Samma89</title>
    <ns>2</ns>
    <id>2665</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5102</id>
      <timestamp>2013-09-18T14:33:53Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Sannse</title>
    <ns>2</ns>
    <id>1523</id>
      <sha1>h9syi7i95u21mam7mil611hpcgzdk59</sha1>
    <revision>
      <id>3839</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="19">{{int:User Sannse}}</text>
    </revision>
  </page>
  <page>
    <title>User:Sarah Manley</title>
    <ns>2</ns>
    <id>2014</id>
      <sha1>5bu5d0dcohf8ldzows9xhadso6js5up</sha1>
    <revision>
      <id>3820</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="27">{{Wikia:User:Sarah Manley}}</text>
    </revision>
  </page>
  <page>
    <title>User:Sashankgogula</title>
    <ns>2</ns>
    <id>2654</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5073</id>
      <timestamp>2013-09-07T21:45:45Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Sbluen</title>
    <ns>2</ns>
    <id>2569</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4965</id>
      <timestamp>2012-12-21T18:20:38Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Scarecroe</title>
    <ns>2</ns>
    <id>1980</id>
      <sha1>cfjxdmoebou6kdb5iiwa6vb903in36h</sha1>
    <revision>
      <id>3668</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="20">{{w:scarecroewikis}}</text>
    </revision>
  </page>
  <page>
    <title>User:Sean Colombo</title>
    <ns>2</ns>
    <id>2045</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>3907</id>
      <timestamp>2011-08-16T19:58:57Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
    <revision>
      <id>3911</id>
      <timestamp>2011-09-08T20:21:49Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>quick background</comment>
      <text xml:space="preserve" bytes="612">I currently work at Wikia and do a lot of work with the API.

== How I'm involved with Wikia's APIs ==
* Founder of this wiki &amp; the Tech-Lead for the Wikia API &amp; 3rd party Developer Program.
* Early in 2006, after founding [[w:c:lyrics:Main Page|LyricWiki]], I created the [[LyricWiki API]] (at the time there was no [[MediaWiki API]] yet).
* I'm a developer of the [[w:c:perlmediawikiapi|Perl MediaWiki API]] module which is a generic MediaWiki client library for perl (not wikia-specific).
* '''If you have any questions about how to use the Wikia API, please [[Special:EmailUser/Sean_Colombo|let me know]]!'''</text>
    </revision>
    <revision>
      <id>3912</id>
      <timestamp>2011-09-08T20:25:26Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* How I'm involved with Wikia's APIs */</comment>
      <text xml:space="preserve" bytes="807">I currently work at Wikia and do a lot of work with the API.

== How I'm involved with Wikia's APIs ==
* Founder of this wiki &amp; the Tech-Lead for the Wikia API &amp; 3rd party Developer Program.
* Early in 2006, after founding [[w:c:lyrics:Main Page|LyricWiki]], I created the [[LyricWiki API]] (at the time there was no [[MediaWiki API]] yet).
* I've written several extensions to the MediaWiki API including ''CategoryIntersection'' and ''ImageServing''.
* I currently maintain the [[MediaWiki Javascript Client]] at Wikia.
* I'm one of the two developers of the [[w:c:perlmediawikiapi|Perl MediaWiki API]] module which is a generic MediaWiki client library for perl (not wikia-specific).
* '''If you have any questions about how to use the Wikia API, please [[Special:EmailUser/Sean_Colombo|let me know]]!'''</text>
    </revision>
    <revision>
      <id>4923</id>
      <timestamp>2012-10-08T20:18:04Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="968">I previously worked at Wikia and did a lot of work with the API.

As of mid-September 2012, I am an Indie Game Developer at BlueLine Game Studios - follow at: [http://twitter.com/bluelinegames @BlueLineGames] :)

== How I was involved with Wikia's APIs ==
* Founder of this wiki &amp; the Tech-Lead for the Wikia API &amp; 3rd party Developer Program.
* Early in 2006, after founding [[w:c:lyrics:Main Page|LyricWiki]], I created the [[LyricWiki API]] (at the time there was no [[MediaWiki API]] yet).
* I've written several extensions to the MediaWiki API including ''CategoryIntersection'' and ''ImageServing''.
* I maintained the [[MediaWiki Javascript Client]] at Wikia for a few years.
* I'm one of the two developers of the [[w:c:perlmediawikiapi|Perl MediaWiki API]] module which is a generic MediaWiki client library for perl (not wikia-specific).
* '''If you have any questions about how to use the Wikia API, please [[Special:EmailUser/Sean_Colombo|let me know]]!'''</text>
    </revision>
    <revision>
      <id>5011</id>
      <timestamp>2013-04-12T20:11:35Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>/* How I was involved with Wikia's APIs */</comment>
      <text xml:space="preserve" bytes="847">I previously worked at Wikia and did a lot of work with the API.

As of mid-September 2012, I am an Indie Game Developer at BlueLine Game Studios - follow at: [http://twitter.com/bluelinegames @BlueLineGames] :)

== How I was involved with Wikia's APIs ==
* Founder of this wiki &amp; the Tech-Lead for the Wikia API &amp; 3rd party Developer Program.
* Early in 2006, after founding [[w:c:lyrics:Main Page|LyricWiki]], I created the [[LyricWiki API]] (at the time there was no [[MediaWiki API]] yet).
* I've written several extensions to the MediaWiki API including ''CategoryIntersection'' and ''ImageServing''.
* I maintained the [[MediaWiki Javascript Client]] at Wikia for a few years.
* I'm one of the two developers of the [[w:c:perlmediawikiapi|Perl MediaWiki API]] module which is a generic MediaWiki client library for perl (not wikia-specific).</text>
    </revision>
  </page>
  <page>
    <title>User:SouthParkfan098</title>
    <ns>2</ns>
    <id>2414</id>
      <sha1>15ma3c4z4c4eo0b9jdsv7avniuq65bi</sha1>
    <revision>
      <id>4777</id>
      <timestamp>2012-06-11T00:04:51Z</timestamp>
      <contributor>
        <username>SouthParkfan098</username>
        <id>5053360</id>
      </contributor>
      <comment>Created page with &quot;Hi i'm SouthParkfan098&quot;</comment>
      <text xml:space="preserve" bytes="22">Hi i'm SouthParkfan098</text>
    </revision>
  </page>
  <page>
    <title>User:Steriousman</title>
    <ns>2</ns>
    <id>2562</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4955</id>
      <timestamp>2012-12-14T09:32:34Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Sulfur</title>
    <ns>2</ns>
    <id>2647</id>
      <sha1>sd0uygkzew1gjtrrcs9rg9fpjrpe63z</sha1>
    <revision>
      <id>5061</id>
      <timestamp>2013-08-17T02:39:43Z</timestamp>
      <contributor>
        <username>Userpage Bot</username>
        <id>5639829</id>
      </contributor>
      <comment>Creating userpage for Sulfur (Bot action, see [[w:User:Userpage Bot|this page]] for info)</comment>
      <text xml:space="preserve" bytes="17">{{w:User:Sulfur}}</text>
    </revision>
  </page>
  <page>
    <title>User:TK-999</title>
    <ns>2</ns>
    <id>2547</id>
      <sha1>5k36mqp1kx0hh47e5bhnt6mxqc8036p</sha1>
    <revision>
      <id>4931</id>
      <timestamp>2012-11-02T16:06:46Z</timestamp>
      <contributor>
        <username>URL</username>
        <id>3288694</id>
      </contributor>
      <minor/>
      <comment>Creating userpage for TK-999 (Bot action, see [[w:User:URL|this page]] for info)</comment>
      <text xml:space="preserve" bytes="17">{{w:User:TK-999}}</text>
    </revision>
  </page>
  <page>
    <title>User:Talhaaah</title>
    <ns>2</ns>
    <id>2175</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4469</id>
      <timestamp>2011-12-12T19:40:31Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Tharindu DG</title>
    <ns>2</ns>
    <id>2320</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4672</id>
      <timestamp>2012-03-09T18:50:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:The Milkman</title>
    <ns>2</ns>
    <id>2645</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5058</id>
      <timestamp>2013-08-11T19:49:51Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Themech</title>
    <ns>2</ns>
    <id>2167</id>
      <sha1>hi4zpzpa8d19wa5s5nvzcbfz6l4e6cb</sha1>
    <revision>
      <id>4457</id>
      <timestamp>2011-12-09T10:41:25Z</timestamp>
      <contributor>
        <username>Themech</username>
        <id>4667467</id>
      </contributor>
      <comment>Created page with &quot;[[File:Placeholder|right|300px]] Write the text of your article here!  '''Just a test'''&quot;</comment>
      <text xml:space="preserve" bytes="88">[[File:Placeholder|right|300px]]
Write the text of your article here!

'''Just a test'''</text>
    </revision>
  </page>
  <page>
    <title>User:Tm T</title>
    <ns>2</ns>
    <id>2152</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4387</id>
      <timestamp>2011-11-30T20:13:47Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:ToaMeiko</title>
    <ns>2</ns>
    <id>2615</id>
      <sha1>jq26o4ujw2iq6swiz29g6oqu1l8z35c</sha1>
    <revision>
      <id>5029</id>
      <timestamp>2013-05-22T15:56:21Z</timestamp>
      <contributor>
        <username>ToaMeiko</username>
        <id>5884303</id>
      </contributor>
      <comment>Created page with &quot;Hi! I'm Meiko, or George. I'm a computer programmer and web developer, and look forward to experimenting with the Wikia API.&quot;</comment>
      <text xml:space="preserve" bytes="124">Hi! I'm Meiko, or George. I'm a computer programmer and web developer, and look forward to experimenting with the Wikia API.</text>
    </revision>
  </page>
  <page>
    <title>User:Toughpigs</title>
    <ns>2</ns>
    <id>1888</id>
      <sha1>alsn8abpoq847lquzsoy75wr757wlc1</sha1>
    <revision>
      <id>3047</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="16">{{w:dannywikis}}</text>
    </revision>
  </page>
  <page>
    <title>User:TranStanley</title>
    <ns>2</ns>
    <id>2094</id>
      <sha1>kbbfhkf2dma57twp3t9yo8e1kji26ef</sha1>
    <revision>
      <id>4109</id>
      <timestamp>2011-10-07T18:00:18Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;{|cellpadding=&quot;3&quot; cellspacing=&quot;5&quot; style=&quot;width: 100%; margin-top: 0.5em; vertical-align: top; background-color: #FFF; border: 2px solid #CFCFCF; &quot;  !style=&quot;margin: 2; background-...&quot;</comment>
      <text xml:space="preserve" bytes="1105">{|cellpadding=&quot;3&quot; cellspacing=&quot;5&quot; style=&quot;width: 100%; margin-top: 0.5em; vertical-align: top; background-color: #FFF; border: 2px solid #CFCFCF; &quot;

!style=&quot;margin: 2; background-color: #FFF; border: 0px solid #008080; text-align: left; font-weight: normal&quot;|

Hi, I'm Stanley (I also go by &quot;Stan,&quot; &quot;Stan Tran,&quot; &quot;Stan the Man,&quot; &quot;Stanley Tranley,&quot; and other equally amusing rhyming explorations). In addition to being the founder of the [http://tadaoando.wikia.com/wiki/Tadao_Ando_Wiki Tadao Ando Wiki] (clearly, a work in progress), I am a product manager on the Wikia team. So what does a product manager do? Well, I help conceptualize, build, and test new products and features in hopes of making you all happy Wikians ☺.

Feel free to stop by my talk page to say hello. If you have any API-related questions, feel free to email us at api@wikia.com. If you have any wiki-related questions and want a quick response, your best bet is to contact the awesome members of the [http://community.wikia.com/wiki/Community_Central:Staff Community Team] who provide support the Wikia communities around the clock.</text>
    </revision>
    <revision>
      <id>4110</id>
      <timestamp>2011-10-07T18:02:51Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1225">{|cellpadding=&quot;3&quot; cellspacing=&quot;5&quot; style=&quot;width: 100%; margin-top: 0.5em; vertical-align: top; background-color: #FFF; border: 2px solid #CFCFCF; &quot;
|-
!style=&quot;margin: 2; background-color: #FFF; border: 0px solid #008080; text-align: left; font-weight: normal&quot;|

Hi, I'm Stanley (I also go by &quot;Stan,&quot; &quot;Stan Tran,&quot; &quot;Stan the Man,&quot; &quot;Stanley Tranley,&quot; and other equally amusing rhyming explorations). In addition to being the founder of the [http://tadaoando.wikia.com/wiki/Tadao_Ando_Wiki Tadao Ando Wiki] (clearly, a work in progress), I am a product manager on the Wikia team. So what does a product manager do? Well, I help conceptualize, build, and test new products and features in hopes of making you all happy Wikians ☺.

Feel free to stop by my talk page to say hello. If you have any API-related questions, feel free to email the small, but awesome API team at [mailto:api@wikia.com api@wikia.com]. If you have any wiki-related questions and want a quick response, your best bet is to contact the awesome members of the [http://community.wikia.com/wiki/Community_Central:Staff Community Team] who provide support the Wikia communities around the clock.

[[User:TranStanley|TranStanley]] 18:02, October 7, 2011 (UTC)
|}</text>
    </revision>
    <revision>
      <id>4137</id>
      <timestamp>2011-10-12T00:03:35Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1162">{|cellpadding=&quot;3&quot; cellspacing=&quot;5&quot; style=&quot;width: 100%; margin-top: 0.5em; vertical-align: top; background-color: #FFF; border: 2px solid #CFCFCF; &quot;
|-
!style=&quot;margin: 2; background-color: #FFF; border: 0px solid #008080; text-align: left; font-weight: normal&quot;|

Hi, I'm Stanley (I also go by &quot;Stan,&quot; &quot;Stan Tran,&quot; &quot;Stan the Man,&quot; &quot;Stanley Tranley,&quot; and other equally amusing rhyming explorations). In addition to being the founder of the [http://tadaoando.wikia.com/wiki/Tadao_Ando_Wiki Tadao Ando Wiki] (clearly, a work in progress), I am a product manager on the Wikia team. So what does a product manager do? Well, I help conceptualize, build, and test new products and features in hopes of making you all happy Wikians ☺.

Feel free to stop by my talk page to say hello. If you have any API-related questions, feel free to email the small, but awesome API team at [mailto:api@wikia.com api@wikia.com]. If you have any wiki-related questions and want a quick response, your best bet is to contact the awesome members of the [http://community.wikia.com/wiki/Community_Central:Staff Community Team] who provide support the Wikia communities around the clock.
|}</text>
    </revision>
  </page>
  <page>
    <title>User:Trellar</title>
    <ns>2</ns>
    <id>2036</id>
      <sha1>4b33l1grlfc4sgwpur1srdc2rdjcqcm</sha1>
    <revision>
      <id>3880</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="22">{{Wikia:User:Trellar}}</text>
    </revision>
  </page>
  <page>
    <title>User:TyA</title>
    <ns>2</ns>
    <id>2157</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4393</id>
      <timestamp>2011-12-02T03:16:59Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
    <revision>
      <id>4395</id>
      <timestamp>2011-12-02T03:17:25Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>Replaced content with &quot;{{w:User:ZamorakO_o}}&quot;</comment>
      <text xml:space="preserve" bytes="21">{{w:User:ZamorakO_o}}</text>
    </revision>
    <revision>
      <id>4616</id>
      <timestamp>2012-03-01T00:12:20Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <minor/>
      <comment>moved [[User:ZamorakO o]] to [[User:TyA]]: Automatically moved page while renaming the user &quot;[[User:ZamorakO o|ZamorakO o]]&quot; to &quot;[[User:TyA|TyA]]&quot;</comment>
      <text xml:space="preserve" bytes="21">{{w:User:ZamorakO_o}}</text>
    </revision>
    <revision>
      <id>4889</id>
      <timestamp>2012-09-04T17:14:26Z</timestamp>
      <contributor>
        <ip>216.66.153.168</ip>
      </contributor>
      <comment>Replaced content with &quot;.&quot;</comment>
      <text xml:space="preserve" bytes="1">.</text>
    </revision>
    <revision>
      <id>4890</id>
      <timestamp>2012-09-04T17:14:27Z</timestamp>
      <contributor>
        <username>VSTF Bot</username>
        <id>1907256</id>
      </contributor>
      <minor/>
      <comment>Automatically reverted revisions marked as vandalism to User:TyA by [[Special:Contributions/216.66.153.168|216.66.153.168]] (Bot action)</comment>
      <text xml:space="preserve" bytes="21">{{w:User:ZamorakO_o}}</text>
    </revision>
    <revision>
      <id>4896</id>
      <timestamp>2012-09-04T17:15:12Z</timestamp>
      <contributor>
        <ip>216.66.153.168</ip>
      </contributor>
      <comment>Replaced content with &quot;.&quot;</comment>
      <text xml:space="preserve" bytes="1">.</text>
    </revision>
    <revision>
      <id>4897</id>
      <timestamp>2012-09-04T17:15:13Z</timestamp>
      <contributor>
        <username>VSTF Bot</username>
        <id>1907256</id>
      </contributor>
      <minor/>
      <comment>Automatically reverted revisions marked as vandalism to User:TyA by [[Special:Contributions/216.66.153.168|216.66.153.168]] (Bot action)</comment>
      <text xml:space="preserve" bytes="21">{{w:User:ZamorakO_o}}</text>
    </revision>
    <revision>
      <id>5203</id>
      <timestamp>2013-09-28T15:59:00Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="14">{{w:User:TyA}}</text>
    </revision>
  </page>
  <page>
    <title>User:ULALA!social</title>
    <ns>2</ns>
    <id>2189</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4517</id>
      <timestamp>2011-12-26T12:03:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
    <revision>
      <id>4519</id>
      <timestamp>2011-12-26T12:12:46Z</timestamp>
      <contributor>
        <username>ULALA!social</username>
        <id>4708424</id>
      </contributor>
      <text xml:space="preserve" bytes="156">[[File:Placeholder|thumb|220px]]

We deliver great social narratives &amp; rich content, encourage dialogue and engagement, create deep community connections...</text>
    </revision>
  </page>
  <page>
    <title>User:Uberfuzzy</title>
    <ns>2</ns>
    <id>1887</id>
      <sha1>ox97sracu715rvd5eikmyy68tqof6zd</sha1>
    <revision>
      <id>3838</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="22">{{int:User Uberfuzzy}}</text>
    </revision>
  </page>
  <page>
    <title>User:UltimateSupreme</title>
    <ns>2</ns>
    <id>2575</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4973</id>
      <timestamp>2012-12-31T16:47:41Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Userpage Bot</title>
    <ns>2</ns>
    <id>2607</id>
      <sha1>o2h3c3ykztfyx3z10bqog8vs0t5zhog</sha1>
    <revision>
      <id>5017</id>
      <timestamp>2013-05-01T21:51:54Z</timestamp>
      <contributor>
        <username>Userpage Bot</username>
        <id>5639829</id>
      </contributor>
      <comment>Creating userpage for Userpage Bot (Bot action, see [[w:User:Userpage Bot|this page]] for info)</comment>
      <text xml:space="preserve" bytes="24">{{w::User:Userpage_Bot}}</text>
    </revision>
  </page>
  <page>
    <title>User:VampiresAndWerewolfsareAwesomeAsHell23</title>
    <ns>2</ns>
    <id>2703</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>5230</id>
      <timestamp>2013-11-25T11:33:49Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:VicVal</title>
    <ns>2</ns>
    <id>2540</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4919</id>
      <timestamp>2012-10-08T16:54:35Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Wayndsouza</title>
    <ns>2</ns>
    <id>2582</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4981</id>
      <timestamp>2013-02-11T19:24:12Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:Wikia</title>
    <ns>2</ns>
    <id>1977</id>
      <sha1>523y32wlrciw94v7se887e8h7ugsauc</sha1>
    <revision>
      <id>3686</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="18">{{int:User Wikia}}</text>
    </revision>
  </page>
  <page>
    <title>User:Xean</title>
    <ns>2</ns>
    <id>2013</id>
      <sha1>svge69clg76oc3m67mzql5uqieud87r</sha1>
    <revision>
      <id>3819</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="14">{{w:XeanWiki}}</text>
    </revision>
  </page>
  <page>
    <title>User:XxTimberlakexx</title>
    <ns>2</ns>
    <id>2407</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4770</id>
      <timestamp>2012-05-26T03:31:42Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>User:ZamorakO o</title>
    <ns>2</ns>
    <id>2269</id>
    <redirect title="User:TyA" />
      <sha1>k5pie2j9vd6dej4d5s5c8lv02lqkheh</sha1>
    <revision>
      <id>4617</id>
      <timestamp>2012-03-01T00:12:20Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <comment>moved [[User:ZamorakO o]] to [[User:TyA]]: Automatically moved page while renaming the user &quot;[[User:ZamorakO o|ZamorakO o]]&quot; to &quot;[[User:TyA|TyA]]&quot;</comment>
      <text xml:space="preserve" bytes="22">#REDIRECT [[User:TyA]]</text>
    </revision>
  </page>
  <page>
    <title>User:Zanimum</title>
    <ns>2</ns>
    <id>2195</id>
      <sha1>ci8rsb6benxy1y136l57pl69jbrcwrt</sha1>
    <revision>
      <id>4527</id>
      <timestamp>2012-01-07T20:38:11Z</timestamp>
      <contributor>
        <username>Wikia</username>
        <id>22439</id>
      </contributor>
      <text xml:space="preserve" bytes="232">[[File:Placeholder|thumb|220px]]

This is your user page. Please edit this page to tell the community about yourself!

==My favorite pages==

* Add links to your favorite pages on the wiki here!
* Favorite page #2
* Favorite page #3</text>
    </revision>
  </page>
  <page>
    <title>Wikia API V1</title>
    <ns>0</ns>
    <id>2658</id>
      <sha1>jtf0ylpzi7os2cldx9kkpb2mqjg5zt6</sha1>
    <revision>
      <id>5081</id>
      <timestamp>2013-09-17T08:50:12Z</timestamp>
      <contributor>
        <username>Maciej Szumocki</username>
        <id>5838890</id>
      </contributor>
      <comment>Created page with &quot;= Wikia API Version 1 =&quot;</comment>
      <text xml:space="preserve" bytes="23">= Wikia API Version 1 =</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki</title>
    <ns>0</ns>
    <id>1461</id>
      <sha1>3pd92csdxehy49634ai53bd0tzzl5km</sha1>
    <revision>
      <id>3853</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="448">[[File:Placeholder|thumb|300px]]
==Welcome to the Wiki==

Welcome to the wiki. We’re a collaborative community website about your topic that anyone, including you, can edit. Click the edit button at the top of any page to get started!

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3901</id>
      <timestamp>2011-08-16T19:58:28Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <comment>moved [[Main Page]] to [[Wikia API Wiki]]: SEO</comment>
      <text xml:space="preserve" bytes="448">[[File:Placeholder|thumb|300px]]
==Welcome to the Wiki==

Welcome to the wiki. We’re a collaborative community website about your topic that anyone, including you, can edit. Click the edit button at the top of any page to get started!

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3906</id>
      <timestamp>2011-08-16T19:58:56Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="504">[[File:Placeholder|thumb|300px]]
==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3908</id>
      <timestamp>2011-09-06T22:37:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>landing page right column placeholder</comment>
      <text xml:space="preserve" bytes="1710">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;*Developer Guide
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog


&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;


&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3909</id>
      <timestamp>2011-09-06T22:38:10Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="1713">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
*Developer Guide
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog



&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;



&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3910</id>
      <timestamp>2011-09-07T02:21:26Z</timestamp>
      <contributor>
        <username>MtaÄ</username>
        <id>826221</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1736">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
*Developer Guide
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog



&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;



&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3913</id>
      <timestamp>2011-09-09T22:46:00Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <text xml:space="preserve" bytes="1741">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;*[[Developer Guide]]
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog




&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;




&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3915</id>
      <timestamp>2011-09-09T22:46:36Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>Developer Guide link</comment>
      <text xml:space="preserve" bytes="1743">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;*[[Developer Guide]]
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog





&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;





&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3916</id>
      <timestamp>2011-09-09T22:47:25Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="1745">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
*[[Developer Guide]]*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog






&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;






&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3917</id>
      <timestamp>2011-09-09T22:48:18Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>formatting</comment>
      <text xml:space="preserve" bytes="1748">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.

==Latest activity==

&lt;activityfeed/&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
*[[Developer Guide]]
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog







&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;







&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3918</id>
      <timestamp>2011-09-13T20:19:07Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>moved Latest Activity to the bottom so that it's not so distracting.</comment>
      <text xml:space="preserve" bytes="1782">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;*[[Developer Guide]]
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog








&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;








&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt;&lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3919</id>
      <timestamp>2011-09-13T20:19:46Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>fix bulleted list</comment>
      <text xml:space="preserve" bytes="1786">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
*[[Developer Guide]]
*API Key Request
*Documentation Library
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog









&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;









&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3920</id>
      <timestamp>2011-09-13T20:41:29Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1807">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery type=&quot;slider&quot;&gt;
Paxprime2011logo.png|3 Awesome Gaming Wikis|link=http://community.wikia.com/wiki/User_blog:Taelovesthesharks/Top_3_Games_at_PAX_%26_Their_Awesome_Wikis|linktext=Staff Blog
Huntergames_wiki_new_editor2.png|New Editor Release|link=http://community.wikia.com/wiki/User_blog:Sarah_Manley/New_Editor_Scheduled_for_Sitewide_Release|linktext=New Features
Founderadmincentral1.png|F is for Forums|link=http://community.wikia.com/wiki/User_blog:Meighan/F_is_for_Forums|linktext=Advice for Founders &amp; Admins
FoodTruckWiki_Grow.png|Join the Food Truck Wiki|link=http://community.wikia.com/wiki/User_blog:Christina_l/Help_the_Food_Truck_Wiki_Grow|linktext=Staff Blog
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
* [[Developer Guide]]
* API Key Request
* [[Documentation]]
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog










&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;










&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3932</id>
      <timestamp>2011-09-27T18:59:21Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>tweaked gallery text</comment>
      <text xml:space="preserve" bytes="1469">&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/lyricwiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/gameguides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
* [[Developer Guide]]
* API Key Request
* [[Documentation]]
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog










&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;










&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3934</id>
      <timestamp>2011-09-27T19:02:56Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ __NOTOC__</comment>
      <text xml:space="preserve" bytes="1479">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/lyricwiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/gameguides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
* [[Developer Guide]]
* API Key Request
* [[Documentation]]
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog










&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;










&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3936</id>
      <timestamp>2011-09-27T19:05:20Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1479">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Toolbox&lt;/h1&gt;
* [[Developer Guide]]
* API Key Request
* [[Documentation]]
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;margin:0px 10px 0px 0px&quot;&gt; &lt;/div&gt;&lt;h1&gt;Community&lt;/h1&gt;
*Chat
*Forum
*Blog










&lt;br /&gt;&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;
&lt;div style=&quot;float:right;&quot;&gt; &lt;/div&gt;&lt;h1&gt;Wikia Love&lt;/h1&gt;










&lt;br /&gt;&lt;br /&gt;&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;cc2-wikia-button&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3938</id>
      <timestamp>2011-09-27T23:59:17Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Set right modules more like the mockup</comment>
      <text xml:space="preserve" bytes="1468">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3941</id>
      <timestamp>2011-09-28T00:05:00Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ Timer</comment>
      <text xml:space="preserve" bytes="1499">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

==Describe your topic==

Write a description about your topic. Let your readers know what your topic is about and add some general information about it.


&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3942</id>
      <timestamp>2011-09-28T00:12:36Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <text xml:space="preserve" bytes="1419">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3949</id>
      <timestamp>2011-09-28T02:56:06Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>+ key + docs icons; to be refined tmw</comment>
      <text xml:space="preserve" bytes="1466">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot;&gt;[[File:Timer.png|right|125px]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:key.png|right]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot;&gt;[[File:docs.png|right]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3950</id>
      <timestamp>2011-09-28T03:02:50Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>padding</comment>
      <text xml:space="preserve" bytes="1529">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.png|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.png|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:Timer.png|right|125px]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:key.png|right]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:docs.png|right]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3981</id>
      <timestamp>2011-09-28T22:28:24Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>Use new jpgs from design</comment>
      <text xml:space="preserve" bytes="1529">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:Timer.png|right|125px]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:key.png|right]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:docs.png|right]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3983</id>
      <timestamp>2011-09-28T22:30:58Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>+ first slider screen</comment>
      <text xml:space="preserve" bytes="1643">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:Timer.png|right|125px]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:key.png|right]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:docs.png|right]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3990</id>
      <timestamp>2011-09-28T23:00:51Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>fixed one link &amp; made icons in sidebar link to corresponding page rather than to the image</comment>
      <text xml:space="preserve" bytes="1698">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

&lt;div id=&quot;WikiaRail&quot; class=&quot;WikiaRail&quot; style=&quot;padding:0px;&quot;&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:Timer.png|right|125px|link=Quick Start]]
&lt;h1&gt;Quick Start&lt;/h1&gt;
Let us help you kick it off.&lt;br/&gt;
&lt;br/&gt;
'''[[Quick Start|Quick Start &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:key.png|right|link=Special:ApiGate]]
&lt;h1&gt;API Key Request&lt;/h1&gt;
Need to request a key?&lt;br/&gt;
&lt;br/&gt;
'''[[Special:ApiGate|Get an API key &amp;rarr;]]'''
&lt;/div&gt;

&lt;div class=&quot;module&quot; style=&quot;padding:20px&quot;&gt;[[File:docs.png|right|link=Documentation]]
&lt;h1&gt;Documentation&lt;/h1&gt;
A guide to the Wikia API&lt;br/&gt;
&lt;br/&gt;
'''[[Documentation|Documentation &amp;rarr;]]'''
&lt;/div&gt;

&lt;/div&gt; &lt;!-- end WikiaRail --&gt;

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>3992</id>
      <timestamp>2011-09-28T23:03:06Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved right hand menu into a template</comment>
      <text xml:space="preserve" bytes="1025">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;


&lt;div style='clear:both'&gt; &lt;/div&gt;
==Latest activity==

&lt;activityfeed/&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4004</id>
      <timestamp>2011-09-28T23:36:57Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>rm Latest Activity from main page</comment>
      <text xml:space="preserve" bytes="954">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

==Welcome to the Wikia API Wiki==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4023</id>
      <timestamp>2011-09-29T17:20:07Z</timestamp>
      <contributor>
        <ip>38.127.199.123</ip>
      </contributor>
      <comment>Bolded header.</comment>
      <text xml:space="preserve" bytes="960">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides game|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4024</id>
      <timestamp>2011-09-29T17:41:06Z</timestamp>
      <contributor>
        <username>Brad Nemer</username>
        <id>3415389</id>
      </contributor>
      <text xml:space="preserve" bytes="959">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4087</id>
      <timestamp>2011-10-04T23:24:10Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Wikia API Wiki]]&quot; ([edit=autoconfirmed] (indefinite) [move=autoconfirmed] (indefinite))</comment>
      <text xml:space="preserve" bytes="959">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!



&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4088</id>
      <timestamp>2011-10-04T23:39:53Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>welcome message formatting.</comment>
      <text xml:space="preserve" bytes="1135">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;
&lt;span style=&quot;font-size:20px;font-weight:bold;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4089</id>
      <timestamp>2011-10-04T23:42:51Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1095">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
&lt;/div&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4090</id>
      <timestamp>2011-10-04T23:46:12Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Undo revision 4089 by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]])</comment>
      <text xml:space="preserve" bytes="1096">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;



=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;

&lt;mainpage-endcolumn /&gt;
&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]
&lt;/div&gt;</text>
    </revision>
    <revision>
      <id>4091</id>
      <timestamp>2011-10-04T23:46:34Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Undo revision 4090 by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]])</comment>
      <text xml:space="preserve" bytes="1095">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
&lt;/div&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4092</id>
      <timestamp>2011-10-04T23:47:36Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1088">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4093</id>
      <timestamp>2011-10-04T23:48:25Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1094">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4094</id>
      <timestamp>2011-10-04T23:50:52Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1094">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 15px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4095</id>
      <timestamp>2011-10-04T23:51:11Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Undo revision 4094 by [[Special:Contributions/TranStanley|TranStanley]] ([[User talk:TranStanley|talk]])</comment>
      <text xml:space="preserve" bytes="1094">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:24px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4096</id>
      <timestamp>2011-10-04T23:51:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1094">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:18px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#F0F0F0; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4104</id>
      <timestamp>2011-10-05T19:01:28Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1093">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:18px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#FFFFF; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4160</id>
      <timestamp>2011-10-12T21:57:08Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>moved from template to MW message for right rail</comment>
      <text xml:space="preserve" bytes="1107">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:18px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#FFFFF; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{:MediaWiki:ApiMenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4163</id>
      <timestamp>2011-10-12T22:09:43Z</timestamp>
      <contributor>
        <username>Sean Colombo</username>
        <id>1491391</id>
      </contributor>
      <comment>back to using template</comment>
      <text xml:space="preserve" bytes="1093">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

&lt;div style=&quot;padding:8px 25px; margin:18px 0px 0px 0px; border:1px solid #D3D3D3; background-color:#FFFFF; width:608px;&quot;&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;/div&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4219</id>
      <timestamp>2011-10-27T23:05:17Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="964">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=http://www.wikia.com/mobile/LyricWiki|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=http://www.wikia.com/mobile/GameGuides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4373</id>
      <timestamp>2011-11-23T22:19:01Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>slider link updates</comment>
      <text xml:space="preserve" bytes="939">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=[[Category:App Gallery]]|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=[[LyricWiki lyrics]]|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=[[Wikia Game Guides]]|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>4374</id>
      <timestamp>2011-11-23T22:20:37Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="927">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=Category:App Gallery|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=LyricWiki lyrics|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=Wikia Game Guides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API Wiki'''==
This wiki is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wiki will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>5088</id>
      <timestamp>2013-09-17T18:29:32Z</timestamp>
      <contributor>
        <username>Swoodie</username>
        <id>3290568</id>
      </contributor>
      <comment>/* Welcome to the Wikia API Wiki */</comment>
      <text xml:space="preserve" bytes="924">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=Category:App Gallery|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=LyricWiki lyrics|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=Wikia Game Guides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API'''==
This wikia is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wikia will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>5155</id>
      <timestamp>2013-09-18T20:05:26Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="942">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=Category:App Gallery|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=LyricWiki lyrics|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=Wikia Game Guides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API'''==
This wikia is about the Wikia Developer Program and the Wikia APIs.

If you want to use Wikia data to build an app, this wikia will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
__NOEDITSECTION__
[[Category:Browse]]</text>
    </revision>
    <revision>
      <id>5156</id>
      <timestamp>2013-09-18T20:06:31Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="942">__NOTOC__
&lt;mainpage-leftcolumn-start /&gt;

&lt;gallery type=&quot;slider&quot; orientation=&quot;bottom&quot;&gt;
Wikia API slider.jpg|Wikia API|link=Category:App Gallery|linktext=See some of the cool apps built using the Wikia API!
lyricwiki_mobile_slider.jpg|LyricWiki Mobile App|link=LyricWiki lyrics|linktext=Lyrics for your Android, iPhone, iPod, iPad
game_guides_slider.jpg|Wikia Game Guides app|link=Wikia Game Guides|linktext=Game Guides built from some of your favorite wikis
&lt;/gallery&gt;

=='''Welcome to the Wikia API'''==
This wikia is about the Wikia API and Developer Program.

If you want to use Wikia data and assets to build an app, this wikia will provide you with documentation, examples, tutorials, and a place to publicize your application.

Please use the navigation on the right to find the best place to start!
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt;

{{MenuRail}}

&lt;mainpage-endcolumn /&gt;
__NOEDITSECTION__
[[Category:Browse]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki talk:Community Portal</title>
    <ns>5</ns>
    <id>1824</id>
      <sha1>gl5bs54dqghhs7n0hlfbkyxjrcgzy5w</sha1>
    <revision>
      <id>2822</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="222">[[Category:Community]]
This is the '''general discussion page''' for the wiki! New founders should leave a nice welcome message and encourage new visitors and editors to leave a note to get the conversation started. 

----</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:About</title>
    <ns>4</ns>
    <id>1501</id>
      <sha1>d7273ekthsbbt0kyztu820ms1r3h0on</sha1>
    <revision>
      <id>3813</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="174">''This page is used to tell visitors all about {{SITENAME}}.''

''Click the &quot;edit this page&quot; link (above) to start this page and to tell people what this wiki is all about.''</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Administrators</title>
    <ns>4</ns>
    <id>1300</id>
      <sha1>a7q4bqy0o944zwusve0q165yy7g5grt</sha1>
    <revision>
      <id>3797</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="3050">Different users have access to different functions of the site. While anyone can do most things on the site, including reading and editing, '''administrators''' can access a few additional functions.

== Administrator abilities ==
These additional functions include:
* Deleting and undeleting pages, page histories, and uploaded files.
* Locking ([[{{ns:project}}:Protected page|protecting]]) a page so it cannot be edited or renamed by users without admin rights or autoconfirmed status.
* Blocking IP addresses or user names from editing; and very quick &quot;rollback&quot; of undesirable edits.
* Editing the interface by changing system messages and skins.

== Bureaucrat abilities ==
A '''bureaucrat''' can make other users into bureaucrats or administrators on their own wiki.

Bureaucrats can also give users the ability to &quot;rollback&quot; edits not made in [[w:Assume good faith|good faith]]. 

== Staff ==
Wikia staff members have full access to all Wikia. They will be shown in [[Special:Listusers/staff]] on any wiki. Please use [[Special:Contact]] to contact Wikia staff.

== Who are this wiki's administrators? ==
The &quot;founder&quot; of a wiki, the person who first requested it, is given administrator access automatically. Founders are also given bureaucrat access so they can make any other user on their wiki an administrator or bureaucrat. For a complete list of users with administrator access, see [[Special:Listusers/sysop]].

You may also wish to list them on this page.

*[[User:Example]]

== How do I use administrator powers? ==
See [[Help:Administrators' how-to guide]] for a guide on using admin functions.

== Becoming an administrator ==
For you to become an administrator, someone with bureaucrat access must make you one. On larger Wikia, there will usually be a community page for requests, with a page name such as &quot;[[{{ns:project}}:Requests for adminship]]&quot;. On a smaller wiki, you may simply ask on the community portal or [[Forum:Index|Forum]], or ask a bureaucrat directly on his or her talk page.

If there are no active bureaucrats, use the &quot;Requests for adminship&quot; page to nominate users to become admins or bureaucrats.  Once a community decision has been reached (or if there is no active community to debate the decision), please leave a message at the [[Wikia:Wikia:Adoption requests|wiki adoption requests page]] and Wikia Staff can provide the rights.

== What can administrators not do? ==
Administrators should not use their administrator powers to settle editing disputes; for example, to lock a page on a version he or she prefers in an editing dispute that isn't vandalism. Administrator powers should be used to help keep the wiki clear of vandalism, spam, and users who make malicious edits, but not for simple disagreements between users acting in [[w:Assume good faith|good faith]].  Ideally an admin shouldn't be considered &quot;in charge&quot;. The ideal admin is just someone who is trusted to have a few extra buttons and to use them for the benefit of the Wikia community.

[[Category:Site administration|{{PAGENAME}}]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Bureaucrats</title>
    <ns>4</ns>
    <id>1859</id>
    <redirect title="Wikia API Wiki:Administrators" />
      <sha1>n659sk3je61nzsjykj3o3jt0kyn04v4</sha1>
    <revision>
      <id>2920</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="36">#Redirect [[Project:Administrators]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Candidates for speedy deletion</title>
    <ns>4</ns>
    <id>1882</id>
      <sha1>91yv60onid4r2yua2scx5oh8c24ljby</sha1>
    <revision>
      <id>3067</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="2060">There are a few, limited, cases where pages may be '''[[Help:Deletion|deleted]] speedily'''. Non-admins can ask for an [[Help:User access levels|admin]] to delete such a page simply by adding a [[Template:Speedydelete|&lt;nowiki&gt;{{speedydelete}}&lt;/nowiki&gt;]] tag.

A list of pages to be deleted can be found at [[:Category:Candidates for speedy deletion]].

When deleting, check the [[Help:Page history|page history]] first to see if you can [[Help:Reverting|revert]] to an older version instead of deleting the entire page.

You can consider turning problematic pages into relevant redirects as an alternative to deletion.

Ideally, when an admin deletes a test page or other page with no useful content, it is a good idea to put a note on the author's talk page explaining things, and preserving the deleted content, pointing them to the [[Project:Sandbox|sandbox]] in cases of tests.

==Examples of candidates for speedy deletion==
# No meaningful content or history (''e.g.'' random characters).
# Test pages (''e.g.'', &quot;Can I really create a page here?&quot;).
# Pure [[Help:Vandalism|vandalism]] (see also [[Wikipedia:Wikipedia:Dealing with vandalism|dealing with vandalism]]).
# Very short pages with little or no context (''e.g.'', &quot;He is a funny man that has created Factory and the Hacienda. And, by the way, his wife is great.&quot;)
# Reposted content that was already deleted according to policy.
# Pages that have been moved to another Wikia because they were uploaded in the wrong place.
# Temporarily deleting a page in order to [[Help:Moving pages|move a page]].
# Broken redirects or ones caused by typos during a page move.
# Duplicate images.
# Talk pages of already deleted articles.
# User talk pages of non-logged in users where the message is no longer relevant. (This is to avoid confusing new users who happen to edit with that same IP address.)
#Empty categories.
#User and talk pages on request of the user, where there is no significant abuse, and no administrative need to retain the page. 

[[Category:Community|Candidates for speedy deletion]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Community Portal</title>
    <ns>4</ns>
    <id>1526</id>
      <sha1>08zg59altwgsmqgipzhvfvvd5lg99we</sha1>
    <revision>
      <id>3869</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="3275">'''Welcome to {{SITENAME}}!''' The Community Portal is where this wiki community comes together to organize and discuss projects for the wiki. To see the most recent discussions, click the '''Discussion''' tab above.

You can find out more general information about the wiki on the [[Project:About|About]] page.

==New to wikis?==
* If you are new to wikis, you may want to read the '''[[Help:Tutorial 1|tutorial]]'''.
* There is some advice on getting this wiki started at '''[[Help:Starting this wiki]]'''.
* A list of most help pages can be found on '''[[Help:Contents]]''' and in '''[[:Category:Help]]'''.

==How to help out==
* If you want to help but you're not sure where to start, try improving the various '''[[:Category:Article stubs|stub]]''' articles by adding content.
* Another helpful activity would be to check the list of '''[[Special:WantedPages|wanted pages]]''' for frequently linked-to articles that don't exist yet.
* To follow the changes to this wiki, and to look out for new users and edits use '''[[Special:RecentChanges|recent changes]]'''.
* You can find a list of useful templates on '''[[:Category:Templates]]''', some of which are documented on '''[[{{ns:project}}:Templates]]'''.
* If you need help editing, you could start with '''[[Help:Editing]]''' or '''[[Help:Tutorial 1|the tutorial]]'''.

==Want to discuss stuff?==
* If you want to discuss anything specific to an article, you can use '''[[Help:Talk page|the talk page]]''' for that article.
* For more general discussions you can use the Discussion tab of this page, or a Forum if the forums have been set up.

==Things to do==
{{col-begin}}
{{col-2}}
; Useful activities
* Help expand some '''[[:Category:Article stubs|article stubs]]'''.
* '''[[Special:ShortPages|Locate]]''' and '''[[Template:Stub|mark]]''' pages that need expanding as [[:Category:Article stubs|article stubs]].
* Create links to some '''[[Special:LonelyPages|orphaned pages]]'''.
* Upload and add some images! Visit '''[[Special:Upload]]'''. Add them to a category too, like &lt;nowiki&gt;[[&lt;/nowiki&gt;[[:Category:Images]]&lt;nowiki&gt;]]&lt;/nowiki&gt;.
* Write a new article that's on '''[[Special:WantedPages|the wanted list]]'''!
* Fix any '''[[Special:DoubleRedirects|double redirects]]''' by redirecting the first page to the third page.
* Check for '''[[Special:BrokenRedirects|broken redirects]]''' and either mark them for deletion or find a more appropriate target.
* Consider splitting up very '''[[Special:LongPages|long pages]]''' into different pages or subpages.
* Create some links on '''[[Special:DeadendPages|dead end pages]]'''.
* ''Add more...''

{{col-2}}
; Other useful special pages
*[[Special:BrokenRedirects]]
*[[Special:DoubleRedirects]]
*[[Special:UncategorizedCategories]]
*[[Special:UncategorizedImages]]
*[[Special:UncategorizedPages]]
*[[Special:UnusedImages]]
*[[Special:WantedCategories]]
*'''Check out the full list of special pages at [[Special:SpecialPages]].'''
{{col-end}}

==Some other interesting pages==
* Want to find out what you've done so far? Visit [[Special:Mycontributions|your contributions page]].
* Find out more about the wiki on '''[[Special:WikiaStats]]''', '''[[Special:Statistics]]''' and '''[[Special:Version]]'''!

[[Category:Help|Community Portal]]
[[Category:Community| ]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Copyrights</title>
    <ns>4</ns>
    <id>1452</id>
      <sha1>184h6kou71fwrz3b41tx9pa3zf3a3b1</sha1>
    <revision>
      <id>3728</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="397">Except where otherwise specified, the text on Wikia sites is licensed under the Creative Commons Attribution-Share Alike License 3.0 (Unported) (CC-BY-SA). 

* [http://creativecommons.org/licenses/by-sa/3.0/ Read the license summary]
* [http://creativecommons.org/licenses/by-sa/3.0/legalcode Read the full legal code of the license].

Please see [[w:Wikia:Licensing|Wikia:Licensing]] for details.</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Policy</title>
    <ns>4</ns>
    <id>1516</id>
      <sha1>b059e8lq2v920jq830cx9t22yam2mtf</sha1>
    <revision>
      <id>3688</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="586">There are very few '''policies''' which apply across all Wikia. These can be found on the Central Wikia at [[Wikia:Category:Policy]]. 

Other policies for this Wikia should be decided by the wiki community. It's generally best to keep policies as simple as possible, and not to introduce too many rules. A growing wiki can usually do well with a few simple policies and a lot of goodwill and cooperation.  

Adding &lt;code&gt;&lt;nowiki&gt;[[Category:Policy]]&lt;/nowiki&gt;&lt;/code&gt; to any policy pages will add them to the policy category. This is found [[:Category:Policy|here]].

[[Category:Policy|*]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Privacy policy</title>
    <ns>4</ns>
    <id>1871</id>
      <sha1>9ylr0k7d4ba7t152zr09cmepugjmrii</sha1>
    <revision>
      <id>3812</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="194">''Please see Central Wikia [[w:Wikia:Privacy Policy|Privacy Policy]].'' 

[[Category:Policy|Privacy policy]]
[[Category:Community|Privacy policy]]
[[Category:Site administration|Privacy policy]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Protected page</title>
    <ns>4</ns>
    <id>1298</id>
      <sha1>ora2phmdai9b35hosiqwdz4xuyugxro</sha1>
    <revision>
      <id>3081</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="3126">[[Project:Administrators|Administrators]] can '''protect''' and '''unprotect''' pages, including ones that do not exist. Protection of a page or image usually means that a non-admin cannot modify it.

The majority of pages on all Wikia should remain publicly editable, and '''not protected'''. Pages may, however, be temporarily or permanently protected for legal reasons (for example, license texts should not be changed) or in cases of extreme vandalism or edit warring or abusive re-creation.

==Uses==
*Protecting highly vandalised pages, such as the [[Main Page]] on large wikis.
*Maintaining the integrity of the site's logo and favicon.
*Maintaining the integrity of key [[Project:copyrights|copyright]] and license pages.
*Preventing repeatedly created vandal or spam pages from creation. See [[Special:Protectedtitles]]
*Protecting the interface and system messages in the MediaWiki namespace (these are protected automatically)

A '''temporary''' protection is used for:
*Enforcing a &quot;cool down&quot; period to stop an &quot;edit war&quot;, upon request.
*Protecting a page or image that has been a recent target of ''persistent'' vandalism or ''persistent'' edits by a banned user. 

There is no need to protect personal .css and .js pages like user/monobook.css or user/cologneblue.js. Only the accounts associated with these pages (and admins) are able to edit them. (For more information on using these pages, see [[Help:User style]])

== Usage ==
Most pages and images are unprotected by default, only the site logo and favicons are automatically protected. You can protect editing, moving, or both by checking or unchecking the '''Unlock move permissions selection box'''.

*'''(default)''' means any user, whether logged in or anonymous, can edit or move the page. 
*'''Block unregistered users''', or semi-protected, means anonymous users and new accounts less than 4 days old cannot edit and/or move pages.
*'''Sysops only''', or fully-protected, means only administrators may edit and/or move the page.

Pages can also be cascade protected, this will cause all images, pages, or templates transcluded onto the page to be fully protected, even if the main article is only semi-protected.

==Rules==
#Do not make the common mistake of protecting pages unnecessarily. For example, do not protect a page simply because it is the Main Page.
#Do not [[Help:Editing|edit]] a temporarily protected page except to add a notice explaining the page is protected.
#Do not protect a page you are involved in an edit dispute over. Admin powers are not editor privileges - admins should only act as servants to the user community at large. 
#Avoid favoring one version of the article over another, unless one version is vandalism. 
#Temporarily protected pages should not be left protected for very long.
#Talk pages and user talk pages are not protected except in extreme circumstances.
#The protection of a page on any particular version is not meant to express support for that version and requests should therefore not be made that the protected version be reverted to a different one.

[[Category:Site administration|{{PAGENAME}}]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Sandbox</title>
    <ns>4</ns>
    <id>1518</id>
      <sha1>t50393nc64rzcrta6iui4rdirxyweys</sha1>
    <revision>
      <id>3020</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1684">{{sandbox}}
&lt;!--COMMENT  Please do not make any changes above this line.  
                         Feel free to make any changes below.
                         This is the sandbox where you can play and try out wiki editing safely. --&gt;

This page is for any tests.

Welcome to the sandbox!

Anyone can edit this.

==Simple Editing==

To edit a page, click on the &quot;edit&quot; tab, usually near the top of the page.  Then, edit the box in the page.  Feel free to practice here, on this page.  It's here just for you to practice.

A blank line indicates a paragraph separation.

You can link to another page by putting the name or title of that page in double square brackets. 
&lt;nowiki&gt;[[Main Page]]&lt;/nowiki&gt; becomes [[Main Page]].

==Simple Formatting==

Create headers by putting text inbetween repeated equal (=) signs.  The more =, the lower level the heading is.

Create a bulleted list by starting each item with an asterisk (*)
* it's ok to make editing mistakes
* you can preview your work before saving it
* even after saving it, you or someone else can edit it again to make it even better

==Formatting for Emphasis==

Put single quote marks around words or phrases for formatting emphasis.

Two single quotes, like &lt;nowiki&gt;''italics''&lt;/nowiki&gt; will create ''italics''.

Three single quotes, like &lt;nowiki&gt;'''bold text'''&lt;/nowiki&gt; will create '''bold text'''.

----
Other stuff...

If you know HTML or CSS formatting commands, they can also be used in this wiki.  One useful HTML command is &lt;nowiki&gt;&lt;br /&gt;&lt;/nowiki&gt; which creates a line break.

If you want to show what a command looks like, rather than actually implementing the command, surround it with the '''nowiki''' command.</text>
    </revision>
  </page>
  <page>
    <title>Wikia API Wiki:Templates</title>
    <ns>4</ns>
    <id>1821</id>
      <sha1>0o9asey36c69qrb6gquuj84zooa4dwz</sha1>
    <revision>
      <id>3823</id>
      <timestamp>2011-08-16T19:58:26Z</timestamp>
      <contributor>
        <username>Default</username>
        <id>49312</id>
      </contributor>
      <text xml:space="preserve" bytes="5500">{{tocright}}
There are many '''templates''' in use in {{SITENAME}}; these are only a subset, representing some of the most important and commonly used ones. If you feel that a template belongs on this page, do not hesitate to add it.
* [[:Category:Templates]] should cover all templates in the wiki, categorized into the various subcategories.
* The Template namespace (found from [[Special:Allpages]]) always has all templates in the wiki, sorted alphanumerically.

== What are templates? ==
Wiki templates provide a means to insert the same content over and over in different (or the same) pages. This saves editors the hassle of duplicating the same text again and again, and also helps ensure consistency.

Templates are generally shown with the format required to use the template (e.g. &lt;code&gt;{{t|stub}}&lt;/code&gt;). Clicking the template name takes you to the template's page, where you can see what it looks like and how it is used. 

'''Detailed instructions on the usage of each template should exist on:
# '''a subpage using {{t|documentation}}'''; or
# the template page itself (inside &quot;noinclude&quot; tags); or
# the template's talk page.

For more information on templates, see [[Help:Templates]].

== [[:Category:Article management templates|Article management templates]] ==
=== Nominate an article for deletion ===
{{t|delete}}
* Add this to an article to nominate it for deletion. It will add the article to [[:Category:Candidates for deletion]].
{{t|speedydelete|reason}}
* Add this to an article for pages that qualify for [[{{ns:project}}:Candidates for speedy deletion|speedy deletion]].

=== Disambiguation articles ===
{{t|disambig}}
* If you have several articles that have similar or identical names, you may wish to create a &quot;disambiguation&quot; page at the main article name, with the articles taking an extra phrase in brackets afterwards. For example:
: '''The Prince'''  &lt;--  disambiguation page, with links to:
:: The Prince (frog)
:: The Prince (human)
* Using {{t|disambig}} marks an article as a disambiguation page by adding a banner to the article and categorizing it under [[:Category:Disambiguations]]. Add links to the various articles under the banner.
* For more information, see [[Help:Disambiguation]].

=== Stubs ===
{{t|stub}}
* When a page has little or no useful information, then it is likely a stub. This template will include them in [[:Category:Article stubs]], and is used to list which articles need expanding.
* For more information, see [[Help:Stubs]].

== [[:Category:Category templates|Category templates]] ==
=== General category template ===
{{t|category}}
* This can be added to categories to add general categorising details. Use in cases where it may be useful to point out to users how to categorise, such as popular categories.

=== Template category template ===
{{t|templatecategory}}
* This should be added to any template-related categories, to list template-specific categorising details, which differ from those of normal pages.

== [[:Category:General wiki templates|General wiki templates]] ==
=== Clear ===
{{t|clr}}, plus {{t|clrl}} and {{t|clrr}}
* This template is used to reduce the amount of non-wikicode used on pages, replacing the code &lt;code&gt;&amp;lt;br style=&quot;clear:both;&quot; /&amp;gt;&lt;/code&gt;. Its use should generally be avoided.
* You can use {{t|clr}} instead of the HTML tag that clears space below things like images, pictures and tables, so the following stuff doesn't begin until the bottom of the image, picture or table box.
* You can also use {{t|clrl}} or {{t|clrr}} to clear only left or right floats.

=== For ===
{{t|for|name|link}}
* Use at the top of articles as a simple &quot;for x see y&quot; template.

=== Main article ===
{{t|main|main article}}
* Use at the start of a section to link to the main article on it.

=== Right-aligned Table of Contents ===
{{t|tocright}}
* This template floats the table of contents (toc) on the right. It should only be used when absolutely necessary, to keep consistent design.

=== Sandbox ===
{{t|sandbox}}
* A template that should be used to head up all [[Project:Sandbox]] pages.

=== T is for template ===
{{t|t|template}}
* This template allows you to show example template code (with a link to the templates) without using the template itself. It is used extensively on this page.

=== Welcome ===
{{t|welcIP}} ''and'' {{t|welcome}} 
*The first (with longer version &quot;welcomeIP&quot; for those of you who like typing more) is to welcome new non-vandalistic contributors who are &quot;anonymous&quot;, identified only by their IP number; it encourages them to register.
* The second template is for welcoming new registered users. Should be customized for the wiki, indicating the pages we most want newcomers to visit.
*The above two templates are very suitable for having &quot;subst:&quot; prefixed, because they can be edited with additions or deletions appropriate to the apparent strengths of the person being welcomed; e.g. if the contributor has already demonstrated good wiki editing skills you could delete references to pages about &quot;how to edit&quot;.

=== Wikipedia ===
{{t|wikipedia}}, {{t|wikipedia-deleted}}
* Wikipedia-related templates. Use {{t|wikipedia}} for articles taken directly from Wikipedia, and {{t|wikipedia-deleted}} for articles deleted from Wikipedia.

[[Category:Templates| ]]

==Where you may find more templates==
*[[w:c:templates|Wikia Templates]]
*Wikipedia; may be copied with the proper acknowledgment, but some need tweaking to work properly on Wikia, so use a Wikia one if possible.</text>
    </revision>
  </page>
  <page>
    <title>Wikia API dictionary</title>
    <ns>0</ns>
    <id>2672</id>
    <redirect title="Wikia Content API" />
      <sha1>0femuiiuvkdlwabzwnalshwxz89t1rh</sha1>
    <revision>
      <id>5135</id>
      <timestamp>2013-09-18T19:24:55Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>Shareif moved page [[Wikia API dictionary]] to [[Wikia Content API dictionary]]</comment>
      <text xml:space="preserve" bytes="42">#REDIRECT [[Wikia Content API dictionary]]</text>
    </revision>
    <revision>
      <id>5224</id>
      <timestamp>2013-10-29T16:19:05Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>fix double redirect</comment>
      <text xml:space="preserve" bytes="31">#REDIRECT [[Wikia Content API]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia Challenge: PhotoPop</title>
    <ns>0</ns>
    <id>2144</id>
      <sha1>sqob8sxkfai9u9z170gxyvs4xr3idpk</sha1>
    <revision>
      <id>4308</id>
      <timestamp>2011-11-10T19:06:19Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;&lt;mainpage-leftcolumn-start /&gt; =='''Wikia Challenge: PhotoPop'''== &lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt; Ho...&quot;</comment>
      <text xml:space="preserve" bytes="1171">&lt;mainpage-leftcolumn-start /&gt;
=='''Wikia Challenge: PhotoPop'''==
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
===Description===

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at [http://www.wikia.com/Wikia|Wikia.com].

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4309</id>
      <timestamp>2011-11-10T19:07:32Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1135">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
===Description===

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at [http://www.wikia.com/Wikia|Wikia.com].

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4310</id>
      <timestamp>2011-11-10T19:11:05Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1208">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
=='''Description'''==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at Wikia.com.
=='''Wikia APIs/Frameworks Used'''==
[[Documentation#MediaWiki_API_Documentation|MediaWikia API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;</text>
    </revision>
    <revision>
      <id>4311</id>
      <timestamp>2011-11-10T19:11:32Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1233">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
=='''Description'''==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at Wikia.com.
=='''Wikia APIs/Frameworks Used'''==
[[Documentation#MediaWiki_API_Documentation|MediaWikia API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4322</id>
      <timestamp>2011-11-10T22:35:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1238">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
=='''Description'''==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at Wikia.com.
=='''Wikia APIs/Frameworks Used'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4325</id>
      <timestamp>2011-11-10T22:45:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>Protected &quot;[[Wikia Challenge: PhotoPop]]&quot; ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve" bytes="1238">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
=='''Description'''==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at Wikia.com.
=='''Wikia APIs/Frameworks Used'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4331</id>
      <timestamp>2011-11-13T00:38:54Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1268">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
=='''Description'''==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

All this great content and more come from the active communities of passionate fans at Wikia.com.
=='''Wikia APIs/Frameworks Used'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>4380</id>
      <timestamp>2011-11-25T03:59:07Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>where to play</comment>
      <text xml:space="preserve" bytes="1425">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
=='''Description'''==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

Play this game on the [http://www.wikia.com/Challenge/PhotoPop/Play web] or download the [https://market.android.com/details?id=com.wikia.app.PhotoPop&amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS53aWtpYS5hcHAuUGhvdG9Qb3AiXQ.. mobile app for Android].

=='''Wikia APIs/Frameworks Used'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5122</id>
      <timestamp>2013-09-18T19:07:37Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1132">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
==Description==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

Play this game on the [http://www.wikia.com/Challenge/PhotoPop/Play web] or download the [https://market.android.com/details?id=com.wikia.app.PhotoPop&amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS53aWtpYS5hcHAuUGhvdG9Qb3AiXQ.. mobile app for Android].

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5123</id>
      <timestamp>2013-09-18T19:09:04Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1146">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
==Description==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

Play this game on the [http://www.wikia.com/Challenge/PhotoPop/Play web] or download the [https://market.android.com/details?id=com.wikia.app.PhotoPop&amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS53aWtpYS5hcHAuUGhvdG9Qb3AiXQ.. mobile app for Android].
&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5144</id>
      <timestamp>2013-09-18T19:48:43Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Description */</comment>
      <text xml:space="preserve" bytes="1068">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery spacing=&quot;small&quot; orientation=&quot;none&quot; captionsize=&quot;small&quot; captionposition=&quot;within&quot; captionalign=&quot;left&quot;&gt;
Home.PNG
Jacob Black.PNG
Miss Piggy.PNG
Beaker.png
Fozzie.png
Finish.PNG
&lt;/gallery&gt;
==Description==

PhotoPop is a fast-paced photo-guessing game created for the fans, by the fans! Think you know your favorite TV shows and movies better than your friends? Prove it!

Your goal is to guess the identity of your favorite pop culture characters as quickly as possible -- the faster you guess correctly, the more points you earn. Photos and answers are pulled straight from Wikia’s live wikis, so it's always fun and fresh. Here are some sample game subjects:

*Twilight
*Muppets

Play this game on the [http://www.wikia.com/Challenge/PhotoPop/Play web] or download from [https://play.google.com/store/apps/details?id=com.wikia.app.GameGuides Google Play] .&lt;br /&gt;
&lt;br /&gt;

&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia Content API</title>
    <ns>0</ns>
    <id>2651</id>
      <sha1>4fi8cwdt55dkrnsrr0jj3yhd0k6coy7</sha1>
    <revision>
      <id>5069</id>
      <timestamp>2013-09-05T13:22:41Z</timestamp>
      <contributor>
        <username>Idradm</username>
        <id>5949548</id>
      </contributor>
      <comment>Created page with &quot;This article describes concepts used in API documentation site.  API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList  ==Dictionary=...&quot;</comment>
      <text xml:space="preserve" bytes="4157">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==Dictionary==
#Wiki - Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.
#Page - Single sub-page in the wiki, it can be article page, file page, category page, etc.
#Article - Single sub-page in the wiki but only belonging to the article namespace.
#Namespace - Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.
#Title - in the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.
#File - any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.
#Category - Categories are defined by users. Every article can have unlimited number of categories.
#Hub - each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.
#Revision - Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
namespaces: comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

category: category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

hub: hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

lang: two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

ids: articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

titles: page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

module: marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

vertical: id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===WikisAPI===
this API is only available on www.wikia.com domain
===WAMAPI===
this API is only available on www.wikia.com domain
===WikiaHubsApi===
this API is only available on www.wikia.com domain
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5075</id>
      <timestamp>2013-09-09T17:04:28Z</timestamp>
      <contributor>
        <username>Idradm</username>
        <id>5949548</id>
      </contributor>
      <comment>*</comment>
      <text xml:space="preserve" bytes="7452">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
Articles - acquire informations about articles:
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en )

Wikis - acquire informations about Wikis:
* get Wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 )
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 )
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 )
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex )
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )

Search - acquire search results for Wikia:
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

User - get information about Wikia users:
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
#Wiki - Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.
#Page - Single sub-page in the wiki, it can be article page, file page, category page, etc.
#Article - Single sub-page in the wiki but only belonging to the article namespace.
#Namespace - Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.
#Title - in the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.
#File - any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.
#Category - Categories are defined by users. Every article can have unlimited number of categories.
#Hub - each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.
#Revision - Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
namespaces: comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

category: category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

hub: hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

lang: two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

ids: articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

titles: page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

module: marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

vertical: id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===WikisAPI===
this API is only available on www.wikia.com domain
===WAMAPI===
this API is only available on www.wikia.com domain
===WikiaHubsApi===
this API is only available on www.wikia.com domain
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5076</id>
      <timestamp>2013-09-09T17:10:53Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* API Features */</comment>
      <text xml:space="preserve" bytes="7472">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en )

===Wikis - acquire informations about Wikis===
* get Wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 )
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 )
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 )
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex )
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )

===Search - acquire search results for Wikia===
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
#Wiki - Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.
#Page - Single sub-page in the wiki, it can be article page, file page, category page, etc.
#Article - Single sub-page in the wiki but only belonging to the article namespace.
#Namespace - Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.
#Title - in the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.
#File - any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.
#Category - Categories are defined by users. Every article can have unlimited number of categories.
#Hub - each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.
#Revision - Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
namespaces: comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

category: category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

hub: hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

lang: two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

ids: articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

titles: page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

module: marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

vertical: id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===WikisAPI===
this API is only available on www.wikia.com domain
===WAMAPI===
this API is only available on www.wikia.com domain
===WikiaHubsApi===
this API is only available on www.wikia.com domain
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5082</id>
      <timestamp>2013-09-17T08:59:03Z</timestamp>
      <contributor>
        <username>Maciej Szumocki</username>
        <id>5838890</id>
      </contributor>
      <text xml:space="preserve" bytes="7430">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikis - acquire informations about Wikis===
* get Wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only
===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
#Wiki - Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.
#Page - Single sub-page in the wiki, it can be article page, file page, category page, etc.
#Article - Single sub-page in the wiki but only belonging to the article namespace.
#Namespace - Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.
#Title - in the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.
#File - any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.
#Category - Categories are defined by users. Every article can have unlimited number of categories.
#Hub - each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.
#Revision - Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
namespaces: comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

category: category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

hub: hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

lang: two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

ids: articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

titles: page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

module: marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

vertical: id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5120</id>
      <timestamp>2013-09-18T19:06:22Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* Dictionary */</comment>
      <text xml:space="preserve" bytes="7483">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikis - acquire informations about Wikis===
* get Wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only
===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
'''Wiki''' - Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

'''Page''' - Single sub-page in the wiki, it can be article page, file page, category page, etc.

'''Article''' - Single sub-page in the wiki but only belonging to the article namespace.

'''Namespace''' - Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

'''Title''' - in the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

'''File''' - any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

'''Category''' - Categories are defined by users. Every article can have unlimited number of categories.

'''Hub''' - each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

'''Revision''' - Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
namespaces: comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

category: category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

hub: hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

lang: two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

ids: articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

titles: page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

module: marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

vertical: id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5124</id>
      <timestamp>2013-09-18T19:09:49Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* Complex parameters */</comment>
      <text xml:space="preserve" bytes="7530">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikis - acquire informations about Wikis===
* get Wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only
===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
'''Wiki''' - Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

'''Page''' - Single sub-page in the wiki, it can be article page, file page, category page, etc.

'''Article''' - Single sub-page in the wiki but only belonging to the article namespace.

'''Namespace''' - Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

'''Title''' - in the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

'''File''' - any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

'''Category''' - Categories are defined by users. Every article can have unlimited number of categories.

'''Hub''' - each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

'''Revision''' - Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5126</id>
      <timestamp>2013-09-18T19:11:17Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* Dictionary */</comment>
      <text xml:space="preserve" bytes="7520">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikis - acquire informations about Wikis===
* get Wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only
===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5129</id>
      <timestamp>2013-09-18T19:11:56Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* Wikis - acquire informations about Wikis */</comment>
      <text xml:space="preserve" bytes="7523">This article describes concepts used in API documentation site.

API documentation address: http://www.wikia.com/wikia.php?controller=DiscoverApi&amp;method=getList

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5133</id>
      <timestamp>2013-09-18T19:24:25Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="7465">This article describes concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]''' .

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5134</id>
      <timestamp>2013-09-18T19:24:55Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <minor/>
      <comment>Shareif moved page [[Wikia API dictionary]] to [[Wikia Content API dictionary]]</comment>
      <text xml:space="preserve" bytes="7465">This article describes concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]''' .

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getDetails&amp;ids=50&amp;abstract=100&amp;width=200&amp;height=200 )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getList&amp;limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTop )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/wikia.php?controller=ArticlesApi&amp;method=getTopByHub&amp;hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: http://muppet.wikia.com/wikia.php?controller=ActivityApi&amp;method=getLatestActivity&amp;limit=10&amp;namespaces=0&amp;allowDuplicates=true )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=RelatedPagesApi&amp;method=getList&amp;ids=50&amp;limit=3 )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: http://www.wikia.com/wikia.php?controller=WikiaHubsApi&amp;method=getModuleData&amp;module=1&amp;vertical=2&amp;lang=en ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchApi&amp;method=getList&amp;query=kermit&amp;limit=25&amp;namespaces=0%2C14 )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/wikia.php?controller=SearchSuggestionsApi&amp;method=getList&amp;query=los )

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5136</id>
      <timestamp>2013-09-18T19:33:34Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* Articles - acquire informations about articles */</comment>
      <text xml:space="preserve" bytes="7677">This article describes concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]''' .

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200] )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true] )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3] )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en] ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14] )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los )

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getDetails&amp;ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getList&amp;limit=25&amp;batch=1 ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: http://www.wikia.com/wikia.php?controller=WikisApi&amp;method=getByString&amp;string=call&amp;limit=25&amp;batch=1 ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/wikia.php?controller=WAMApi&amp;method=getWAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/wikia.php?controller=NavigationApi&amp;method=getData )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: http://www.wikia.com/wikia.php?controller=SearchApi&amp;method=getCrossWiki&amp;query=call&amp;lang=en&amp;limit=25 ) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5137</id>
      <timestamp>2013-09-18T19:36:30Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* Wikias - acquire informations about wikias */</comment>
      <text xml:space="preserve" bytes="7734">This article describes concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]''' .

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200] )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true] )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3] )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en] ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14] )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los )

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1] ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1] ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25] ) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/wikia.php?controller=UserApi&amp;method=getDetails&amp;ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5138</id>
      <timestamp>2013-09-18T19:37:38Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* User - get information about Wikia users */</comment>
      <text xml:space="preserve" bytes="7701">This article describes concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]''' .

==API Features==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200] )
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25 )
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top )
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming )
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true] )
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3] )
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en] ) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14] )
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los )

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125 ) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1] ) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1] ) - - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex ) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data )
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25] ) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21 )

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5139</id>
      <timestamp>2013-09-18T19:40:01Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* API Features */</comment>
      <text xml:space="preserve" bytes="7685">This article describes concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]''' .

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5140</id>
      <timestamp>2013-09-18T19:40:48Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="7714">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5141</id>
      <timestamp>2013-09-18T19:47:58Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <text xml:space="preserve" bytes="8013">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/
Before using it please read '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5142</id>
      <timestamp>2013-09-18T19:48:11Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <minor/>
      <comment>Shareif moved page [[Wikia Content API dictionary]] to [[Wikia Content API]]</comment>
      <text xml:space="preserve" bytes="8013">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/
Before using it please read '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5146</id>
      <timestamp>2013-09-18T19:51:53Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* How to access Wikia Content API? */</comment>
      <text xml:space="preserve" bytes="8165">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on [http://www.wikia.com/api/v1/ http://www.wikia.com/api/v1/]

Before using it please read '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5148</id>
      <timestamp>2013-09-18T19:52:09Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>/* How to access Wikia Content API? */</comment>
      <text xml:space="preserve" bytes="8147">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using it please make sure to read '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5150</id>
      <timestamp>2013-09-18T19:56:40Z</timestamp>
      <contributor>
        <ip>74.120.190.9</ip>
      </contributor>
      <comment>/* How to access Wikia Content API? */</comment>
      <text xml:space="preserve" bytes="8158">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5181</id>
      <timestamp>2013-09-20T15:17:15Z</timestamp>
      <contributor>
        <ip>92.240.190.14</ip>
      </contributor>
      <comment>/* SearchSuggestionsApi */</comment>
      <text xml:space="preserve" bytes="8186">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
​{{DIRECTIONMARK}}{{WelcomeIP}}SearchSuggestionsApi
this API is not available on the main domain

===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5202</id>
      <timestamp>2013-09-25T14:44:37Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/92.240.190.14|92.240.190.14]] ([[User talk:92.240.190.14|talk]] | [[Special:Block/92.240.190.14|block]]) to last version by [[User:74.120.190.9|74.120.190.9]]</comment>
      <text xml:space="preserve" bytes="8158">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc.

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5219</id>
      <timestamp>2013-10-26T06:23:49Z</timestamp>
      <contributor>
        <ip>123.237.52.119</ip>
      </contributor>
      <comment>/* Page */</comment>
      <text xml:space="preserve" bytes="8160">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://muppet.wikia.com/api/v1/Articles/TopByHub/?hub=gaming)
* get lately changed articles on given Wikia (controller: ActivityApi, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/ActivityApi/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://muppet.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc...

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5221</id>
      <timestamp>2013-10-29T16:12:11Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>/* Articles - acquire informations about articles */</comment>
      <text xml:space="preserve" bytes="8176">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/api/v1/Articles/TopByHub/?hub=gaming) - available of www.wikia.com only
* get lately changed articles on given Wikia (controller: Activity, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc...

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5222</id>
      <timestamp>2013-10-29T16:13:35Z</timestamp>
      <contributor>
        <username>TyA</username>
        <id>1929113</id>
      </contributor>
      <minor/>
      <comment>/* User - get information about Wikia users */</comment>
      <text xml:space="preserve" bytes="8183">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/api/v1/Articles/TopByHub/?hub=gaming) - available of www.wikia.com only
* get lately changed articles on given Wikia (controller: Activity, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/api/v1/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc...

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5253</id>
      <timestamp>2013-12-20T15:14:32Z</timestamp>
      <contributor>
        <ip>151.27.83.25</ip>
      </contributor>
      <text xml:space="preserve" bytes="8189">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''h gggv
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/api/v1/Articles/TopByHub/?hub=gaming) - available of www.wikia.com only
* get lately changed articles on given Wikia (controller: Activity, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/api/v1/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc...

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5255</id>
      <timestamp>2013-12-21T02:45:37Z</timestamp>
      <contributor>
        <username>Chinhodado</username>
        <id>3215514</id>
      </contributor>
      <comment>typo</comment>
      <text xml:space="preserve" bytes="8188">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has its API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''h gggv
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/api/v1/Articles/TopByHub/?hub=gaming) - available of www.wikia.com only
* get lately changed articles on given Wikia (controller: Activity, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/api/v1/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc...

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
    <revision>
      <id>5258</id>
      <timestamp>2013-12-23T01:11:54Z</timestamp>
      <contributor>
        <username>Ghhghgh</username>
        <id>4982525</id>
      </contributor>
      <minor/>
      <comment>undoing some spam</comment>
      <text xml:space="preserve" bytes="8183">This article describes basics of Wikia Content API an concepts used in '''[http://www.wikia.com/api/v1/ API documentation page]'''.
==How to access Wikia Content API?==
Every wikia has it's API accessible through URL: ''{wikidomain}/api/v1/.''

'''For example:'''
*http://www.wikia.com/api/v1/
*http://naruto.wikia.com/api/v1/
*http://elderscrolls.wikia.com/api/v1/

Please note that some methods (such us WAM score or wikia details) are available only on http://www.wikia.com/api/v1/

Before using our API, please make sure to read our '''[[Terms of Use|terms of use]]'''.

==Usage examples==
===Articles - acquire informations about articles===
* article details e.g. title, url, abstract, thumbnail, last revision number (controller: ArticlesApi, method: getDetails, sample: [http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200 http://muppet.wikia.com/api/v1/Articles/Details/?ids=50&amp;abstract=100&amp;width=200&amp;height=200])
* alphabetical article list (controller: ArticlesApi, method: getList, sample: http://muppet.wikia.com/api/v1/Articles/List/?limit=25)
* get most popular articles on given Wikia (controller: ArticlesApi, method: getTop, sample: http://muppet.wikia.com/api/v1/Articles/Top)
* get most popular articles on given hub (controller: ArticlesApi, method: getTopByHub, sample: http://www.wikia.com/api/v1/Articles/TopByHub/?hub=gaming) - available of www.wikia.com only
* get lately changed articles on given Wikia (controller: Activity, method: getLatestActivity, sample: [http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true http://muppet.wikia.com/api/v1/Activity/LatestActivity/?limit=10&amp;namespaces=0&amp;allowDuplicates=true])
* get articles related to given article (controller: RelatedPagesApi, method: getList, sample: [http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3 http://muppet.wikia.com/api/v1/RelatedPages/List/?ids=50&amp;limit=3])
* explore articles according to hub (controller: WikiaHubsApi, method: getModuleData, sample: [http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en http://www.wikia.com/api/v1/WikiaHubs/ModuleData/?module=1&amp;vertical=2&amp;lang=en]) - available on www.wikia.com only
* get article list for a given search phrase on the wiki (controller: SearchApi, method: getList, sample: [http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14 http://muppet.wikia.com/api/v1/Search/List/?query=kermit&amp;limit=25&amp;namespaces=0%2C14])
* get suggestion list for given search phrase on the wiki (controller: SearchSuggestionsApi, method: getList, sample: http://muppet.wikia.com/api/v1/SearchSuggestions/List/?query=los)

===Wikias - acquire informations about wikias===
* get wikia details like title, url, top contributors list, statistical infromations (number of articles, videos etc.) (controller: WikisApi, method: getDetails, sample: http://www.wikia.com/api/v1/Wikis/Details/?ids=125) - available on www.wikia.com only
* get top wikis list, that can be filtered by hub (controller: WikisApi, method: getList, sample: [http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/List/?limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis by title fragment (controller: WikisApi, method: getByString, sample: [http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1 http://www.wikia.com/api/v1/Wikis/ByString/?string=call&amp;limit=25&amp;batch=1]) - available on www.wikia.com only
* get wikis list by WAM index (controller: WAMApi, method: getWAMIndex, sample: http://www.wikia.com/api/v1/WAM/WAMIndex) - - available on www.wikia.com only
* get navigation lists displayed on the wikis navabar (controller: NavigationApi, method: getData, sample: http://www.wikia.com/api/v1/Navigation/Data)
* get wiki list for given search phrase (controller: SearchApi, method: getCrossWiki, sample: [http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25 http://www.wikia.com/api/v1/Search/CrossWiki/?query=call&amp;lang=en&amp;limit=25]) - available on www.wikia.com only

===User - get information about Wikia users===
* get user details (controller: UserApi, method: getDetails, sample: http://muppet.wikia.com/api/v1/User/Details/?ids=21)

==Dictionary==
===Wiki===
Single instance of a website about given subject, usually under &lt;xyz-domain&gt;.wikia.com.

===Page===

Single sub-page in the wiki, it can be article page, file page, category page, etc...

===Article===

Single sub-page in the wiki but only belonging to the article namespace.

===Namespace===

Pages on a MediaWiki are grouped into collections called &quot;namespaces&quot;, which differentiate between the purpose of the pages at a high level. Pages in certain namespaces can also have special properties or behave differently when they interact with other pages.

===Title===

In the mediawiki system, Namespace+Title is an universal identifier for resources. Every resource (Article, File, Category, etc) has it’s title and it is as good as numeric ID.

===File===

Any media element supported by Wikia (mainly videos and images) which are stored in a file page of a given wiki. Files are stored in namespace number 6. Wikia does not host video streams itself, we store only thumbnail and metadata, video streams comes from external providers.

===Category===

Categories are defined by users. Every article can have unlimited number of categories.

===Hub===

Each of the three main Wikia verticals which contain information related to either Videogames, Entertainment or Lifestyle.

===Revision===

Every article on the wiki has its revision. If user edit the article, new revision is created, the older version of the article is not deleted. You can access previous article revision by it’s revisionId.

==Complex parameters==
===Namespaces===
comma separated numbers should be provided
*“0” - will contain main namespace pages only
*“0,6” - will contain files and main namespace pages
*“6,14” - will contain files and category namespace pages

===Category===

category name should be provided, this param is case sensitive, also all special chars should be included, only one value is accepted
*“Characters”
*“Animated Characters”
*“Play-Along Video Characters”

===Hub===

hub name should be provided, param is case insensitive, only one value is accepted
*“gaming”
*“lifestyle”
*“entertainment”

===Lang===

two letter language code should be provided, comma separated multiple values are accepted
*“en”
*“en,de,es”
*“fr,it,pl”

one lang version: two letter language code should be provided, only one value is accepted
*“en”

===Ids===

articles id should be provided, comma separated multiple values are accepted
*“1”
*“2,60,3,6542”
*“544,50”

===Titles===

page title should be pass, this param is case sensitive, also all special chars should be included, comma separated multiple values are accepted
*“First”
*“First,Second,The Third One”
*“The Fourth: the Last”

===Module===

marketing module id as an number should be pass, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|module
|-
|1
|slider
|-
|3
|wikias-picks
|-
|4
|featured-video
|-
|5
|explore
|-
|6
|from-the-community
|-
|7
|polls
|-
|9
|popular-videos
|}
examples:
*“1”

===Vertical===

id representing category, one value is accepted
accepted values:
{| border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; class=&quot;article-table&quot; style=&quot;width: 500px;&quot;
|-
! scope=&quot;col&quot;|value
! scope=&quot;col&quot;|category
|-
|1
|humor
|-
|2
|gaming
|-
|3
|entertainment
|-
|4
|corporate
|-
|5
|toys
|-
|6
|food and drink
|-
|7
|travel
|-
|8
|education
|-
|9
|lifestyle
|-
|10
|finance
|-
|11
|politics
|-
|12
|technology
|-
|13
|science
|-
|14
|philosophy
|-
|15
|sports
|-
|16
|music
|-
|17
|creative
|-
|18
|auto
|-
|19
|green
|-
|20
|answers
|}
examples:
*“4”

==API accessibility==
===SearchSuggestionsApi===
this API is not available on the main domain
===RelatedPagesApi===
this API is not available on the main domain</text>
    </revision>
  </page>
  <page>
    <title>Wikia Content API dictionary</title>
    <ns>0</ns>
    <id>2673</id>
    <redirect title="Wikia Content API" />
      <sha1>rqwpq1uixnhmu3moxf3hkjn4fijcgrw</sha1>
    <revision>
      <id>5143</id>
      <timestamp>2013-09-18T19:48:11Z</timestamp>
      <contributor>
        <username>Shareif</username>
        <id>2240397</id>
      </contributor>
      <comment>Shareif moved page [[Wikia Content API dictionary]] to [[Wikia Content API]]</comment>
      <text xml:space="preserve" bytes="31">#REDIRECT [[Wikia Content API]]</text>
    </revision>
  </page>
  <page>
    <title>Wikia Game Guides</title>
    <ns>0</ns>
    <id>2136</id>
      <sha1>acbfetzrd4b8vzqrpryzzhchhpaxjbl</sha1>
    <revision>
      <id>4291</id>
      <timestamp>2011-11-10T18:39:54Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Created page with &quot;&lt;mainpage-leftcolumn-start /&gt;  =='''Wikia Game Guides'''== '''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt; GG_1.PNG GG_2.PNG GG_3.PNG GG_4.PN...&quot;</comment>
      <text xml:space="preserve" bytes="1546">&lt;mainpage-leftcolumn-start /&gt;

=='''Wikia Game Guides'''==
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
===Description===
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

===&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;===
[[Nirvana]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
Apps</text>
    </revision>
    <revision>
      <id>4292</id>
      <timestamp>2011-11-10T18:40:18Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1564">&lt;mainpage-leftcolumn-start /&gt;

=='''Wikia Game Guides'''==
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
===Description===
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

===&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;===
[[Nirvana]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
Apps
[[Category:Apps]]</text>
    </revision>
    <revision>
      <id>4293</id>
      <timestamp>2011-11-10T18:40:48Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Wikia Game Guides */</comment>
      <text xml:space="preserve" bytes="1559">&lt;mainpage-leftcolumn-start /&gt;

=='''Wikia Game Guides'''==
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
===Description===
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

===&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;===
[[Nirvana]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Apps]]</text>
    </revision>
    <revision>
      <id>4294</id>
      <timestamp>2011-11-10T18:41:30Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1584">&lt;mainpage-leftcolumn-start /&gt;

=='''Wikia Game Guides'''==
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
===Description===
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

===&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;===
[[Nirvana]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:Apps]]
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4295</id>
      <timestamp>2011-11-10T18:41:55Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1566">&lt;mainpage-leftcolumn-start /&gt;

=='''Wikia Game Guides'''==
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
===Description===
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

===&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;===
[[Nirvana]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4312</id>
      <timestamp>2011-11-10T19:17:56Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1545">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Nirvana]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4326</id>
      <timestamp>2011-11-10T22:47:45Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <text xml:space="preserve" bytes="1599">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_AP|_Documentation|Wikia Custom API]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4327</id>
      <timestamp>2011-11-10T22:48:08Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Wikia APIs/Frameworks Used */</comment>
      <text xml:space="preserve" bytes="1584">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_AP|Wikia Custom API]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4328</id>
      <timestamp>2011-11-10T22:48:47Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Wikia APIs/Frameworks Used */</comment>
      <text xml:space="preserve" bytes="1585">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API|Wikia Custom API]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4329</id>
      <timestamp>2011-11-10T22:49:17Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <minor/>
      <comment>/* Wikia APIs/Frameworks Used */</comment>
      <text xml:space="preserve" bytes="1599">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>4337</id>
      <timestamp>2011-11-13T00:44:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>Adding categories</comment>
      <text xml:space="preserve" bytes="1629">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available -- real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].
===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>4386</id>
      <timestamp>2011-11-30T20:13:46Z</timestamp>
      <contributor>
        <username>Tm T</username>
        <id>1427921</id>
      </contributor>
      <minor/>
      <comment>/* Description */ formatting (mobile)</comment>
      <text xml:space="preserve" bytes="1635">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available &amp;mdash; real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].

===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;&lt;/p&gt;

&lt;p style=&quot;border-style: initial; border-color: initial;&quot;&gt;__NORAIL__&lt;/p&gt;
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>4926</id>
      <timestamp>2012-10-12T09:06:29Z</timestamp>
      <contributor>
        <username>Lordxeen46</username>
        <id>4340336</id>
      </contributor>
      <minor/>
      <comment>wikia</comment>
      <text xml:space="preserve" bytes="1452">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available &amp;mdash; real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].

===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5057</id>
      <timestamp>2013-08-11T19:49:50Z</timestamp>
      <contributor>
        <username>The Milkman</username>
        <id>4237253</id>
      </contributor>
      <minor/>
      <comment>/* Features */</comment>
      <text xml:space="preserve" bytes="1468">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
The Wikia Game Guides application gives you detailed information about your favorite video games, powered by the best source available &amp;mdash; real players, real fans. Get the latest tips, tricks, and cheats from our top gaming wikis right on your mobile device.

This app is available on [http://itunes.apple.com/us/app/wikia-game-guides/id422467074?mt=8 iOS] (iPhone) and [https://market.android.com/details?id=com.wikia.app.GameGuides&amp;hl=en Android].

===Features===
The following games:
*Dragon Age I, Origins, II
*Fallout 1, New Vegas
*World of Warcraft from WoWWiki
*Call of Duty 1, Black Ops
*RuneScape
*FFXI from FFXIclopedia
*Dead Space 1, 2
*Half-Life
*Portal 1, 2
*Brink
*Witcher 1, 2
*Star Wars: The Old Republic
*Rage
*Uncharted 1, 2
*The Elder Scrolls V: Skyrim
*Mass Effect 1, 2
*Battlefield 1, 2, 4
*Gears of War 1, 2, 3
*Red Dead Revolver, Redemption, Gunslingers
*Brütal Legend

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5111</id>
      <timestamp>2013-09-18T18:59:49Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1551">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

===Features===
Customization: Search for and add ANY Wikia game to your home screen

Bookmark: No limit on pages and sections for offline viewing

Search: Game and article-level
Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order

Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

Collaborate: Join the community! Directly connect with the community to request more information or suggest changes
=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5112</id>
      <timestamp>2013-09-18T19:00:13Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve" bytes="1557">&lt;mainpage-leftcolumn-start /&gt;
'''&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot; captionalign=&quot;left&quot;&gt;
GG_1.PNG
GG_2.PNG
GG_3.PNG
GG_4.PNG
&lt;/gallery&gt;'''
=='''Description'''==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

===Features===
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing

*Search: Game and article-level
Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order

*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5113</id>
      <timestamp>2013-09-18T19:01:11Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1535">&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing

*Search: Game and article-level
Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order

*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5114</id>
      <timestamp>2013-09-18T19:01:45Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1565">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing

*Search: Game and article-level
Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order

*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5115</id>
      <timestamp>2013-09-18T19:02:20Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1572">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing

*Search: Game and article-level
Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order

*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5116</id>
      <timestamp>2013-09-18T19:02:40Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1579">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing

*Search: Game and article-level
Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order

*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;br /&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5117</id>
      <timestamp>2013-09-18T19:02:54Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Features */</comment>
      <text xml:space="preserve" bytes="1578">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing
*Search: Game and article-level
*Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order
*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

=='''&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;'''==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;br /&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5119</id>
      <timestamp>2013-09-18T19:05:38Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1772">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

Download from [https://itunes.apple.com/us/app/wikia-game-guides-walkthroughs/id422467074?mt=8 iTunes] or [https://play.google.com/store/apps/details?id=com.wikia.app.GameGuides&amp;hl=en Google Play] .

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing
*Search: Game and article-level
*Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order
*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes

==&lt;span class=&quot;mw-headline&quot; id=&quot;Wikia_APIs.2FFrameworks_Used&quot; style=&quot;border-style: initial; border-color: initial; &quot;&gt;Wikia APIs/Frameworks Used&lt;/span&gt;==
[[Documentation#Wikia_Custom_API_Documentation|Wikia Custom API]]
&lt;br /&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5127</id>
      <timestamp>2013-09-18T19:11:34Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1552">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

Download from [https://itunes.apple.com/us/app/wikia-game-guides-walkthroughs/id422467074?mt=8 iTunes] or [https://play.google.com/store/apps/details?id=com.wikia.app.GameGuides&amp;hl=en Google Play] .

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing
*Search: Game and article-level
*Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order
*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes
&lt;br /&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]
[[Category:Wikia Custom API]]</text>
    </revision>
    <revision>
      <id>5128</id>
      <timestamp>2013-09-18T19:11:55Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <text xml:space="preserve" bytes="1522">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

Download from [https://itunes.apple.com/us/app/wikia-game-guides-walkthroughs/id422467074?mt=8 iTunes] or [https://play.google.com/store/apps/details?id=com.wikia.app.GameGuides&amp;hl=en Google Play] .

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing
*Search: Game and article-level
*Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order
*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes
&lt;br /&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]</text>
    </revision>
    <revision>
      <id>5147</id>
      <timestamp>2013-09-18T19:52:02Z</timestamp>
      <contributor>
        <username>TranStanley</username>
        <id>3321936</id>
      </contributor>
      <comment>/* Description */</comment>
      <text xml:space="preserve" bytes="1532">&lt;mainpage-leftcolumn-start /&gt;
&lt;gallery widths=&quot;147&quot; spacing=&quot;small&quot; orientation=&quot;portrait&quot;&gt;
GG_iOS_Home.jpeg
GG_iOS_Search.jpeg
GG_iOS_Category.jpeg
GG_iOS_Article.jpeg
&lt;/gallery&gt;

==Description==
From the 65,000 mobile and video communities on Wikia comes the free Wikia Game Guides app that gives you sleek, easy-to-read walkthroughs, tips, cheats and guides for your favorite games. This app constantly updates with highly accurate information from Wikia’s vast fan communities and the millions of pages of content created by gamers just like you. No other app offers such a significant amount of highly accurate information on social, mobile and console games.

Download from [https://itunes.apple.com/us/app/wikia-game-guides-walkthroughs/id422467074?mt=8 iTunes] (iPhone) or [https://play.google.com/store/apps/details?id=com.wikia.app.GameGuides&amp;hl=en Google Play] .

==Features==
*Customization: Search for and add ANY Wikia game to your home screen

*Bookmark: No limit on pages and sections for offline viewing
*Search: Game and article-level
*Browse: Categories and articles created by Wikia’s gamer community and rank them in trending order
*Read: Enjoy a clean text-, image-, and video-browsing experience with font and text layout customization options

*Collaborate: Join the community! Directly connect with the community to request more information or suggest changes
&lt;br /&gt;
&lt;br /&gt;
&lt;mainpage-endcolumn /&gt;

&lt;mainpage-rightcolumn-start /&gt; {{MenuRail2}} &lt;mainpage-endcolumn /&gt;

__NORAIL__
[[Category:App Gallery]]</text>
    </revision>
  </page>
</mediawiki>
